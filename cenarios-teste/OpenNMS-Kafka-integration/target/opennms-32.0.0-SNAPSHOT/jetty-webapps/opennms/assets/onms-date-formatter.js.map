{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///./src/main/assets/js/apps/onms-date-formatter/index.js","webpack:///./src/main/assets/js/vendor/angular-js.js","webpack:///./src/main/assets/js/vendor/bootstrap-js.js","webpack:///./src/main/assets/js/vendor/jquery-js.js","webpack:///./src/main/assets/js/vendor/moment-js.js"],"names":["angular","require","moment","OnmsDateFormatter","prototype","init","readyCallback","self","defaultFormat","window","_onmsZoneId","undefined","xhr","XMLHttpRequest","onreadystatechange","readystatechange","readyState","DONE","status","config","JSON","parse","responseText","datetimeformatConfig","datetimeformat","_onmsDateTimeFormat","zoneId","console","log","statusText","e","open","setRequestHeader","send","assertInitialized","Error","getZoneId","_zoneId","warn","tz","guess","format","date","momentDate","formatJavaDTF","jest","f","_onmsFormatter","_context","module","factory","DateFormatterService","$interval","$q","deferred","defer","count","i","resolve","cancel","raw","formatter","promise","then","_filter","default","call","$filter","onmsDate","input","ifEmpty","ret","directive","dateFormatterService","restrict","compile","element","text","formatted","replaceWith","catch","error","exports","version","full","jQuery"],"mappings":"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","file":"onms-date-formatter.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn ","/* eslint no-console: 0 */\n\nconst angular = require('vendor/angular-js');\nconst moment = require('vendor/moment-js');\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction OnmsDateFormatter() {\n}\n\nOnmsDateFormatter.prototype.init = function init(readyCallback) {\n\tvar self = this;\n\tvar defaultFormat = \"yyyy-MM-dd'T'HH:mm:ssxxx\"; // eslint-disable-line quotes\n\twindow._onmsZoneId = undefined;\n\n\tvar xhr = new XMLHttpRequest();\n\txhr.onreadystatechange = function readystatechange() {\n\t\ttry {\n\t\t\tif (xhr.readyState === XMLHttpRequest.DONE) {\n\t\t\t\tif (xhr.status === 200) {\n\t\t\t\t\tvar config = JSON.parse(xhr.responseText);\n\t\t\t\t\tif (config.datetimeformatConfig && config.datetimeformatConfig.datetimeformat) {\n\t\t\t\t\t\twindow._onmsDateTimeFormat = config.datetimeformatConfig.datetimeformat || defaultFormat;\n\t\t\t\t\t\twindow._onmsZoneId = config.datetimeformatConfig.zoneId;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log('Error: datetimeformatConfig property not found:',config);\n\t\t\t\t\t\twindow._onmsDateTimeFormat = defaultFormat;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Error: failed to request format info: ' + xhr.status + ' ' + xhr.statusText);\n\t\t\t\t\twindow._onmsDateTimeFormat = defaultFormat;\n\t\t\t\t}\n\t\t\t\treadyCallback(self, xhr.status);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log('Error: failed to request format info: ', e);\n\t\t\twindow._onmsDateTimeFormat = defaultFormat;\n\t\t\treadyCallback(self, xhr.status);\n\t\t}\n\t};\n\txhr.open('GET', 'rest/info');\n\txhr.setRequestHeader('Accept', 'application/json');\n\txhr.send();\n};\n\nOnmsDateFormatter.prototype.assertInitialized = function assertInitialized() {\n\tif (!window._onmsDateTimeFormat) {\n\t\tconsole.log('OnmsDateFormatter.init() must complete before using!');\n\t\tthrow new Error('OnmsDateFormatter.init() must complete before using!');\n\t}\n};\n\nOnmsDateFormatter.prototype.getZoneId = function getZoneId() {\n\tthis.assertInitialized();\n\n\tif (!this._zoneId) {\n\t\tif (window._onmsZoneId) {\n\t\t\tthis._zoneId = window._onmsZoneId;\n\t\t} else {\n\t\t\tconsole.warn('No zone ID specified from the server; guessing based on browser.');\n\t\t\tthis._zoneId = moment.tz.guess();\n\t\t}\n\t}\n\treturn this._zoneId;\n};\n\nOnmsDateFormatter.prototype.format = function format(date) {\n\tthis.assertInitialized();\n\n\tif (date === undefined || date === null) {\n\t\treturn date;\n\t}\n\n\tconst zoneId = this.getZoneId();\n\tconst momentDate = moment.tz(date, zoneId);\n\treturn momentDate.formatJavaDTF(window._onmsDateTimeFormat);\n};\n\n(function() {\n\t'use strict';\n\tif (typeof jest === 'undefined') {\n\t\tvar f = new OnmsDateFormatter();\n\t\tf.init(function() {\n\t\t\twindow._onmsFormatter = f;\n\t\t});\n\t} else {\n\t\tconsole.log('Running in a test environment. Skipping automatic initialization.');\n\t}\n})();\n\n(function() {\n\t'use strict';\n\n\tif (window.angular) {\n\t\tangular.module('onmsDateFormatter', ['ng']).factory('DateFormatterService', ['$interval', '$q', function DateFormatterService($interval, $q) {\n\t\t\tconsole.log('Initializing DateFormatterService');\n\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar count = 0;\n\t\t\tvar i = $interval(function() {\n\t\t\t\tif (window._onmsFormatter) {\n\t\t\t\t\tconsole.log('Global formatter found: ' + window._onmsDateTimeFormat);\n\t\t\t\t\tdeferred.resolve(window._onmsFormatter);\n\t\t\t\t\t$interval.cancel(i);\n\t\t\t\t}\n\t\t\t\tif (count++ > 300) {\n\t\t\t\t\tconsole.log('DateFormatterService: giving up waiting for global formatter.');\n\t\t\t\t\t$interval.cancel(i);\n\t\t\t\t}\n\t\t\t}, 100);\n\n\t\t\treturn {\n\t\t\t\traw: window._onmsFormatter,\n\t\t\t\tformatter: deferred.promise,\n\t\t\t\tformat: function(date) {\n\t\t\t\t\treturn deferred.promise.then(function(f) {\n\t\t\t\t\t\treturn f.format(date);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\tangular.module('onmsDateFormatter').filter('onmsDate', ['$filter', 'DateFormatterService', function($filter, DateFormatterService) {\n\t\t\treturn function onmsDate(input, ifEmpty) {\n\t\t\t\tvar ret;\n\t\t\t\tif (window._onmsFormatter) {\n\t\t\t\t\t// If the formatter has finished initializing, use it\n\t\t\t\t\tret = window._onmsFormatter.format(input);\n\t\t\t\t\t//console.log('onmsDate: formatter returned: ' + ret);\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise, use ISO format\n\t\t\t\t\tret = $filter('date')(input, 'yyyy-MM-ddTHH:mm:ss.sssZ');\n\t\t\t\t\t//console.log('onmsDate: $filter(date) returned: ' + ret);\n\t\t\t\t}\n\t\t\t\tif (ret !== undefined && ret !== null) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\treturn ifEmpty;\n\t\t\t}\n\t\t}]);\n\n\t\tangular.module('onmsDateFormatter').directive('onmsDate', ['DateFormatterService', function(dateFormatterService) {\n\t\t\treturn {\n\t\t\t\trestrict: 'E',\n\t\t\t\tcompile: function(element) {\n\t\t\t\t\tdateFormatterService.format(element.text()).then(function(formatted) {\n\t\t\t\t\t\telement.replaceWith(formatted);\n\t\t\t\t\t}).catch(function(e) {\n\t\t\t\t\t\tconsole.error('Failed to format ' + element.text(), e);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}]);\n\t} else {\n\t\tconsole.log('Angular not found.  Not initializing OnmsDateFormatter Angular components.');\n\t}\n})();\n\nmodule.exports = OnmsDateFormatter;\n","/* Load jQuery first, so Angular finds it */\nrequire('./jquery-js');\n\n/* Angular Core */\nconst angular = require('angular');\nrequire('angular-animate');\nrequire('angular-cookies');\nrequire('angular-route');\nrequire('angular-resource');\nrequire('angular-sanitize');\n\n/* 3rd-Party Modules */\nrequire('angular-growl-v2');\nrequire('angular-loading-bar');\n\nrequire('angular-growl-v2/build/angular-growl.css');\nrequire('angular-loading-bar/build/loading-bar.css');\n\n/* Bootstrap UI */\nrequire('vendor/bootstrap-js');\nrequire('angular-bootstrap-checkbox');\nrequire('ui-bootstrap4'); // angular-ui-boostrap for bootstrap 4\n\nconsole.log('init: angular-js ' + angular.version.full); // eslint-disable-line no-console\n\nmodule.exports = window['angular'] = angular;","console.log('init: bootstrap-js'); // eslint-disable-line no-console\n\nconst jQuery = require('vendor/jquery-js');\nrequire('vendor/moment-js');\nrequire('bootstrap/dist/js/bootstrap');\n\nmodule.exports = jQuery;\n","console.log('init: jquery-js'); // eslint-disable-line no-console\n\nconst jQuery = require('jquery');\nrequire('jquery-migrate');\n\nmodule.exports = jQuery;\n","console.log('init: moment-js'); // eslint-disable-line no-console\n\nconst moment = require('moment');\nrequire('moment-timezone');\nrequire('@rangerrick/moment-javaformat');\n\nmodule.exports = moment;"],"sourceRoot":""}