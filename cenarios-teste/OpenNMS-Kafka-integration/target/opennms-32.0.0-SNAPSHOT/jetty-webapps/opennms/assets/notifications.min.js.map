{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///./src/main/assets/modules/lib/util/index.js","webpack:///./src/main/assets/js/vendor/jquery-js.js","webpack:///./src/main/assets/js/apps/notifications/index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","Util","_classCallCheck","key","value","base","document","getElementsByTagName","href","url","location","getBaseHref","booleanValue","elementName","checkboxes","getElementsByName","index","hasOwnProperty","checked","default","console","log","jQuery","require","_setTimeout2","_interopRequireDefault","_util","obj","__esModule","$","notificationSocket","connect","WebSocket","replace","onclose","event","close","onmessage","message","JSON","parse","data","Notification","head","body","icon","badge","tag","id","permission","requestPermission","then"],"mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,IAPxE,CASGC,QAAQ,WACX,O,i4BCVqBC,EAAI,oBAAAA,K,4FAAAC,CAAA,KAAAD,G,UAoBvB,O,EApBuBA,E,EAAA,EAAAE,IAAA,cAAAC,MACxB,WACC,IAAMC,EAAOC,SAASC,qBAAqB,QAAQ,GACnD,OAAIF,EACIA,EAAKG,KAEN,KACP,CAAAL,IAAA,cAAAC,MACD,SAAmBK,GACdT,QAAUA,OAAOU,WACpBV,OAAOU,SAASF,KAAOP,EAAKU,cAAgBF,KAE7C,CAAAN,IAAA,SAAAC,MACD,SAAcQ,EAAcC,GAC3B,IAAIC,EAAaR,SAASS,kBAAkBF,GAC5C,IAAK,IAAIG,KAASF,EACbA,EAAWG,eAAeD,KAC7BF,EAAWE,GAAOE,QAAUN,O,EAjBP,O,0DAoBvBX,EApBuB,GAoBvBP,QAAAyB,QAAAlB,G,qCCpBFmB,QAAQC,IAAI,mBAEZ,IAAMC,OAASC,EAAQ,GACvBA,EAAQ,IAER5B,EAAOD,QAAU4B,Q,uCCDJ,IAAAE,EAAAC,EAAAF,EAAA,MAAAA,EAAA,IAAAA,EAAA,KAEb,IAAAG,EAAAD,EAAAF,EAAA,KACiC,SAAAE,EAAAE,GAAA,OAAAA,KAAAC,WAAAD,EAAA,CAAAR,QAAAQ,IAEjC,EAFAF,EAAAF,EAAA,IAEAM,UAAE,WACE,GAAI,iBAAkB7B,OAAQ,CAC1B,IAAI8B,EAAqB,KAErBC,EAAU,SAAVA,KACAD,EAAqB,IAAIE,WAAW/B,UAAKU,cAAgB,uBAAuBsB,QAAQ,QAAS,QAE9EC,QAAU,SAAUC,GACnCL,EAAmBM,QACnBN,EAAqB,MAErB,EAAAN,EAAAL,SAAWY,EAAS,MAGxBD,EAAmBO,UAAY,SAAUF,GACrC,IAAIG,EAAUC,KAAKC,MAAML,EAAMM,MACZ,IAAIC,aAAaJ,EAAQK,KAAM,CAC9CC,KAAMN,EAAQM,KACdC,KAAM5C,UAAKU,cAAgB,mBAC3BmC,MAAO7C,UAAKU,cAAgB,cAC5BoC,IAAK,wBAA0BT,EAAQU,OAKnB,YAA5BN,aAAaO,WACblB,IACmC,WAA5BW,aAAaO,YACpBP,aAAaQ,oBACRC,MAAK,SAAUF,GACO,YAAfA,GACAlB,a","file":"notifications.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn ","export default class Util {\n\tstatic getBaseHref() {\n\t\tconst base = document.getElementsByTagName('base')[0];\n\t\tif (base) {\n\t\t\treturn base.href;\n\t\t}\n\t\treturn '';\n\t}\n\tstatic setLocation(url) {\n\t\tif (window && window.location) {\n\t\t\twindow.location.href = Util.getBaseHref() + url;\n\t\t}\n\t}\n\tstatic toggle(booleanValue, elementName) {\n\t\tvar checkboxes = document.getElementsByName(elementName);\n\t\tfor (var index in checkboxes) {\n\t\t\tif (checkboxes.hasOwnProperty(index)) {\n\t\t\t\tcheckboxes[index].checked = booleanValue;\n\t\t\t}\n\t\t}\n\t}\n}","console.log('init: jquery-js'); // eslint-disable-line no-console\n\nconst jQuery = require('jquery');\nrequire('jquery-migrate');\n\nmodule.exports = jQuery;\n","/**\n * @copyright 2016-2019 The OpenNMS Group, Inc.\n */\n\n'use strict';\n\nimport Util from 'lib/util';\nimport $ from 'vendor/jquery-js';\n\n$(function() {\n    if ('Notification' in window) {\n        let notificationSocket = null;\n\n        let connect = function () {\n            notificationSocket = new WebSocket((Util.getBaseHref() + 'notification/stream').replace(/^http/, 'ws'));\n\n            notificationSocket.onclose = function (event) {\n                notificationSocket.close();\n                notificationSocket = null;\n\n                setTimeout(connect, 1000);\n            };\n\n            notificationSocket.onmessage = function (event) {\n                let message = JSON.parse(event.data);\n                let notification = new Notification(message.head, {\n                    body: message.body,\n                    icon: Util.getBaseHref() + 'images/o-512.png',\n                    badge: Util.getBaseHref() + 'favicon.ico',\n                    tag: 'opennms:notification:' + message.id\n                });\n            };\n        };\n\n        if (Notification.permission === 'granted') {\n            connect();\n        } else if (Notification.permission !== 'denied') {\n            Notification.requestPermission()\n                .then(function (permission) {\n                    if (permission === 'granted') {\n                        connect();\n                    }\n                });\n        }\n    }\n});\n"],"sourceRoot":""}