L.Polyline=L.Path.extend({options:{smoothFactor:1,noClip:!1},initialize:function(t,n){L.setOptions(this,n),this._setLatLngs(t)},getLatLngs:function(){return this._latlngs},setLatLngs:function(t){return this._setLatLngs(t),this.redraw()},isEmpty:function(){return!this._latlngs.length},closestLayerPoint:function(t){for(var n,i,s=1/0,e=null,o=L.LineUtil._sqClosestPointOnSegment,r=0,a=this._parts.length;r<a;r++)for(var l=this._parts[r],h=1,_=l.length;h<_;h++){var u=o(t,n=l[h-1],i=l[h],!0);u<s&&(s=u,e=o(t,n,i))}return e&&(e.distance=Math.sqrt(s)),e},getCenter:function(){if(!this._map)throw new Error("Must add layer to map before using getCenter()");var t,n,i,s,e,o,r,a=this._rings[0],l=a.length;if(!l)return null;for(t=0,n=0;t<l-1;t++)n+=a[t].distanceTo(a[t+1])/2;if(0===n)return this._map.layerPointToLatLng(a[0]);for(t=0,s=0;t<l-1;t++)if(e=a[t],o=a[t+1],(s+=i=e.distanceTo(o))>n)return r=(s-n)/i,this._map.layerPointToLatLng([o.x-r*(o.x-e.x),o.y-r*(o.y-e.y)])},getBounds:function(){return this._bounds},addLatLng:function(t,n){return n=n||this._defaultShape(),t=L.latLng(t),n.push(t),this._bounds.extend(t),this.redraw()},_setLatLngs:function(t){this._bounds=new L.LatLngBounds,this._latlngs=this._convertLatLngs(t)},_defaultShape:function(){return L.Polyline._flat(this._latlngs)?this._latlngs:this._latlngs[0]},_convertLatLngs:function(t){for(var n=[],i=L.Polyline._flat(t),s=0,e=t.length;s<e;s++)i?(n[s]=L.latLng(t[s]),this._bounds.extend(n[s])):n[s]=this._convertLatLngs(t[s]);return n},_project:function(){var t=new L.Bounds;this._rings=[],this._projectLatlngs(this._latlngs,this._rings,t);var n=this._clickTolerance(),i=new L.Point(n,n);this._bounds.isValid()&&t.isValid()&&(t.min._subtract(i),t.max._add(i),this._pxBounds=t)},_projectLatlngs:function(t,n,i){var s,e,o=t[0]instanceof L.LatLng,r=t.length;if(o){for(e=[],s=0;s<r;s++)e[s]=this._map.latLngToLayerPoint(t[s]),i.extend(e[s]);n.push(e)}else for(s=0;s<r;s++)this._projectLatlngs(t[s],n,i)},_clipPoints:function(){var t=this._renderer._bounds;if(this._parts=[],this._pxBounds&&this._pxBounds.intersects(t))if(this.options.noClip)this._parts=this._rings;else{var n,i,s,e,o,r,a,l=this._parts;for(n=0,s=0,e=this._rings.length;n<e;n++)for(i=0,o=(a=this._rings[n]).length;i<o-1;i++)(r=L.LineUtil.clipSegment(a[i],a[i+1],t,i,!0))&&(l[s]=l[s]||[],l[s].push(r[0]),r[1]===a[i+1]&&i!==o-2||(l[s].push(r[1]),s++))}},_simplifyPoints:function(){for(var t=this._parts,n=this.options.smoothFactor,i=0,s=t.length;i<s;i++)t[i]=L.LineUtil.simplify(t[i],n)},_update:function(){this._map&&(this._clipPoints(),this._simplifyPoints(),this._updatePath())},_updatePath:function(){this._renderer._updatePoly(this)}}),L.polyline=function(t,n){return new L.Polyline(t,n)},L.Polyline._flat=function(t){return!L.Util.isArray(t[0])||"object"!=typeof t[0][0]&&void 0!==t[0][0]};