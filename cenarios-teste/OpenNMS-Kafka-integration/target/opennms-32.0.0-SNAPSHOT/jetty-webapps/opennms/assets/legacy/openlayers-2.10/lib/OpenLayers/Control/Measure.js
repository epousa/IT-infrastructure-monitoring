OpenLayers.Control.Measure=OpenLayers.Class(OpenLayers.Control,{EVENT_TYPES:["measure","measurepartial"],handlerOptions:null,callbacks:null,displaySystem:"metric",geodesic:!1,displaySystemUnits:{geographic:["dd"],english:["mi","ft","in"],metric:["km","m"]},partialDelay:300,delayedTrigger:null,persist:!1,initialize:function(e,t){this.EVENT_TYPES=OpenLayers.Control.Measure.prototype.EVENT_TYPES.concat(OpenLayers.Control.prototype.EVENT_TYPES),OpenLayers.Control.prototype.initialize.apply(this,[t]),this.callbacks=OpenLayers.Util.extend({done:this.measureComplete,point:this.measurePartial},this.callbacks),this.handlerOptions=OpenLayers.Util.extend({persist:this.persist},this.handlerOptions),this.handler=new e(this,this.callbacks,this.handlerOptions)},cancel:function(){this.handler.cancel()},updateHandler:function(e,t){var i=this.active;i&&this.deactivate(),this.handler=new e(this,this.callbacks,t),i&&this.activate()},measureComplete:function(e){this.delayedTrigger&&window.clearTimeout(this.delayedTrigger),this.measure(e,"measure")},measurePartial:function(e,t){t.getLength()>0&&(t=t.clone(),this.delayedTrigger=window.setTimeout(OpenLayers.Function.bind((function(){this.measure(t,"measurepartial")}),this),this.partialDelay))},measure:function(e,t){var i,s;e.CLASS_NAME.indexOf("LineString")>-1?(i=this.getBestLength(e),s=1):(i=this.getBestArea(e),s=2),this.events.triggerEvent(t,{measure:i[0],units:i[1],order:s,geometry:e})},getBestArea:function(e){for(var t,i,s=this.displaySystemUnits[this.displaySystem],a=0,n=s.length;a<n&&(t=s[a],!((i=this.getArea(e,t))>1));++a);return[i,t]},getArea:function(e,t){var i,s;this.geodesic?(i=e.getGeodesicArea(this.map.getProjectionObject()),s="m"):(i=e.getArea(),s=this.map.getUnits());var a=OpenLayers.INCHES_PER_UNIT[t];if(a){var n=OpenLayers.INCHES_PER_UNIT[s];i*=Math.pow(n/a,2)}return i},getBestLength:function(e){for(var t,i,s=this.displaySystemUnits[this.displaySystem],a=0,n=s.length;a<n&&(t=s[a],!((i=this.getLength(e,t))>1));++a);return[i,t]},getLength:function(e,t){var i,s;this.geodesic?(i=e.getGeodesicLength(this.map.getProjectionObject()),s="m"):(i=e.getLength(),s=this.map.getUnits());var a=OpenLayers.INCHES_PER_UNIT[t];a&&(i*=OpenLayers.INCHES_PER_UNIT[s]/a);return i},CLASS_NAME:"OpenLayers.Control.Measure"});