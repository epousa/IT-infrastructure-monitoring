OpenLayers.Control.ModifyFeature=OpenLayers.Class(OpenLayers.Control,{geometryTypes:null,clickout:!0,toggle:!0,standalone:!1,layer:null,feature:null,vertices:null,virtualVertices:null,selectControl:null,dragControl:null,handlers:null,deleteCodes:null,virtualStyle:null,mode:null,modified:!1,radiusHandle:null,dragHandle:null,onModificationStart:function(){},onModification:function(){},onModificationEnd:function(){},initialize:function(e,t){this.layer=e,this.vertices=[],this.virtualVertices=[],this.virtualStyle=OpenLayers.Util.extend({},this.layer.style||this.layer.styleMap.createSymbolizer()),this.virtualStyle.fillOpacity=.3,this.virtualStyle.strokeOpacity=.3,this.deleteCodes=[46,68],this.mode=OpenLayers.Control.ModifyFeature.RESHAPE,OpenLayers.Control.prototype.initialize.apply(this,[t]),this.deleteCodes instanceof Array||(this.deleteCodes=[this.deleteCodes]);var r=this,s={geometryTypes:this.geometryTypes,clickout:this.clickout,toggle:this.toggle,onBeforeSelect:this.beforeSelectFeature,onSelect:this.selectFeature,onUnselect:this.unselectFeature,scope:this};!1===this.standalone&&(this.selectControl=new OpenLayers.Control.SelectFeature(e,s));var i={geometryTypes:["OpenLayers.Geometry.Point"],snappingOptions:this.snappingOptions,onStart:function(e,t){r.dragStart.apply(r,[e,t])},onDrag:function(e,t){r.dragVertex.apply(r,[e,t])},onComplete:function(e){r.dragComplete.apply(r,[e])},featureCallbacks:{over:function(e){(!0!==r.standalone||e._sketch||r.feature===e)&&r.dragControl.overFeature.apply(r.dragControl,[e])}}};this.dragControl=new OpenLayers.Control.DragFeature(e,i);var a={keydown:this.handleKeypress};this.handlers={keyboard:new OpenLayers.Handler.Keyboard(this,a)}},destroy:function(){this.layer=null,this.standalone||this.selectControl.destroy(),this.dragControl.destroy(),OpenLayers.Control.prototype.destroy.apply(this,[])},activate:function(){return(this.standalone||this.selectControl.activate())&&this.handlers.keyboard.activate()&&OpenLayers.Control.prototype.activate.apply(this,arguments)},deactivate:function(){var e=!1;if(OpenLayers.Control.prototype.deactivate.apply(this,arguments)){this.layer.removeFeatures(this.vertices,{silent:!0}),this.layer.removeFeatures(this.virtualVertices,{silent:!0}),this.vertices=[],this.dragControl.deactivate();var t=this.feature,r=t&&t.geometry&&t.layer;!1===this.standalone?(r&&this.selectControl.unselect.apply(this.selectControl,[t]),this.selectControl.deactivate()):r&&this.unselectFeature(t),this.handlers.keyboard.deactivate(),e=!0}return e},beforeSelectFeature:function(e){return this.layer.events.triggerEvent("beforefeaturemodified",{feature:e})},selectFeature:function(e){this.feature=e,this.modified=!1,this.resetVertices(),this.dragControl.activate(),this.onModificationStart(this.feature)},unselectFeature:function(e){this.layer.removeFeatures(this.vertices,{silent:!0}),this.vertices=[],this.layer.destroyFeatures(this.virtualVertices,{silent:!0}),this.virtualVertices=[],this.dragHandle&&(this.layer.destroyFeatures([this.dragHandle],{silent:!0}),delete this.dragHandle),this.radiusHandle&&(this.layer.destroyFeatures([this.radiusHandle],{silent:!0}),delete this.radiusHandle),this.feature=null,this.dragControl.deactivate(),this.onModificationEnd(e),this.layer.events.triggerEvent("afterfeaturemodified",{feature:e,modified:this.modified}),this.modified=!1},dragStart:function(e,t){e==this.feature||e.geometry.parent||e==this.dragHandle||e==this.radiusHandle||(!1===this.standalone&&this.feature&&this.selectControl.clickFeature.apply(this.selectControl,[this.feature]),null!=this.geometryTypes&&-1==OpenLayers.Util.indexOf(this.geometryTypes,e.geometry.CLASS_NAME)||(this.standalone||this.selectControl.clickFeature.apply(this.selectControl,[e]),this.dragControl.overFeature.apply(this.dragControl,[e]),this.dragControl.lastPixel=t,this.dragControl.handlers.drag.started=!0,this.dragControl.handlers.drag.start=t,this.dragControl.handlers.drag.last=t))},dragVertex:function(e,t){this.modified=!0,"OpenLayers.Geometry.Point"==this.feature.geometry.CLASS_NAME?(this.feature!=e&&(this.feature=e),this.layer.events.triggerEvent("vertexmodified",{vertex:e.geometry,feature:this.feature,pixel:t})):(e._index?(e.geometry.parent.addComponent(e.geometry,e._index),delete e._index,OpenLayers.Util.removeItem(this.virtualVertices,e),this.vertices.push(e)):e==this.dragHandle?(this.layer.removeFeatures(this.vertices,{silent:!0}),this.vertices=[],this.radiusHandle&&(this.layer.destroyFeatures([this.radiusHandle],{silent:!0}),this.radiusHandle=null)):e!==this.radiusHandle&&this.layer.events.triggerEvent("vertexmodified",{vertex:e.geometry,feature:this.feature,pixel:t}),this.virtualVertices.length>0&&(this.layer.destroyFeatures(this.virtualVertices,{silent:!0}),this.virtualVertices=[]),this.layer.drawFeature(this.feature,this.standalone?void 0:this.selectControl.renderIntent)),this.layer.drawFeature(e)},dragComplete:function(e){this.resetVertices(),this.setFeatureState(),this.onModification(this.feature),this.layer.events.triggerEvent("featuremodified",{feature:this.feature})},setFeatureState:function(){this.feature.state!=OpenLayers.State.INSERT&&this.feature.state!=OpenLayers.State.DELETE&&(this.feature.state=OpenLayers.State.UPDATE)},resetVertices:function(){this.dragControl.feature&&this.dragControl.outFeature(this.dragControl.feature),this.vertices.length>0&&(this.layer.removeFeatures(this.vertices,{silent:!0}),this.vertices=[]),this.virtualVertices.length>0&&(this.layer.removeFeatures(this.virtualVertices,{silent:!0}),this.virtualVertices=[]),this.dragHandle&&(this.layer.destroyFeatures([this.dragHandle],{silent:!0}),this.dragHandle=null),this.radiusHandle&&(this.layer.destroyFeatures([this.radiusHandle],{silent:!0}),this.radiusHandle=null),this.feature&&"OpenLayers.Geometry.Point"!=this.feature.geometry.CLASS_NAME&&(this.mode&OpenLayers.Control.ModifyFeature.DRAG&&this.collectDragHandle(),this.mode&(OpenLayers.Control.ModifyFeature.ROTATE|OpenLayers.Control.ModifyFeature.RESIZE)&&this.collectRadiusHandle(),this.mode&OpenLayers.Control.ModifyFeature.RESHAPE&&(this.mode&OpenLayers.Control.ModifyFeature.RESIZE||this.collectVertices()))},handleKeypress:function(e){var t=e.keyCode;if(this.feature&&-1!=OpenLayers.Util.indexOf(this.deleteCodes,t)){var r=this.dragControl.feature;r&&-1!=OpenLayers.Util.indexOf(this.vertices,r)&&!this.dragControl.handlers.drag.dragging&&r.geometry.parent&&(r.geometry.parent.removeComponent(r.geometry),this.layer.drawFeature(this.feature,this.standalone?void 0:this.selectControl.renderIntent),this.resetVertices(),this.setFeatureState(),this.onModification(this.feature),this.layer.events.triggerEvent("featuremodified",{feature:this.feature}))}},collectVertices:function(){this.vertices=[],this.virtualVertices=[];var e=this;(function t(r){var s,i,a,n;if("OpenLayers.Geometry.Point"==r.CLASS_NAME)(i=new OpenLayers.Feature.Vector(r))._sketch=!0,e.vertices.push(i);else{var o=r.components.length;for("OpenLayers.Geometry.LinearRing"==r.CLASS_NAME&&(o-=1),s=0;s<o;++s)"OpenLayers.Geometry.Point"==(a=r.components[s]).CLASS_NAME?((i=new OpenLayers.Feature.Vector(a))._sketch=!0,e.vertices.push(i)):t(a);if("OpenLayers.Geometry.MultiPoint"!=r.CLASS_NAME)for(s=0,n=r.components.length;s<n-1;++s){var l=r.components[s],h=r.components[s+1];if("OpenLayers.Geometry.Point"==l.CLASS_NAME&&"OpenLayers.Geometry.Point"==h.CLASS_NAME){var d=(l.x+h.x)/2,u=(l.y+h.y)/2,y=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(d,u),null,e.virtualStyle);y.geometry.parent=r,y._index=s+1,y._sketch=!0,e.virtualVertices.push(y)}}}}).call(this,this.feature.geometry),this.layer.addFeatures(this.virtualVertices,{silent:!0}),this.layer.addFeatures(this.vertices,{silent:!0})},collectDragHandle:function(){var e=this.feature.geometry,t=e.getBounds().getCenterLonLat(),r=new OpenLayers.Geometry.Point(t.lon,t.lat),s=new OpenLayers.Feature.Vector(r);r.move=function(t,r){OpenLayers.Geometry.Point.prototype.move.call(this,t,r),e.move(t,r)},s._sketch=!0,this.dragHandle=s,this.layer.addFeatures([this.dragHandle],{silent:!0})},collectRadiusHandle:function(){var e=this.feature.geometry,t=e.getBounds(),r=t.getCenterLonLat(),s=new OpenLayers.Geometry.Point(r.lon,r.lat),i=new OpenLayers.Geometry.Point(t.right,t.bottom),a=new OpenLayers.Feature.Vector(i),n=this.mode&OpenLayers.Control.ModifyFeature.RESIZE,o=this.mode&OpenLayers.Control.ModifyFeature.RESHAPE,l=this.mode&OpenLayers.Control.ModifyFeature.ROTATE;i.move=function(t,r){OpenLayers.Geometry.Point.prototype.move.call(this,t,r);var i=this.x-s.x,a=this.y-s.y,h=i-t,d=a-r;if(l){var u=Math.atan2(d,h),y=Math.atan2(a,i)-u;y*=180/Math.PI,e.rotate(y,s)}if(n){var c,p;if(o)p=i/h/(c=a/d);else{var f=Math.sqrt(h*h+d*d);c=Math.sqrt(i*i+a*a)/f}e.resize(c,s,p)}},a._sketch=!0,this.radiusHandle=a,this.layer.addFeatures([this.radiusHandle],{silent:!0})},setMap:function(e){this.standalone||this.selectControl.setMap(e),this.dragControl.setMap(e),OpenLayers.Control.prototype.setMap.apply(this,arguments)},CLASS_NAME:"OpenLayers.Control.ModifyFeature"}),OpenLayers.Control.ModifyFeature.RESHAPE=1,OpenLayers.Control.ModifyFeature.RESIZE=2,OpenLayers.Control.ModifyFeature.ROTATE=4,OpenLayers.Control.ModifyFeature.DRAG=8;