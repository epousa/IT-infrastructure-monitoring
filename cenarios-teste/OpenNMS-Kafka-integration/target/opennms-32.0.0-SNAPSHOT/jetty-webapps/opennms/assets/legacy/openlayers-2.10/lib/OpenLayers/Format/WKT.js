OpenLayers.Format.WKT=OpenLayers.Class(OpenLayers.Format,{initialize:function(e){this.regExes={typeStr:/^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,spaces:/\s+/,parenComma:/\)\s*,\s*\(/,doubleParenComma:/\)\s*\)\s*,\s*\(\s*\(/,trimParens:/^\s*\(?(.*?)\)?\s*$/},OpenLayers.Format.prototype.initialize.apply(this,[e])},read:function(e){var t,r,n,s=this.regExes.typeStr.exec(e);if(s&&(r=s[1].toLowerCase(),n=s[2],this.parse[r]&&(t=this.parse[r].apply(this,[n])),this.internalProjection&&this.externalProjection))if(t&&"OpenLayers.Feature.Vector"==t.CLASS_NAME)t.geometry.transform(this.externalProjection,this.internalProjection);else if(t&&"geometrycollection"!=r&&"object"==typeof t)for(var i=0,o=t.length;i<o;i++){t[i].geometry.transform(this.externalProjection,this.internalProjection)}return t},write:function(e){var t,r,n,s,i;e.constructor==Array?(t=e,i=!0):(t=[e],i=!1);var o=[];i&&o.push("GEOMETRYCOLLECTION(");for(var a=0,p=t.length;a<p;++a){if(i&&a>0&&o.push(","),n=(r=t[a].geometry).CLASS_NAME.split(".")[2].toLowerCase(),!this.extract[n])return null;this.internalProjection&&this.externalProjection&&(r=r.clone()).transform(this.internalProjection,this.externalProjection),s=this.extract[n].apply(this,[r]),o.push(n.toUpperCase()+"("+s+")")}return i&&o.push(")"),o.join("")},extract:{point:function(e){return e.x+" "+e.y},multipoint:function(e){for(var t=[],r=0,n=e.components.length;r<n;++r)t.push("("+this.extract.point.apply(this,[e.components[r]])+")");return t.join(",")},linestring:function(e){for(var t=[],r=0,n=e.components.length;r<n;++r)t.push(this.extract.point.apply(this,[e.components[r]]));return t.join(",")},multilinestring:function(e){for(var t=[],r=0,n=e.components.length;r<n;++r)t.push("("+this.extract.linestring.apply(this,[e.components[r]])+")");return t.join(",")},polygon:function(e){for(var t=[],r=0,n=e.components.length;r<n;++r)t.push("("+this.extract.linestring.apply(this,[e.components[r]])+")");return t.join(",")},multipolygon:function(e){for(var t=[],r=0,n=e.components.length;r<n;++r)t.push("("+this.extract.polygon.apply(this,[e.components[r]])+")");return t.join(",")}},parse:{point:function(e){var t=OpenLayers.String.trim(e).split(this.regExes.spaces);return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(t[0],t[1]))},multipoint:function(e){for(var t,r=OpenLayers.String.trim(e).split(this.regExes.parenComma),n=[],s=0,i=r.length;s<i;++s)t=r[s].replace(this.regExes.trimParens,"$1"),n.push(this.parse.point.apply(this,[t]).geometry);return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.MultiPoint(n))},linestring:function(e){for(var t=OpenLayers.String.trim(e).split(","),r=[],n=0,s=t.length;n<s;++n)r.push(this.parse.point.apply(this,[t[n]]).geometry);return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString(r))},multilinestring:function(e){for(var t,r=OpenLayers.String.trim(e).split(this.regExes.parenComma),n=[],s=0,i=r.length;s<i;++s)t=r[s].replace(this.regExes.trimParens,"$1"),n.push(this.parse.linestring.apply(this,[t]).geometry);return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.MultiLineString(n))},polygon:function(e){for(var t,r,n,s=OpenLayers.String.trim(e).split(this.regExes.parenComma),i=[],o=0,a=s.length;o<a;++o)t=s[o].replace(this.regExes.trimParens,"$1"),r=this.parse.linestring.apply(this,[t]).geometry,n=new OpenLayers.Geometry.LinearRing(r.components),i.push(n);return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Polygon(i))},multipolygon:function(e){for(var t,r=OpenLayers.String.trim(e).split(this.regExes.doubleParenComma),n=[],s=0,i=r.length;s<i;++s)t=r[s].replace(this.regExes.trimParens,"$1"),n.push(this.parse.polygon.apply(this,[t]).geometry);return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.MultiPolygon(n))},geometrycollection:function(e){e=e.replace(/,\s*([A-Za-z])/g,"|$1");for(var t=OpenLayers.String.trim(e).split("|"),r=[],n=0,s=t.length;n<s;++n)r.push(OpenLayers.Format.WKT.prototype.read.apply(this,[t[n]]));return r}},CLASS_NAME:"OpenLayers.Format.WKT"});