OpenLayers.Format.Filter.v1=OpenLayers.Class(OpenLayers.Format.XML,{namespaces:{ogc:"http://www.opengis.net/ogc",gml:"http://www.opengis.net/gml",xlink:"http://www.w3.org/1999/xlink",xsi:"http://www.w3.org/2001/XMLSchema-instance"},defaultPrefix:"ogc",schemaLocation:null,initialize:function(e){OpenLayers.Format.XML.prototype.initialize.apply(this,[e])},read:function(e){var t={};return this.readers.ogc.Filter.apply(this,[e,t]),t.filter},readers:{ogc:{Filter:function(e,t){var r={fids:[],filters:[]};this.readChildNodes(e,r),r.fids.length>0?t.filter=new OpenLayers.Filter.FeatureId({fids:r.fids}):r.filters.length>0&&(t.filter=r.filters[0])},FeatureId:function(e,t){var r=e.getAttribute("fid");r&&t.fids.push(r)},And:function(e,t){var r=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND});this.readChildNodes(e,r),t.filters.push(r)},Or:function(e,t){var r=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR});this.readChildNodes(e,r),t.filters.push(r)},Not:function(e,t){var r=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.NOT});this.readChildNodes(e,r),t.filters.push(r)},PropertyIsLessThan:function(e,t){var r=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LESS_THAN});this.readChildNodes(e,r),t.filters.push(r)},PropertyIsGreaterThan:function(e,t){var r=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.GREATER_THAN});this.readChildNodes(e,r),t.filters.push(r)},PropertyIsLessThanOrEqualTo:function(e,t){var r=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO});this.readChildNodes(e,r),t.filters.push(r)},PropertyIsGreaterThanOrEqualTo:function(e,t){var r=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO});this.readChildNodes(e,r),t.filters.push(r)},PropertyIsBetween:function(e,t){var r=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.BETWEEN});this.readChildNodes(e,r),t.filters.push(r)},Literal:function(e,t){t.value=OpenLayers.String.numericIf(this.getChildValue(e))},PropertyName:function(e,t){t.property=this.getChildValue(e)},LowerBoundary:function(e,t){t.lowerBoundary=OpenLayers.String.numericIf(this.readOgcExpression(e))},UpperBoundary:function(e,t){t.upperBoundary=OpenLayers.String.numericIf(this.readOgcExpression(e))},Intersects:function(e,t){this.readSpatial(e,t,OpenLayers.Filter.Spatial.INTERSECTS)},Within:function(e,t){this.readSpatial(e,t,OpenLayers.Filter.Spatial.WITHIN)},Contains:function(e,t){this.readSpatial(e,t,OpenLayers.Filter.Spatial.CONTAINS)},DWithin:function(e,t){this.readSpatial(e,t,OpenLayers.Filter.Spatial.DWITHIN)},Distance:function(e,t){t.distance=parseInt(this.getChildValue(e)),t.distanceUnits=e.getAttribute("units")}}},readSpatial:function(e,t,r){var i=new OpenLayers.Filter.Spatial({type:r});this.readChildNodes(e,i),i.value=i.components[0],delete i.components,t.filters.push(i)},readOgcExpression:function(e){var t={};this.readChildNodes(e,t);var r=t.value;return void 0===r&&(r=this.getChildValue(e)),r},write:function(e){return this.writers.ogc.Filter.apply(this,[e])},writers:{ogc:{Filter:function(e){var t=this.createElementNSPlus("ogc:Filter");if("FeatureId"==e.CLASS_NAME.split(".").pop())for(var r=0;r<e.fids.length;++r)this.writeNode("FeatureId",e.fids[r],t);else this.writeNode(this.getFilterType(e),e,t);return t},FeatureId:function(e){return this.createElementNSPlus("ogc:FeatureId",{attributes:{fid:e}})},And:function(e){for(var t,r=this.createElementNSPlus("ogc:And"),i=0;i<e.filters.length;++i)t=e.filters[i],this.writeNode(this.getFilterType(t),t,r);return r},Or:function(e){for(var t,r=this.createElementNSPlus("ogc:Or"),i=0;i<e.filters.length;++i)t=e.filters[i],this.writeNode(this.getFilterType(t),t,r);return r},Not:function(e){var t=this.createElementNSPlus("ogc:Not"),r=e.filters[0];return this.writeNode(this.getFilterType(r),r,t),t},PropertyIsLessThan:function(e){var t=this.createElementNSPlus("ogc:PropertyIsLessThan");return this.writeNode("PropertyName",e,t),this.writeNode("Literal",e.value,t),t},PropertyIsGreaterThan:function(e){var t=this.createElementNSPlus("ogc:PropertyIsGreaterThan");return this.writeNode("PropertyName",e,t),this.writeNode("Literal",e.value,t),t},PropertyIsLessThanOrEqualTo:function(e){var t=this.createElementNSPlus("ogc:PropertyIsLessThanOrEqualTo");return this.writeNode("PropertyName",e,t),this.writeNode("Literal",e.value,t),t},PropertyIsGreaterThanOrEqualTo:function(e){var t=this.createElementNSPlus("ogc:PropertyIsGreaterThanOrEqualTo");return this.writeNode("PropertyName",e,t),this.writeNode("Literal",e.value,t),t},PropertyIsBetween:function(e){var t=this.createElementNSPlus("ogc:PropertyIsBetween");return this.writeNode("PropertyName",e,t),this.writeNode("LowerBoundary",e,t),this.writeNode("UpperBoundary",e,t),t},PropertyName:function(e){return this.createElementNSPlus("ogc:PropertyName",{value:e.property})},Literal:function(e){return this.createElementNSPlus("ogc:Literal",{value:e})},LowerBoundary:function(e){var t=this.createElementNSPlus("ogc:LowerBoundary");return this.writeNode("Literal",e.lowerBoundary,t),t},UpperBoundary:function(e){var t=this.createElementNSPlus("ogc:UpperBoundary");return this.writeNode("Literal",e.upperBoundary,t),t},INTERSECTS:function(e){return this.writeSpatial(e,"Intersects")},WITHIN:function(e){return this.writeSpatial(e,"Within")},CONTAINS:function(e){return this.writeSpatial(e,"Contains")},DWITHIN:function(e){var t=this.writeSpatial(e,"DWithin");return this.writeNode("Distance",e,t),t},Distance:function(e){return this.createElementNSPlus("ogc:Distance",{attributes:{units:e.distanceUnits},value:e.distance})}}},getFilterType:function(e){var t=this.filterMap[e.type];if(!t)throw"Filter writing not supported for rule type: "+e.type;return t},filterMap:{"&&":"And","||":"Or","!":"Not","==":"PropertyIsEqualTo","!=":"PropertyIsNotEqualTo","<":"PropertyIsLessThan",">":"PropertyIsGreaterThan","<=":"PropertyIsLessThanOrEqualTo",">=":"PropertyIsGreaterThanOrEqualTo","..":"PropertyIsBetween","~":"PropertyIsLike",BBOX:"BBOX",DWITHIN:"DWITHIN",WITHIN:"WITHIN",CONTAINS:"CONTAINS",INTERSECTS:"INTERSECTS"},CLASS_NAME:"OpenLayers.Format.Filter.v1"});