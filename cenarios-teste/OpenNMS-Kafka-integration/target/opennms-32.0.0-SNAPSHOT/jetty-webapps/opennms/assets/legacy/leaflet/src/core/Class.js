L.Class=function(){},L.Class.extend=function(t){var i=function(){this.initialize&&this.initialize.apply(this,arguments),this.callInitHooks()},o=i.__super__=this.prototype,s=L.Util.create(o);for(var n in s.constructor=i,i.prototype=s,this)this.hasOwnProperty(n)&&"prototype"!==n&&(i[n]=this[n]);return t.statics&&(L.extend(i,t.statics),delete t.statics),t.includes&&(L.Util.extend.apply(null,[s].concat(t.includes)),delete t.includes),s.options&&(t.options=L.Util.extend(L.Util.create(s.options),t.options)),L.extend(s,t),s._initHooks=[],s.callInitHooks=function(){if(!this._initHooksCalled){o.callInitHooks&&o.callInitHooks.call(this),this._initHooksCalled=!0;for(var t=0,i=s._initHooks.length;t<i;t++)s._initHooks[t].call(this)}},i},L.Class.include=function(t){return L.extend(this.prototype,t),this},L.Class.mergeOptions=function(t){return L.extend(this.prototype.options,t),this},L.Class.addInitHook=function(t){var i=Array.prototype.slice.call(arguments,1),o="function"==typeof t?t:function(){this[t].apply(this,i)};return this.prototype._initHooks=this.prototype._initHooks||[],this.prototype._initHooks.push(o),this};