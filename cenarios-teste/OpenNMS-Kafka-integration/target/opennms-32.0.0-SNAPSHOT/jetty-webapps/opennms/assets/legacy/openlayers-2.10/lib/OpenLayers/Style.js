OpenLayers.Style=OpenLayers.Class({id:null,name:null,title:null,description:null,layerName:null,isDefault:!1,rules:null,context:null,defaultStyle:null,defaultsPerSymbolizer:!1,propertyStyles:null,initialize:function(e,t){OpenLayers.Util.extend(this,t),this.rules=[],t&&t.rules&&this.addRules(t.rules),this.setDefaultStyle(e||OpenLayers.Feature.Vector.style.default),this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")},destroy:function(){for(var e=0,t=this.rules.length;e<t;e++)this.rules[e].destroy(),this.rules[e]=null;this.rules=null,this.defaultStyle=null},createSymbolizer:function(e){for(var t,r=this.defaultsPerSymbolizer?{}:this.createLiterals(OpenLayers.Util.extend({},this.defaultStyle),e),l=this.rules,i=[],s=!1,a=0,n=l.length;a<n;a++){(t=l[a]).evaluate(e)&&(t instanceof OpenLayers.Rule&&t.elseFilter?i.push(t):(s=!0,this.applySymbolizer(t,r,e)))}if(0==s&&i.length>0){s=!0;for(a=0,n=i.length;a<n;a++)this.applySymbolizer(i[a],r,e)}return l.length>0&&0==s&&(r.display="none"),r},applySymbolizer:function(e,t,r){var l=r.geometry?this.getSymbolizerPrefix(r.geometry):OpenLayers.Style.SYMBOLIZER_PREFIXES[0],i=e.symbolizer[l]||e.symbolizer;if(!0===this.defaultsPerSymbolizer){var s=this.defaultStyle;OpenLayers.Util.applyDefaults(i,{pointRadius:s.pointRadius}),!0!==i.stroke&&!0!==i.graphic||OpenLayers.Util.applyDefaults(i,{strokeWidth:s.strokeWidth,strokeColor:s.strokeColor,strokeOpacity:s.strokeOpacity,strokeDashstyle:s.strokeDashstyle,strokeLinecap:s.strokeLinecap}),!0!==i.fill&&!0!==i.graphic||OpenLayers.Util.applyDefaults(i,{fillColor:s.fillColor,fillOpacity:s.fillOpacity}),!0===i.graphic&&OpenLayers.Util.applyDefaults(i,{pointRadius:this.defaultStyle.pointRadius,externalGraphic:this.defaultStyle.externalGraphic,graphicName:this.defaultStyle.graphicName,graphicOpacity:this.defaultStyle.graphicOpacity,graphicWidth:this.defaultStyle.graphicWidth,graphicHeight:this.defaultStyle.graphicHeight,graphicXOffset:this.defaultStyle.graphicXOffset,graphicYOffset:this.defaultStyle.graphicYOffset})}return this.createLiterals(OpenLayers.Util.extend(t,i),r)},createLiterals:function(e,t){var r=OpenLayers.Util.extend({},t.attributes||t.data);for(var l in OpenLayers.Util.extend(r,this.context),this.propertyStyles)e[l]=OpenLayers.Style.createLiteral(e[l],r,t,l);return e},findPropertyStyles:function(){var e={},t=this.defaultStyle;this.addPropertyStyles(e,t);for(var r,l,i=this.rules,s=0,a=i.length;s<a;s++)for(var n in r=i[s].symbolizer){if("object"!=typeof(l=r[n])){this.addPropertyStyles(e,r);break}this.addPropertyStyles(e,l)}return e},addPropertyStyles:function(e,t){var r;for(var l in t)"string"==typeof(r=t[l])&&r.match(/\$\{\w+\}/)&&(e[l]=!0);return e},addRules:function(e){Array.prototype.push.apply(this.rules,e),this.propertyStyles=this.findPropertyStyles()},setDefaultStyle:function(e){this.defaultStyle=e,this.propertyStyles=this.findPropertyStyles()},getSymbolizerPrefix:function(e){for(var t=OpenLayers.Style.SYMBOLIZER_PREFIXES,r=0,l=t.length;r<l;r++)if(-1!=e.CLASS_NAME.indexOf(t[r]))return t[r]},clone:function(){var e=OpenLayers.Util.extend({},this);if(this.rules){e.rules=[];for(var t=0,r=this.rules.length;t<r;++t)e.rules.push(this.rules[t].clone())}e.context=this.context&&OpenLayers.Util.extend({},this.context);var l=OpenLayers.Util.extend({},this.defaultStyle);return new OpenLayers.Style(l,e)},CLASS_NAME:"OpenLayers.Style"}),OpenLayers.Style.createLiteral=function(e,t,r,l){return"string"==typeof e&&-1!=e.indexOf("${")&&(e=OpenLayers.String.format(e,t,[r,l]),e=isNaN(e)||!e?e:parseFloat(e)),e},OpenLayers.Style.SYMBOLIZER_PREFIXES=["Point","Line","Polygon","Text","Raster"];