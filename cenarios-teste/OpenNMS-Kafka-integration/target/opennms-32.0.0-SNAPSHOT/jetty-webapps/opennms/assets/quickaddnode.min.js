!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var i in n)("object"==typeof exports?exports:e)[i]=n[i]}}(window,(function(){return(window.webpackJsonp=window.webpackJsonp||[]).push([[61,2,8,24,25,35,39,41,43,49,64,65,71],{10:function(e,exports,t){"use strict";var n,i=(n=t(70))&&n.__esModule?n:{default:n};var angular=t(3),a=t(22);angular.module("onms.http",["ui.bootstrap"]).factory("InterceptorService",["$q","$rootScope",function(e,t){return{responseError:function(n){var a,r;401===n.status&&(n.config&&n.config.url&&((0,i.default)(a=n.config.url).call(a,"rest/")||(0,i.default)(r=n.config.url).call(r,"api/v2/"))&&(console.error("Login Required",n,n.headers),t.$emit("loginRequired")));return 403===n.status&&t.$emit("permissionDenied"),e.reject(n)}}}]).config(["$locationProvider",function(e){e.hashPrefix("")}]).config(["$httpProvider",function(e){e.defaults.headers.common["X-Requested-With"]="XMLHttpRequest",e.interceptors.push("InterceptorService")}]).run(["$rootScope","$uibModal",function(e,t){e.$on("loginRequired",(function(){var e=document.getElementsByTagName("base");e&&e.length>0&&e[0].href?document.headerLogoutForm.submit():console.warn("Login is required, but cannot forward to login page due to missing base tag.")})),e.$on("permissionDenied",(function(){t.open({templateUrl:a,controller:["$scope","$uibModalInstance",function($scope,e){$scope.reload=function(){e.dismiss(),window.location.reload()}}],size:"",backdrop:"static",keyboard:!1})}))}]),e.exports=angular},104:function(e,exports,t){"use strict";t(13);e.exports=function(e){var t=this;return t.name=e["service-name"],t.className="RequisitionService",t}},1153:function(e,exports,t){"use strict";t(3);t(1154),t(301)},1154:function(e,exports,t){"use strict";var n;n=t(1155),angular.module("onms-requisitions",["onms.http","onms.default.apps","ngRoute","ngAnimate","ui.bootstrap","angular-growl","angular-loading-bar","ngSanitize","onmsDateFormatter"]).config(["$locationProvider",function(e){e.hashPrefix("")}]).config(["$routeProvider",function(e){e.when("/",{templateUrl:n,controller:"QuickAddNodeController",resolve:{foreignSources:function(){return null}}}).otherwise({redirectTo:"/"})}]).config(["growlProvider",function(e){e.globalTimeToLive(3e3),e.globalPosition("bottom-center")}])},1155:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/quick-add-node-standalone.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <ol class="breadcrumb"> <li class="breadcrumb-item"><a href="/opennms/index.jsp">Home</a></li> <li class="breadcrumb-item"><a href="/opennms/admin/index.jsp">Admin</a></li> <li class="breadcrumb-item"><a href="/opennms/admin/ng-requisitions/index.jsp">Provisioning Requisitions</a></li> <li class="breadcrumb-item active">Quick-Add Node</li> </ol> <div class="row"> <div class="col-md-6"> <form name="quickAddNodeForm"> <fieldset ng-disabled="isSaving"> <div class="card"> <div class="card-header"><span>Basic Attributes (required)</span></div> <div class="card-body" ng-include="quickAddPanelBasicView"></div> </div> <div class="card"> <div class="card-header"><span>SNMP Parameters (optional)</span></div> <div class="card-body" ng-include="quickAddPanelSnmpView"></div> </div> <div class="card"> <div class="card-header"><span>Surveillance Category Memberships (optional)</span></div> <div class="card-body" ng-include="quickAddPanelCategoriesView"></div> </div> <div class="card"> <div class="card-header"><span>CLI Authentication Parameters (optional)</span></div> <div class="card-body" ng-include="quickAddPanelCliView"></div> </div> <div class="form-group"> <button type="button" class="btn btn-primary" id="provision" ng-click="provision()" ng-disabled="isInvalid()">Provision</button> <button type="button" class="btn btn-primary" id="reset" ng-click="reset()">Reset</button> </div> </fieldset> </form> </div> <div class="col-md-6"> <div class="card"> <div class="card-header"><span>Node Quick-Add Help</span></div> <div class="card-body" ng-include="quickAddPanelHelpView"></div> </div> </div> </div> </div> ')}]),e.exports=t},12:function(e,exports,t){"use strict";console.log("init: bootstrap-js");var jQuery=t(5);t(8),t(41),e.exports=jQuery},136:function(e,exports,t){"use strict";var n,i=(n=t(29))&&n.__esModule?n:{default:n};var a,angular=t(3),r=t(8);function o(){}o.prototype.init=function(e){var t=this,n="yyyy-MM-dd'T'HH:mm:ssxxx";window._onmsZoneId=void 0;var i=new XMLHttpRequest;i.onreadystatechange=function(){try{if(i.readyState===XMLHttpRequest.DONE){if(200===i.status){var a=JSON.parse(i.responseText);a.datetimeformatConfig&&a.datetimeformatConfig.datetimeformat?(window._onmsDateTimeFormat=a.datetimeformatConfig.datetimeformat||n,window._onmsZoneId=a.datetimeformatConfig.zoneId):(console.log("Error: datetimeformatConfig property not found:",a),window._onmsDateTimeFormat=n)}else console.log("Error: failed to request format info: "+i.status+" "+i.statusText),window._onmsDateTimeFormat=n;e(t,i.status)}}catch(a){console.log("Error: failed to request format info: ",a),window._onmsDateTimeFormat=n,e(t,i.status)}},i.open("GET","rest/info"),i.setRequestHeader("Accept","application/json"),i.send()},o.prototype.assertInitialized=function(){if(!window._onmsDateTimeFormat)throw console.log("OnmsDateFormatter.init() must complete before using!"),new Error("OnmsDateFormatter.init() must complete before using!")},o.prototype.getZoneId=function(){return this.assertInitialized(),this._zoneId||(window._onmsZoneId?this._zoneId=window._onmsZoneId:(console.warn("No zone ID specified from the server; guessing based on browser."),this._zoneId=r.tz.guess())),this._zoneId},o.prototype.format=function(e){if(this.assertInitialized(),null==e)return e;var t=this.getZoneId();return r.tz(e,t).formatJavaDTF(window._onmsDateTimeFormat)},function(){if("undefined"==typeof jest){var e=new o;e.init((function(){window._onmsFormatter=e}))}else console.log("Running in a test environment. Skipping automatic initialization.")}(),window.angular?(angular.module("onmsDateFormatter",["ng"]).factory("DateFormatterService",["$interval","$q",function(e,t){console.log("Initializing DateFormatterService");var n=t.defer(),i=0,a=e((function(){window._onmsFormatter&&(console.log("Global formatter found: "+window._onmsDateTimeFormat),n.resolve(window._onmsFormatter),e.cancel(a)),i++>300&&(console.log("DateFormatterService: giving up waiting for global formatter."),e.cancel(a))}),100);return{raw:window._onmsFormatter,formatter:n.promise,format:function(e){return n.promise.then((function(t){return t.format(e)}))}}}]),(0,i.default)(a=angular.module("onmsDateFormatter")).call(a,"onmsDate",["$filter","DateFormatterService",function(e,t){return function(t,n){var i;return null!=(i=window._onmsFormatter?window._onmsFormatter.format(t):e("date")(t,"yyyy-MM-ddTHH:mm:ss.sssZ"))?i:n}}]),angular.module("onmsDateFormatter").directive("onmsDate",["DateFormatterService",function(e){return{restrict:"E",compile:function(t){e.format(t.text()).then((function(e){t.replaceWith(e)})).catch((function(e){console.error("Failed to format "+t.text(),e)}))}}}])):console.log("Angular not found.  Not initializing OnmsDateFormatter Angular components."),e.exports=o},137:function(e,exports,t){"use strict";t(169);var n=r(t(208)),i=r(t(9)),a=r(t(11));function r(e){return e&&e.__esModule?e:{default:e}}var o=t(88);e.exports=function(e,t){var r=this;return r.deployed=t,r.modified=!1,r.foreignSource=e["foreign-source"],r.dateStamp=e["date-stamp"]||(0,n.default)(),r.lastImport=e["last-import"],r.nodes=[],(0,i.default)(angular).call(angular,e.node,(function(e){var n=new o(r.foreignSource,e,t);r.nodes.push(n)})),r.nodesInDatabase=0,r.nodesDefined=r.nodes.length,r.isModified=function(){return!!r.modified||!r.deployed},r.indexOf=function(e){for(var t=0;t<r.nodes.length;t++)if(r.nodes[t].foreignId===e)return t;return-1},r.getNode=function(e){var t=(0,a.default)(r).call(r,e);return t<0?null:r.nodes[t]},r.setNode=function(e){var t=(0,a.default)(r).call(r,e.foreignId);t<0?(r.nodes.push(e),r.nodesDefined++):r.nodes[t]=e,r.modified=!0,r.dateStamp=(0,n.default)()},r.setDeployed=function(e){r.deployed=e,r.modified=!1,(0,i.default)(angular).call(angular,r.nodes,(function(t){t.deployed=e,t.modified=!1})),r.lastImport=e?(0,n.default)():null},r.reset=function(){r.nodes=[],r.nodesDefined=0,r.nodesInDatabase=0,r.modified=!0,r.dateStamp=(0,n.default)()},r.className="Requisition",r}},138:function(e,exports,t){"use strict";var n,i=(n=t(9))&&n.__esModule?n:{default:n};t(116),t(117);var a=t(104);e.exports=function(e){var t=this;return t.ipAddress=e["ip-addr"],t.description=e.descr,t.snmpPrimary=e["snmp-primary"],t.status="managed",e&&e.status&&(t.status="1"===e.status?"managed":"unmanaged"),t.services=[],(0,i.default)(angular).call(angular,e["monitored-service"],(function(e){t.services.push(new a(e))})),t.className="RequisitionInterface",t}},139:function(e,exports,t){"use strict";t(13);var n=t(140),i=n.Scope;e.exports=function(){var e=this;return e.scope=i.NODE,e.scoped_interface=null,e.scoped_service=null,e.context=n.RequisitionContext,e.key=null,e.value=null,e.displayScope=function(){return e.scope===i.INTERFACE?"Interface":e.scope===i.SERVICE?"Service":"Node"},e.displayInterface=function(){return null!==e.scoped_interface?e.scoped_interface.ipAddress:null},e.displayService=function(){return null!==e.scoped_service?e.scoped_service.name:null},e.className="RequisitionMetaDataEntry",e}},140:function(e,exports,t){"use strict";e.exports={Scope:{NODE:"node",INTERFACE:"interface",SERVICE:"service"},RequisitionContext:"requisition"}},141:function(e,exports,t){"use strict";var n=t(83);t(25),angular.module("onms-requisitions").factory("SynchronizeService",["RequisitionsService","growl",function(e,t){return{synchronize:function(i,a){n.prompt({title:"Synchronize Requisition  "+_.escape(i.foreignSource),message:"<p><b>Choose a scan option: </b></p>",inputType:"radio",inputOptions:[{text:"Scan all nodes",value:"true"},{text:"Scan added nodes only",value:"false"},{text:"No scanning",value:"dbonly"}],buttons:{confirm:{label:"Synchronize"},cancel:{label:"Cancel"}},swapButtonOrder:"true",callback:function(n){null!==n&&function(n,i){e.startTiming(),e.synchronizeRequisition(n.foreignSource,i).then((function(){t.success("The import operation has been started for "+_.escape(n.foreignSource)+" (rescanExisting? "+i+")<br/>Use <b>refresh</b> to update the deployed statistics"),n.setDeployed(!0)}),a)}(i,n)}})}}}])},181:function(e,exports,t){"use strict";var n,i=(n=t(11))&&n.__esModule?n:{default:n};t(169);e.exports=function(){var e=this;return e.requisitions=[],e.indexOf=function(t){for(var n=0;n<e.requisitions.length;n++)if(e.requisitions[n].foreignSource===t)return n;return-1},e.getRequisition=function(t){var n=(0,i.default)(e).call(e,t);return n<0?null:e.requisitions[n]},e.setRequisition=function(t){var n=(0,i.default)(e).call(e,t.foreignSource);n<0?e.requisitions.push(t):e.requisitions[n]=t},e.className="RequisitionsData",e}},182:function(e,exports,t){"use strict";var n,i=(n=t(49))&&n.__esModule?n:{default:n};var a=t(88);e.exports=function(){var e=this;return e.foreignSource=null,e.foreignId=String((new Date).getTime()),e.nodeLabel=null,e.ipAddress=null,e.snmpCommunity="public",e.snmpVersion="v2c",e.noSnmp=!1,e.deviceUsername=null,e.devicePassword=null,e.enablePassword=null,e.accessMethod=null,e.autoEnable=!1,e.categories=[],e.createRequisitionedNode=function(){var t,n,r,o,s=new a(e.foreignSource,{"foreign-id":e.foreignId,"node-label":e.nodeLabel,interface:[{"ip-addr":e.ipAddress,"snmp-primary":e.noSnmp?"N":"P"}],category:e.categories},!1);return e.deviceUsername&&""!==(0,i.default)(t=e.deviceUsername).call(t)&&s.assets.push({name:"username",value:e.deviceUsername}),e.devicePassword&&""!==(0,i.default)(n=e.devicePassword).call(n)&&s.assets.push({name:"password",value:e.devicePassword}),e.enablePassword&&""!==(0,i.default)(r=e.enablePassword).call(r)&&s.assets.push({name:"enable",value:e.enablePassword}),e.accessMethod&&""!==(0,i.default)(o=e.accessMethod).call(o)&&s.assets.push({name:"connection",value:e.accessMethod}),e.autoEnable&&s.assets.push({name:"autoenable",value:"A"}),s},e.addNewCategory=function(){return e.categories.push({name:""}),e.categories.length-1},e.className="QuickNode",e}},183:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/quick-add-panel-basic.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <div class="form-group"> <label class="col-form-label" for="foreignSource">Requisition</label> <input class="form-control" type="text" id="foreignSource" name="foreignSource" placeholder="Select a Requisition (hit space bar to see the options or start typing the name)" ng-model="node.foreignSource" typeahead-editable="false" typeahead-min-length="0" uib-typeahead="fs for fs in foreignSources | filter:$viewValue" required ng-class="{ \'is-invalid\' : quickAddNodeForm.foreignSource.$invalid }"> </div> <div class="form-group"> <label class="col-form-label" for="ipAddress">IP Address</label> <input class="form-control" type="text" id="ipAddress" name="ipAddress" placeholder="A valid IPv4 or IPv6 address" ng-model="node.ipAddress" required valid-ip-address ng-class="{ \'is-invalid\' : quickAddNodeForm.ipAddress.$invalid }"> <p ng-show="quickAddNodeForm.ipAddress.$invalid" class="invalid-feedback">A valid IPv4 or IPv6 address is required</p> </div> <div class="form-group"> <label class="col-form-label" for="nodeLabel">Node Label</label> <input class="form-control" type="text" id="nodeLabel" name="nodeLabel" placeholder="The Node Label" ng-model="node.nodeLabel" required ng-class="{ \'is-invalid\' : quickAddNodeForm.nodeLabel.$invalid }"> </div> </div> ')}]),e.exports=t},184:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/quick-add-panel-snmp.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <div class="form-group"> <div class="checkbox"> <label> <input type="checkbox" id="noSnmp" name="noSnmp" ng-model="node.noSnmp"> No SNMP </label> </div> </div> <div class="form-group"> <label class="col-form-label" for="snmpVersion">Version</label> <select class="form-control custom-select" id="snmpVersion" name="snmpVersion" ng-model="node.snmpVersion" ng-disabled="node.noSnmp"> <option>v1</option> <option selected="selected">v2c</option> </select> </div> <div class="form-group"> <label class="col-form-label" for="snmpCommunity">Community String</label> <input class="form-control" type="text" id="snmpCommunity" name="snmpCommunity" placeholder="SNMP Community String" ng-model="node.snmpCommunity" ng-disabled="node.noSnmp"> </div> </div> ')}]),e.exports=t},185:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/quick-add-panel-categories.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <button class="btn btn-secondary my-2" id="add-category" ng-click="addCategory()"><i class="fa fa-plus"></i> Add Category</button> <br> <ng-form name="categoryForm" ng-repeat="category in node.categories"> <div class="form-group"> <div class="input-group"> <div class="input-group-prepend"> <div class="input-group-text"><i class="fa fa-pencil"></i></div> </div> <input class="form-control" type="text" name="categoryName" placeholder="Category Name" ng-model="category.name" typeahead-min-length="0" typeahead-editable="true" uib-typeahead="category for category in getAvailableCategories() | filter:$viewValue" required ng-class="{ \'is-invalid\' : categoryForm.categoryName.$invalid }"> <div class="input-group-append"> <button class="btn btn-secondary" type="button" ng-click="removeCategory($index)"> <span class="fa fa-trash"></span> </button> </div> <p ng-show="categoryForm.categoryName.$invalid" class="invalid-feedback">Category name is required and should be unique on the node.</p> </div> </div> </ng-form> </div> ')}]),e.exports=t},186:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/quick-add-panel-cli.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <div class="form-group"> <label class="col-form-label" for="descr">Device username</label> <input class="form-control" type="text" id="deviceUsername" name="deviceUsername" placeholder="The device username [optional]" ng-model="node.deviceUsername"> </div> <div class="form-group"> <label class="col-form-label" for="descr">Device password</label> <input class="form-control" type="text" id="devicePassword" name="devicePassword" placeholder="The device password [optional]" ng-model="node.devicePassword"> </div> <div class="form-group"> <label class="col-form-label" for="descr">Enable Password</label> <input class="form-control" type="text" id="enablePassword" name="enablePassword" placeholder="The enable password [optional]" ng-model="node.enablePassword"> </div> <div class="form-group"> <label class="col-form-label" for="descr">Access Method</label> <input class="form-control" type="text" id="accessmethod" name="accessMethod" placeholder="Access Method (hit space bar to see the options) [optional]" ng-model="node.accessMethod" typeahead-editable="false" typeahead-min-length="0" uib-typeahead="m for m in availableAccessMethods | filter:$viewValue" required> </div> <div class="form-group"> <div class="checkbox"> <label> <input type="checkbox" id="autoEnable" name="autoEnable" ng-model="node.autoEnable"> Auto Enable </label> </div> </div> </div> ')}]),e.exports=t},187:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/quick-add-panel-help.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <p> This workflow provides a quick way to add a node to an existing provisioning requisition in this OpenNMS system. </p> <p> <strong>Note: This operation <em>will</em> override any un-synchronized modifications made to the selected requisition.</strong> </p> <p> <em>Basic Attributes</em> are common to all nodes. Select the requisition into which this node should be added, provide an IP address on which OpenNMS will communicate with the node, and enter a node label. The node label will serve as the display name for the node throughout OpenNMS. </p> <p> <em>Surveillance Category Memberships</em> are optional and work like tags. A node can be a member of any number of surveillance categories, and the names of those categories can be used in a variety of powerful ways throughout the OpenNMS system. </p> <p> <em>SNMP Parameters</em> are optional and apply only to the node being requisitioned. If no values are specified here, OpenNMS\' system-wide SNMP configuration will be used to determine the appropriate values for the IP address entered in the <em>Basic Attributes</em> section. If the node does not support SNMP, the "No SNMP" box should be checked. Configuring SNMPv3 parameters via the web UI is not supported; contact your OpenNMS administrator if this node requires SNMPv3 parameters that differ from those in the system-wide configuration. </p> <p> <em>CLI Authentication Parameters</em> are optional and will be used only if one or more provisioning adapters are configured to use them. Typically this is the case if OpenNMS is integrated with an external configuration management system. </p> </div> ')}]),e.exports=t},22:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/lib/onms-http/403-permission-denied.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<span> <div class="modal-header"> <h3><i class="fa fa-exclamation-triangle text-warning"></i> Permission Denied</h3> </div> <div class="modal-body"> <h5> You are not allowed to perform the requested action. </h5> <p class="text-muted"> This is not supposed to happen. Please reload the page and contact your administrator if this occurs more often. </p> </div> <div class="modal-footer"> <button class="btn btn-primary" ng-click="reload()">Reload</button> </div> </span>')}]),e.exports=t},221:function(e,exports,t){"use strict";var n,i=(n=t(296))&&n.__esModule?n:{default:n};var a=t(381),r=a.Address4,o=a.Address6,s=function(e){try{new r(e)}catch(e){return!1}return!0},l=function(e){try{new o(e)}catch(e){return!1}return!0};console.log("init: ipaddress-js"),e.exports={Address4:r,Address6:o,verifyIPv4Address:s,verifyIPv6Address:l,isValidIPAddress:function(e){return s(e)||l(e)},checkIpRange:function(e,t){if(s(e)&&s(t)){var n=new r(e).bigInteger();return new r(t).bigInteger()>=n}if(l(e)&&l(t)){var i=new o(e).bigInteger();return new o(t).bigInteger().compareTo(i)>=0}return!1}},(0,i.default)(window,e.exports)},25:function(e,exports,t){"use strict";var n=d(t(11)),i=d(t(16)),a=d(t(9)),r=d(t(208)),o=d(t(29)),s=d(t(97)),l=d(t(209)),c=d(t(49));function d(e){return e&&e.__esModule?e:{default:e}}t(13);var u=t(181),f=t(137),p=t(88);angular.module("onms-requisitions").factory("RequisitionsService",["$q","$cacheFactory","$window","$http","$timeout","$log",function(e,t,d,m,g,v){v.debug("Initializing RequisitionsService");var h={internal:{}};return h.internal.cacheEnabled=!0,h.internal.cache=t("RequisitionsService"),h.internal.requisitionsUrl="rest/requisitions",h.internal.requisitionNamesUrl="rest/requisitionNames",h.internal.foreignSourcesUrl="rest/foreignSources",h.internal.foreignSourcesConfigUrl="rest/foreignSourcesConfig",h.internal.monitoringLocationsUrl="rest/monitoringLocations",h.internal.snmpConfigUrl="rest/snmpConfig",h.internal.errorHelp=" Check the OpenNMS logs for more details, or try again later.",h.internal.defaultTimeout=3,h.internal.timingStatus={isRunning:!1},h.internal.getCatchedConfigData=function(e){return h.internal.cache.get(e)},h.internal.setCatchedConfigData=function(e,t){h.internal.cacheEnabled&&h.internal.cache.put(e,t)},h.internal.getCachedRequisitionsData=function(){return h.internal.getCatchedConfigData("requisitionsData")},h.internal.setCachedRequisitionsData=function(e){return h.internal.setCatchedConfigData("requisitionsData",e)},h.internal.getCachedRequisition=function(e){var t=h.internal.getCachedRequisitionsData();return t?t.getRequisition(e):null},h.internal.getCachedNode=function(e,t){var n=h.internal.getCachedRequisition(e);return n?n.getNode(t):null},h.internal.addQuickNode=function(t){var n=t.createRequisitionedNode();return h.saveNode(n).then((function(){return v.debug("addQuickNode: the node "+n.nodeLabel+" has been saved."),h.synchronizeRequisition(n.foreignSource,"false").then((function(){return v.debug("addQuickNode: the requisition "+n.foreignSource+" has been synchronized."),n}),(function(){return e.reject("Cannot synchronize requisition "+n.foreignSource)}))}),(function(){return e.reject("Cannot quick-add node to requisition "+n.foreignSource)}))},h.internal.updateRequisition=function(e,t){v.debug("updateRequisition: updating deployed statistics for requisition "+t.name+".");var n=t["foreign-id"];e.nodesInDatabase=n.length,e.deployed=n.length>0,e.lastImport=t["last-imported"];for(var i=0;i<n.length;i++){var a=e.getNode(n[i]);a&&(a.deployed=!0)}return e},h.clearCache=function(){return v.debug("clearCache: removing everything from the internal cache"),h.internal.cache.removeAll(),!0},h.removeRequisitionFromCache=function(e){var t=h.internal.getCachedRequisitionsData();if(t){var a,r=(0,n.default)(t).call(t,e);if(r>=0)return v.debug("clearRequisitionCache: removing requisition "+e+" from the internal cache"),(0,i.default)(a=t.requisitions).call(a,r,1),!0}return!1},h.startTiming=function(e){var t=e||h.internal.defaultTimeout;v.debug("startTiming: starting timeout of "+t+" seconds."),h.internal.timingStatus.isRunning=!0,g((function(){h.internal.timingStatus.isRunning=!1}),1e3*t)},h.getTiming=function(){return h.internal.timingStatus},h.getRequisitions=function(){var t=h.internal.getCachedRequisitionsData();if(t)return v.debug("getRequisitions: returning a cached copy of the requisitions data"),e.when(t);var n=e.defer(),i=h.internal.requisitionsUrl;return v.debug("getRequisitions: retrieving requisitions."),m.get(i).then((function(e){var t=e.data,i=new u;(0,a.default)(angular).call(angular,t["model-import"],(function(e){var t=new f(e,!1);v.debug("getRequisitions: adding requisition "+t.foreignSource+"."),i.requisitions.push(t)})),h.updateDeployedStats(i).then((function(){h.internal.setCachedRequisitionsData(i),n.resolve(i)}),(function(e){n.reject(e)}))}),(function(e){var t=e.data,a=e.status;v.error("getRequisitions: GET "+i+" failed:",t,a),n.reject("Cannot retrieve the requisitions."+h.internal.errorHelp)})),n.promise},h.getRequisitionNames=function(){var t=h.internal.getCatchedConfigData("requisitionNames");if(t)return v.debug("getRequisitionNames: returning a cached copy of requisition names"),e.when(t);var n=e.defer(),i=h.internal.requisitionNamesUrl;return v.debug("getRequisitionNames: getting requisition names"),m.get(i).then((function(e){var t=e.data;v.debug("getRequisitionNames: got requisition names"),h.internal.setCatchedConfigData("requisitionNames",t["foreign-source"]),n.resolve(t["foreign-source"])}),(function(e){var t=e.data,a=e.status;v.error("getRequisitionNames: GET "+i+" failed:",t,a),n.reject("Cannot retrieve requisition names."+h.internal.errorHelp)})),n.promise},h.updateDeployedStats=function(t){var n=e.defer(),i=h.internal.requisitionsUrl+"/deployed/stats";return v.debug("updateDeployedStats: retrieving deployed statistics."),m.get(i).then((function(e){var i=e.data;(0,a.default)(angular).call(angular,t.requisitions,(function(e){var t=null;(0,a.default)(angular).call(angular,i["foreign-source"],(function(n){n.name===e.foreignSource&&(t=n)})),t?h.internal.updateRequisition(e,t):e.setDeployed(!1)})),n.resolve(t)}),(function(e){var t=e.data,a=e.status;v.error("updateDeployedStats: GET "+i+" failed:",t,a),n.reject("Cannot retrieve the deployed statistics."+h.internal.errorHelp)})),n.promise},h.updateDeployedStatsForRequisition=function(t){var n=e.defer(),i=h.internal.requisitionsUrl+"/deployed/stats/"+encodeURIComponent(t.foreignSource);return v.debug("updateDeployedStatsForRequisition: retrieving deployed statistics for requisition "+t.foreignSource),m.get(i).then((function(e){var i=e.data;h.internal.updateRequisition(t,i),n.resolve(t)}),(function(e){var a=e.data,r=e.status;v.error("updateDeployedStatsForRequisition: GET "+i+" failed:",a,r),n.resolve(t)})),n.promise},h.getRequisition=function(t){var n=h.internal.getCachedRequisition(t);if(n)return v.debug("getRequisition: returning a cached copy of "+t),e.when(n);var i=e.defer(),a=h.internal.requisitionsUrl+"/"+encodeURIComponent(t);return v.debug("getRequisition: getting requisition "+t),m.get(a).then((function(e){var n=new f(e.data);v.debug("getRequisition: got requisition "+t),h.updateDeployedStatsForRequisition(n).then((function(e){var n=h.internal.getCachedRequisitionsData();n&&(v.debug("getRequisition: updating cache for requisition "+t),n.setRequisition(e)),i.resolve(e)}))}),(function(e){var n=e.data,r=e.status;v.error("getRequisition: GET "+a+" failed:",n,r),i.reject("Cannot retrieve the requisition "+t+"."+h.internal.errorHelp)})),i.promise},h.synchronizeRequisition=function(t,i){var a=h.internal.getCachedRequisitionsData();if(a&&(0,n.default)(a).call(a,t)<0)return e.reject("The foreignSource "+t+" does not exist.");var r=e.defer(),o=h.internal.requisitionsUrl+"/"+encodeURIComponent(t)+"/import";return v.debug("synchronizeRequisition: synchronizing requisition "+t+" with rescanExisting="+i),m({method:"PUT",url:o,params:{rescanExisting:i}}).then((function(e){v.debug("synchronizeRequisition: synchronized requisition "+t);var n=h.internal.getCachedRequisition(t);n&&(v.debug("synchronizeRequisition: updating deployed status of requisition "+t),n.setDeployed(!0)),r.resolve(e.data)}),(function(e){var n=e.data,i=e.status;v.error("synchronizeRequisition: PUT "+o+" failed:",n,i),r.reject("Cannot synchronize the requisition "+t+"."+h.internal.errorHelp)})),r.promise},h.addRequisition=function(t){if(h.internal.getCachedRequisition(t))return e.reject("Invalid foreignSource "+t+", it already exist.");var n=e.defer(),i={"foreign-source":t,node:[]},a=h.internal.requisitionsUrl;return v.debug("addRequisition: adding requisition "+t),m.post(a,i).then((function(){var e=new f(i,!1);v.debug("addRequisition: added requisition "+e.foreignSource);var a=h.internal.getCachedRequisitionsData();a&&(v.debug("addRequisition: pushing requisition "+t+" into the internal cache"),a.requisitions.push(e)),n.resolve(e)}),(function(e){var i=e.data,r=e.status;v.error("addRequisition: POST "+a+" failed:",i,r),n.reject("Cannot add the requisition "+t+"."+h.internal.errorHelp)})),n.promise},h.deleteRequisition=function(t){var i=h.internal.getCachedRequisitionsData();if(i){var a=(0,n.default)(i).call(i,t);if(a<0)return e.reject("The foreignSource "+t+" does not exist.");var r=i.requisitions[a];if(r.nodesInDatabase>0)return e.reject("The foreignSource "+t+" contains "+r.nodesInDatabase+" nodes on the database, it cannot be deleted.")}var o=e.defer();v.debug("deleteRequisition: deleting requisition "+t);var s=m.delete(h.internal.requisitionsUrl+"/"+encodeURIComponent(t)),l=m.delete(h.internal.requisitionsUrl+"/deployed/"+encodeURIComponent(t)),c=m.delete(h.internal.foreignSourcesUrl+"/"+encodeURIComponent(t)),d=m.delete(h.internal.foreignSourcesUrl+"/deployed/"+encodeURIComponent(t));return e.all([s,l,c,d]).then((function(e){v.debug("deleteRequisition: deleted requisition "+t),h.removeRequisitionFromCache(t),o.resolve(e.data)}),(function(e){var n=e.data,i=e.status;v.error("deleteRequisition: DELETE operation failed:",n,i),o.reject("Cannot delete the requisition "+t+"."+h.internal.errorHelp)})),o.promise},h.removeAllNodesFromRequisition=function(t){var n=h.internal.getCachedRequisitionsData();if(n&&!n.getRequisition(t))return e.reject("The foreignSource "+t+" does not exist.");var i=e.defer(),a={"foreign-source":t,node:[]};v.debug("removeAllNodesFromRequisition: removing nodes from requisition "+t);var r=h.internal.requisitionsUrl;return m.post(r,a).then((function(e){var n=e.data;v.debug("removeAllNodesFromRequisition: removed nodes from requisition "+t),h.synchronizeRequisition(t,"false").then((function(){v.debug("removeAllNodesFromRequisition: rhe requisition "+t+" has been synchronized.");var e=h.internal.getCachedRequisition(t);e&&(v.debug("removeAllNodesFromRequisition: updating requisition "+t+" on the internal cache"),e.reset()),i.resolve(n)}),(function(){i.reject("Cannot synchronize requisition "+t)}))}),(function(e){var n=e.data,a=e.status;v.error("removeAllNodesFromRequisition: POST "+r+" failed:",n,a),i.reject("Cannot remove all nodes from requisition "+t+"."+h.internal.errorHelp)})),i.promise},h.getNode=function(t,n){var i=h.internal.getCachedNode(t,n);if(i)return v.debug("getNode: returning a cached copy of "+n+"@"+t),e.when(i);var a=e.defer(),r=h.internal.requisitionsUrl+"/"+encodeURIComponent(t)+"/nodes/"+encodeURIComponent(n);return v.debug("getNode: getting node "+n+"@"+t),m.get(r).then((function(e){var i=new p(t,e.data);v.debug("getNode: got node "+n+"@"+t);var r=h.internal.getCachedRequisition(t);r&&(v.debug("getNode: updating cache for requisition "+t),r.setNode(i)),a.resolve(i)}),(function(e){var i=e.data,o=e.status;v.error("getNode: GET "+r+" failed:",i,o),a.reject("Cannot retrieve node "+n+" from requisition "+t+"."+h.internal.errorHelp)})),a.promise},h.saveNode=function(t){var i=e.defer(),r=t.getOnmsRequisitionNode(),o=h.internal.requisitionsUrl+"/"+encodeURIComponent(t.foreignSource)+"/nodes";return v.debug("saveNode: saving node "+t.nodeLabel+" on requisition "+t.foreignSource),m.post(o,r).then((function(e){var r=e.data;v.debug("saveNode: saved node "+t.nodeLabel+" on requisition "+t.foreignSource),t.modified=!0;var o=h.internal.getCachedRequisition(t.foreignSource);o&&o.setNode(t);var s=h.internal.getCatchedConfigData("categoriesConfig");if(s){var l=!1;(0,a.default)(angular).call(angular,t.categories,(function(e){-1===(0,n.default)(s).call(s,e.name)&&(l=!0,s.push(e.name))})),l&&h.internal.setCatchedConfigData("categoriesConfig",s)}var c=h.internal.getCatchedConfigData("servicesConfig");if(c){var d=!1;(0,a.default)(angular).call(angular,t.interfaces,(function(e){(0,a.default)(angular).call(angular,e.services,(function(e){-1===(0,n.default)(c).call(c,e.name)&&(d=!0,c.push(e.name))}))})),d&&h.internal.setCatchedConfigData("servicesConfig",c)}i.resolve(r)}),(function(e){var n=e.data,a=e.status;v.error("saveNode: POST "+o+" failed:",n,a),i.reject("Cannot save node "+t.foreignId+" on requisition "+t.foreignSource+"."+h.internal.errorHelp)})),i.promise},h.deleteNode=function(t){var a=e.defer(),o=h.internal.requisitionsUrl+"/"+encodeURIComponent(t.foreignSource)+"/nodes/"+encodeURIComponent(t.foreignId);return v.debug("deleteNode: deleting node "+t.nodeLabel+" from requisition "+t.foreignSource),m.delete(o).then((function(e){var o=e.data;v.debug("deleteNode: deleted node "+t.nodeLabel+" on requisition "+t.foreignSource);var s=h.internal.getCachedRequisition(t.foreignSource);if(s){var l,c=(0,n.default)(s).call(s,t.foreignId);c>-1&&(v.debug("deleteNode: removing node "+t.foreignId+"@"+t.foreignSource+" from the internal cache"),(0,i.default)(l=s.nodes).call(l,c,1),s.nodesDefined--,s.modified=!0,s.dateStamp=(0,r.default)())}a.resolve(o)}),(function(e){var n=e.data,i=e.status;v.error("deleteNode: DELETE "+o+" failed:",n,i),a.reject("Cannot delete node "+t.foreignId+" from requisition "+t.foreignSource+"."+h.internal.errorHelp)})),a.promise},h.getForeignSourceDefinition=function(t){var n=e.defer(),i=h.internal.foreignSourcesUrl+"/"+encodeURIComponent(t);return v.debug("getForeignSourceDefinition: getting definition for requisition "+t),m.get(i).then((function(e){v.debug("getForeignSourceDefinition: got definition for requisition "+t),n.resolve(e.data)}),(function(e){var a=e.data,r=e.status;v.error("getForeignSourceDefinition: GET "+i+" failed:",a,r),n.reject("Cannot retrieve foreign source definition (detectors and policies) for requisition "+t+"."+h.internal.errorHelp)})),n.promise},h.saveForeignSourceDefinition=function(t){var n=e.defer(),i=t.name,a=h.internal.foreignSourcesUrl;return v.debug("saveForeignSourceDefinition: saving definition for requisition "+i),m.post(a,t).then((function(e){v.debug("saveForeignSourceDefinition: saved definition for requisition "+i),n.resolve(e.data)}),(function(e){var t=e.data,r=e.status;v.error("saveForeignSourceDefinition: POST "+a+" failed:",t,r),n.reject("Cannot save foreign source definition (detectors and policies) for requisition "+i+"."+h.internal.errorHelp)})),n.promise},h.cloneForeignSourceDefinition=function(t,i){var a=e.defer();return h.getRequisitionNames().then((function(e){(0,n.default)(e).call(e,t)<0?a.reject("The source requisition "+t+" does not exist."):(0,n.default)(e).call(e,i)<0?a.reject("The target requisition "+i+" does not exist."):h.getForeignSourceDefinition(t).then((function(e){e.name=i,h.saveForeignSourceDefinition(e).then((function(){a.resolve(e)}),(function(){a.reject("Cannot save foreign source definition for requisition "+i)}))}),(function(){a.reject("Cannot get foreign source definition for requisition "+t)}))}),(function(){a.reject("Cannot validate the existance of the source and target requisitions.")})),a.promise},h.deleteForeignSourceDefinition=function(t){var n=e.defer();v.debug("deleteForeignSourceDefinition: deleting foreign source definition "+t);var i=m.delete(h.internal.foreignSourcesUrl+"/"+encodeURIComponent(t)),a=m.delete(h.internal.foreignSourcesUrl+"/deployed/"+encodeURIComponent(t));return e.all([i,a]).then((function(e){v.debug("deleteForeignSourceDefinition: deleted foreign source definition "+t),n.resolve(e.data)}),(function(e){var i=e.data,a=e.status;v.error("deleteForeignSourceDefinition: DELETE operation failed:",i,a),n.reject("Cannot delete the foreign source definition "+t+"."+h.internal.errorHelp)})),n.promise},h.getAvailableDetectors=function(){var t=h.internal.getCatchedConfigData("detectorsConfig");if(t)return v.debug("getAvailableDetectors: returning a cached copy of detectors configuration"),e.when(t);var n=e.defer(),i=h.internal.foreignSourcesConfigUrl+"/detectors";return v.debug("getAvailableDetectors: getting available detectors"),m.get(i).then((function(e){var t=e.data;v.debug("getAvailableDetectors: got available detectors"),h.internal.setCatchedConfigData("detectorsConfig",t.plugins),n.resolve(t.plugins)}),(function(e){var t=e.data,a=e.status;v.error("getAvailableDetectors: GET "+i+" failed:",t,a),n.reject("Cannot retrieve available detectors."+h.internal.errorHelp)})),n.promise},h.getAvailablePolicies=function(){var t=h.internal.getCatchedConfigData("policiesConfig");if(t)return v.debug("getAvailablePolicies: returning a cached copy of policies configuration"),e.when(t);var n=e.defer(),i=h.internal.foreignSourcesConfigUrl+"/policies";return v.debug("getAvailablePolicies: getting available policies"),m.get(i).then((function(e){var t=e.data;v.debug("getAvailablePolicies: got available policies"),h.internal.setCatchedConfigData("policiesConfig",t.plugins),n.resolve(t.plugins)}),(function(e){var t=e.data,a=e.status;v.error("getAvailablePolicies: GET "+i+" failed:",t,a),n.reject("Cannot retrieve available policies."+h.internal.errorHelp)})),n.promise},h.getAvailableServices=function(t){var n=h.internal.getCatchedConfigData("servicesConfig");if(n)return v.debug("getAvailableServices: returning a cached copy of services configuration"),e.when(n);var i=e.defer(),a=h.internal.foreignSourcesConfigUrl+"/services/"+encodeURIComponent(t);return v.debug("getAvailableServices: getting available services"),m.get(a).then((function(e){var t=e.data;v.debug("getAvailableServices: got available services"),h.internal.setCatchedConfigData("servicesConfig",t.element),i.resolve(t.element)}),(function(e){var t=e.data,n=e.status;v.error("getAvailableServices: GET "+a+" failed:",t,n),i.reject("Cannot retrieve available services."+h.internal.errorHelp)})),i.promise},h.getAvailableAssets=function(){var t=h.internal.getCatchedConfigData("assetsConfig");if(t)return v.debug("getAvailableAssets: returning a cached copy of assets configuration"),e.when(t);var n=e.defer(),i=h.internal.foreignSourcesConfigUrl+"/assets";return v.debug("getAvailableAssets: getting available assets"),m.get(i).then((function(e){var t=e.data;v.debug("getAvailableAssets: got available assets"),h.internal.setCatchedConfigData("assetsConfig",t.element),n.resolve(t.element)}),(function(e){var t=e.data,a=e.status;v.error("getAvailableAssets: GET "+i+" failed:",t,a),n.reject("Cannot retrieve available assets."+h.internal.errorHelp)})),n.promise},h.getAvailableCategories=function(){var t=h.internal.getCatchedConfigData("categoriesConfig");if(t)return v.debug("getAvailableCategories: returning a cached copy of categories configuration"),e.when(t);var n=e.defer(),i=h.internal.foreignSourcesConfigUrl+"/categories";return v.debug("getAvailableCategories: getting available categories"),m.get(i).then((function(e){var t=e.data;v.debug("getAvailableCategories: got available categories"),h.internal.setCatchedConfigData("categoriesConfig",t.element),n.resolve(t.element)}),(function(e){var t=e.data,a=e.status;v.error("getAvailableCategories: GET "+i+" failed:",t,a),n.reject("Cannot retrieve available categories."+h.internal.errorHelp)})),n.promise},h.getAvailableLocations=function(){var t=e.defer(),n=h.internal.monitoringLocationsUrl;return v.debug("getAvailableLocations: getting available locations"),m.get(n).then((function(e){var n,i,a=e.data;v.debug("getAvailableLocations: got available locations");var r=(0,o.default)(n=(0,s.default)(i=a.location).call(i,(function(e){return e["location-name"]}))).call(n,(function(e){return e&&e.length>0&&"Default"!==e}));v.debug("Locations ="+(0,l.default)(r)),t.resolve(r)}),(function(e){var i=e.data,a=e.status;v.error("getAvailableLocations: GET "+n+" failed:",i,a),t.reject("Cannot retrieve available locations."+h.internal.errorHelp)})),t.promise},h.isForeignIdOnRequisition=function(t,n){var i=e.defer();return h.getRequisition(t).then((function(e){var t=!1;(0,a.default)(angular).call(angular,e.nodes,(function(e){e.foreignId===n&&(t=!0)})),i.resolve(t)}),(function(e){var a="cannot verify foreignId "+n+"@"+t+". ";v.error("isForeignIdOnRequisition: "+a,e),i.reject(a+h.internal.errorHelp)})),i.promise},h.isNodeLabelOnRequisition=function(t,n){var i=e.defer();return h.getRequisition(t).then((function(e){var t=!1;(0,a.default)(angular).call(angular,e.nodes,(function(e){e.nodeLabel===n&&(t=!0)})),i.resolve(t)}),(function(e){var a="cannot verify nodeLabel "+n+"@"+t+". ";v.error("isForeignIdOnRequisition: "+a,e),i.reject(a+h.internal.errorHelp)})),i.promise},h.isIpAddressOnNode=function(t,n,i){var a=e.defer();return h.getNode(t,n).then((function(e){var t,n=(0,o.default)(t=e.interfaces).call(t,(function(e){return e.ipAddress===i})).length>0;a.resolve(n)}),(function(e){var i="cannot verify ipAddress on node "+n+"@"+t+". ";v.error("isIpAddressOnNode: "+i,e),a.reject(i+h.internal.errorHelp)})),a.promise},h.isCategoryOnNode=function(t,n,i){var a=e.defer();return h.getNode(t,n).then((function(e){var t,n=(0,o.default)(t=e.categories).call(t,(function(e){return e.name===i})).length>0;a.resolve(n)}),(function(e){var i="cannot verify category on node "+n+"@"+t+". ";v.error("isCategoryOnNode: "+i,e),a.reject(i+h.internal.errorHelp)})),a.promise},h.isServiceOnNode=function(t,n,i,a){var r=e.defer();return h.getNode(t,n).then((function(e){var t,n=(0,o.default)(t=e.interfaces).call(t,(function(e){var t;return e.ipAddress===i&&(0,o.default)(t=e.services).call(t,(function(e){return e.name===a})).length>0})).length>0;r.resolve(n)}),(function(e){var i="cannot verify category on node "+n+"@"+t+". ";v.error("isIpAddressOnNode: "+i,e),r.reject(i+h.internal.errorHelp)})),r.promise},h.updateSnmpCommunity=function(t,n,i){var a=e.defer(),r=h.internal.snmpConfigUrl+"/"+t;return v.debug("updateSnmpCommunity: updating snmp community for "+t),m.put(r,{readCommunity:n,version:i}).then((function(){v.debug("updateSnmpCommunity: updated snmp community for "+t),a.resolve(t)}),(function(e){var n=e.data,i=e.status;v.error("updateSnmpCommunity: PUT "+r+" failed:",n,i),a.reject("Cannot update snmp community for "+t+"."+h.internal.errorHelp)})),a.promise},h.quickAddNode=function(t){var n;if(!1===t.noSnmp&&t.snmpCommunity&&""!==(0,c.default)(n=t.snmpCommunity).call(n)){var i=e.defer();return h.updateSnmpCommunity(t.ipAddress,t.snmpCommunity,t.snmpVersion).then((function(){h.internal.addQuickNode(t).then((function(e){i.resolve(e)}),(function(e){i.reject(e)}))}),(function(){i.reject("Cannot update SNMP credentials for "+t.ipAddress)})),i.promise}return h.internal.addQuickNode(t)},h}])},26:function(e,exports,t){"use strict";var n=t(15),i=t(17),a=t(18);n(exports,"__esModule",{value:!0}),exports.default=void 0,t(14);var r,o=(r=t(21))&&r.__esModule?r:{default:r};function s(e){return s="function"==typeof i&&"symbol"==typeof a?function(e){return typeof e}:function(e){return e&&"function"==typeof i&&e.constructor===i&&e!==i.prototype?"symbol":typeof e},s(e)}function l(e,t){for(var i=0;i<t.length;i++){var a=t[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),n(e,(r=a.key,l=void 0,l=function(e,t){if("object"!==s(e)||null===e)return e;var n=e[o.default];if(void 0!==n){var i=n.call(e,t||"default");if("object"!==s(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(r,"string"),"symbol"===s(l)?l:String(l)),a)}var r,l}var c=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,i,a;return t=e,a=[{key:"getBaseHref",value:function(){var e=document.getElementsByTagName("base")[0];return e?e.href:""}},{key:"setLocation",value:function(t){window&&window.location&&(window.location.href=e.getBaseHref()+t)}},{key:"toggle",value:function(e,t){var n=document.getElementsByName(t);for(var i in n)n.hasOwnProperty(i)&&(n[i].checked=e)}}],(i=null)&&l(t.prototype,i),a&&l(t,a),n(t,"prototype",{writable:!1}),e}();exports.default=c},3:function(e,exports,t){"use strict";t(5);var angular=t(40);t(53),t(54),t(55),t(56),t(51),t(57),t(58),t(59),t(60),t(12),t(61),t(62),console.log("init: angular-js "+angular.version.full),e.exports=window.angular=angular},301:function(e,exports,t){"use strict";t(10),t(136),t(63),t(302),t(304),t(305),t(306),t(310),t(311),t(312),t(313),t(323),t(328),t(329),t(330),t(331),t(334),t(335),t(182),t(137),t(138),t(88),t(104),t(181),t(25),t(141)},302:function(e,exports,t){"use strict";var n=a(t(9)),i=a(t(11));function a(e){return e&&e.__esModule?e:{default:e}}t(25),angular.module("onms-requisitions").config(["$locationProvider",function(e){e.hashPrefix("")}]).controller("AssetController",["$scope","$uibModalInstance","RequisitionsService","asset","assetsBlackList",function($scope,e,t,a,r){$scope.asset=a,$scope.assetFields=[],$scope.assetsBlackList=r,$scope.save=function(){e.close($scope.asset)},$scope.cancel=function(){e.dismiss("cancel")},$scope.getAvailableAssetFields=function(){var e=[];return(0,n.default)(angular).call(angular,$scope.assetFields,(function(t){var n;-1===(0,i.default)(n=$scope.assetsBlackList).call(n,t)&&e.push(t)})),e},t.getAvailableAssets().then((function(e){$scope.assetFields=e}))}])},303:function(e,exports,t){"use strict";t(13);var n=r(t(9)),i=r(t(277)),a=r(t(97));function r(e){return e&&e.__esModule?e:{default:e}}var o=t(139),s=t(138),l=t(104),c=t(140),d=c.Scope;e.exports=function(e,t){var r=this;r.requisition=[],r.other=[];var u=function(e){var t=new o;return t.context=e.context,t.key=e.key,t.value=e.value,t},f=[];return(0,n.default)(angular).call(angular,e["meta-data"],(function(e){var t=u(e);t.scope=d.NODE,f.push(t)})),(0,n.default)(angular).call(angular,e.interface,(function(e){var t=new s(e);(0,n.default)(angular).call(angular,e["meta-data"],(function(e){var n=u(e);n.scope=d.INTERFACE,n.scoped_interface=t,f.push(n)})),(0,n.default)(angular).call(angular,e["monitored-service"],(function(e){(0,n.default)(angular).call(angular,e["meta-data"],(function(n){var i=u(n);i.scope=d.SERVICE,i.scoped_interface=t,i.scoped_service=new l(e),f.push(i)}))}))})),r.removeEntriesForMissingScopedEntities=function(){_.remove(r.requisition,(function(e){return!r.doesReferencedEntityExist(e)})),_.remove(r.other,(function(e){return!r.doesReferencedEntityExist(e)}))},r.doesReferencedEntityExist=function(e){if(e.scope===d.INTERFACE||e.scope===d.SERVICE){var n=(0,i.default)(_).call(_,t.interfaces,(function(t){return t.ipAddress===e.scoped_interface.ipAddress}));if(void 0===n)return!1;if(e.scope===d.SERVICE)if(void 0===(0,i.default)(_).call(_,n.services,(function(t){return t.name===e.scoped_service.name})))return!1}return!0},r.addEntry=function(e){e.context===c.RequisitionContext?r.requisition.push(e):r.other.push(e)},r.removeEntry=function(e){_.remove(r.requisition,(function(t){return t===e})),_.remove(r.other,(function(t){return t===e}))},(0,n.default)(angular).call(angular,f,(function(e){r.addEntry(e)})),r.getOnmsMetaData=function(e){var t=[];return(0,n.default)(angular).call(angular,r.requisition,(function(n){e(n)&&t.push({context:c.RequisitionContext,key:n.key,value:n.value})})),(0,n.default)(angular).call(angular,r.other,(function(n){e(n)&&t.push({context:n.context,key:n.key,value:n.value})})),t},r.getOnmsMetaDataForNode=function(){return r.getOnmsMetaData((function(e){return e.scope===d.NODE}))},r.getOnmsMetaDataForInterface=function(e){return r.getOnmsMetaData((function(t){return t.scope===d.INTERFACE&&t.scoped_interface.ipAddress===e.ipAddress}))},r.getOnmsMetaDataForService=function(e,t){return r.getOnmsMetaData((function(n){return n.scope===d.SERVICE&&n.scoped_interface.ipAddress===e.ipAddress&&n.scoped_service.name===t.name}))},r.getKeysInScopeOf=function(e){var t=r.getOnmsMetaData((function(t){if(t.scope!==e.scope||t.context!==e.context)return!1;if(e.scope===d.INTERFACE||e.scope===d.SERVICE){if(t.scoped_interface.ipAddress!==e.scoped_interface.ipAddress)return!1;if(e.scope===d.SERVICE&&t.scoped_service.name!==e.scoped_service.name)return!1}return!0}));return(0,a.default)(_).call(_,t,(function(e){return e.key}))},r.className="RequisitionMetaData",r}},304:function(e,exports,t){"use strict";angular.module("onms-requisitions").config(["$locationProvider",function(e){e.hashPrefix("")}]).controller("CloneForeignSourceController",["$scope","$uibModalInstance","foreignSource","availableForeignSources",function($scope,e,t,n){$scope.foreignSource=t,$scope.targetForeignSource=null,$scope.availableForeignSources=n,$scope.save=function(){e.close($scope.targetForeignSource)},$scope.cancel=function(){e.dismiss("cancel")}}])},305:function(e,exports,t){"use strict";var n=a(t(9)),i=a(t(16));function a(e){return e&&e.__esModule?e:{default:e}}t(25),angular.module("onms-requisitions").config(["$locationProvider",function(e){e.hashPrefix("")}]).controller("DetectorController",["$scope","$uibModalInstance","RequisitionsService","detector",function($scope,e,t,a){$scope.detector=a,$scope.availableDetectors=[],$scope.availableParameters=[],$scope.getAvailableParameters=function(){var e=[];return(0,n.default)(angular).call(angular,$scope.availableParameters,(function(t){var i=!1;(0,n.default)(angular).call(angular,$scope.detector.parameter,(function(e){e.key===t.key&&(i=!0)})),i||e.push(t)})),e},$scope.save=function(){e.close($scope.detector)},$scope.cancel=function(){e.dismiss("cancel")},$scope.addParameter=function(){$scope.detector.parameter.push({key:"",value:""})},$scope.removeParameter=function(e){var t;(0,i.default)(t=$scope.detector.parameter).call(t,e,1)},$scope.updateAvailableParameters=function(e){e&&($scope.detector.parameter=[],(0,n.default)(angular).call(angular,$scope.availableDetectors,(function(t){t.class===e.class&&($scope.availableParameters=t.parameters)})))},t.getAvailableDetectors().then((function(e){$scope.availableDetectors=e,$scope.detector.class&&(0,n.default)(angular).call(angular,e,(function(e){if(e.class===$scope.detector.class){$scope.availableParameters=e.parameters;for(var t=[],n=0;n<e.parameters.length;n++)for(var i=e.parameters[n].key,a=0;a<$scope.detector.parameter.length;a++){var r=$scope.detector.parameter[a];r.key===i&&t.push(r)}$scope.detector.parameter=t}}))}))}])},306:function(e,exports,t){"use strict";var n,i=(n=t(16))&&n.__esModule?n:{default:n};t(13);var a,r,o,s=t(83);t(25),a=t(307),r=t(308),o=t(309),angular.module("onms-requisitions").config(["$locationProvider",function(e){e.hashPrefix("")}]).controller("ForeignSourceController",["$scope","$routeParams","$window","$uibModal","filterFilter","Configuration","RequisitionsService","growl",function($scope,e,t,n,l,c,d,u){$scope.timingStatus=d.getTiming(),$scope.foreignSource=e.foreignSource,$scope.foreignSourceDef={detectors:[],policies:[]},$scope.filters={detector:null,policy:null},$scope.filteredDetectors=[],$scope.detectorsPageSize=10,$scope.detectorsMaxSize=5,$scope.detectorsTotalItems=0,$scope.filteredPolicies=[],$scope.policiesPageSize=10,$scope.policiesMaxSize=5,$scope.policiesTotalItems=0,$scope.goTo=function(e){this.fsForm.$dirty?s.dialog({message:"There are changes on the current requisition. Are you sure you want to cancel ?",title:"Cancel Changes",buttons:{success:{label:"Yes",className:"btn-primary",callback:e},main:{label:"No",className:"btn-secondary"}}}):e()},$scope.goTop=function(){$scope.goTo((function(){t.location.href=c.baseHref+"#/requisitions"}))},$scope.goBack=function(){$scope.goTo((function(){"default"===$scope.foreignSource?t.location.href=c.baseHref+"#/requisitions":t.location.href=c.baseHref+"#/requisitions/"+encodeURIComponent($scope.foreignSource)}))},$scope.errorHandler=function(e){u.error(e,{ttl:1e4})},$scope.indexOfPolicy=function(e){for(var t=0;t<$scope.foreignSourceDef.policies.length;t++)if($scope.foreignSourceDef.policies[t].name===e.name)return t;return-1},$scope.indexOfDetector=function(e){for(var t=0;t<$scope.foreignSourceDef.detectors.length;t++)if($scope.foreignSourceDef.detectors[t].name===e.name)return t;return-1},$scope.editPolicy=function(e,t){var i=this.fsForm;n.open({backdrop:"static",keyboard:!1,controller:"PolicyController",templateUrl:a,resolve:{policy:function(){return angular.copy(e)}}}).result.then((function(t){angular.copy(t,e),i.$dirty=!0}),(function(){t&&$scope.foreignSourceDef.policies.pop()}))},$scope.movePolicy=function(e){var t=this.fsForm,a=$scope.indexOfPolicy(e),o=$scope.foreignSourceDef.policies.length-1;n.open({backdrop:"static",keyboard:!1,size:"sm",controller:"MoveController",templateUrl:r,resolve:{label:function(){return e.name},position:function(){return a},maximum:function(){return o}}}).result.then((function(n){var r,o;t.$dirty=!0,(0,i.default)(r=$scope.foreignSourceDef.policies).call(r,a,1),(0,i.default)(o=$scope.foreignSourceDef.policies).call(o,n,0,e)}))},$scope.removePolicy=function(e){var t,n=$scope.indexOfPolicy(e);n>-1&&((0,i.default)(t=$scope.foreignSourceDef.policies).call(t,n,1),this.fsForm.$dirty=!0)},$scope.addPolicy=function(){$scope.foreignSourceDef.policies.push({name:"",class:"",parameter:[]});var e=$scope.foreignSourceDef.policies.length-1;$scope.editPolicy($scope.foreignSourceDef.policies[e],!0)},$scope.editDetector=function(e,t){var i=this.fsForm;n.open({backdrop:"static",keyboard:!1,controller:"DetectorController",templateUrl:o,resolve:{detector:function(){return angular.copy(e)}}}).result.then((function(t){angular.copy(t,e),i.$dirty=!0}),(function(){t&&$scope.foreignSourceDef.detectors.pop()}))},$scope.moveDetector=function(e){var t=this.fsForm,a=$scope.indexOfDetector(e),o=$scope.foreignSourceDef.detectors.length-1;n.open({backdrop:"static",keyboard:!1,size:"sm",controller:"MoveController",templateUrl:r,resolve:{label:function(){return e.name},position:function(){return a},maximum:function(){return o}}}).result.then((function(n){var r,o;t.$dirty=!0,(0,i.default)(r=$scope.foreignSourceDef.detectors).call(r,a,1),(0,i.default)(o=$scope.foreignSourceDef.detectors).call(o,n,0,e)}))},$scope.removeDetector=function(e){var t,n=$scope.indexOfDetector(e);n>-1&&((0,i.default)(t=$scope.foreignSourceDef.detectors).call(t,n,1),this.fsForm.$dirty=!0)},$scope.addDetector=function(){$scope.foreignSourceDef.detectors.push({name:"",class:"",parameter:[]});var e=$scope.foreignSourceDef.detectors.length-1;$scope.editDetector($scope.foreignSourceDef.detectors[e],!0)},$scope.save=function(){var e=this.fsForm;d.startTiming(),d.saveForeignSourceDefinition($scope.foreignSourceDef).then((function(){u.success("The definition for the requisition "+_.escape($scope.foreignSource)+" has been saved."),e.$dirty=!1}),$scope.errorHandler)},$scope.reset=function(){s.confirm("Are you sure you want to reset the foreign source definition to the default ?",(function(e){e&&(d.startTiming(),d.deleteForeignSourceDefinition($scope.foreignSource).then((function(){u.success("The foreign source definition for "+_.escape($scope.foreignSource)+"has been reseted."),$scope.initialize()}),$scope.errorHandler))}))},$scope.updateFilteredPolicies=function(){$scope.policiesCurrentPage=1,$scope.policiesTotalItems=$scope.filteredPolicies.length,$scope.policiesNumPages=Math.ceil($scope.policiesTotalItems/$scope.policiesPageSize)},$scope.updateFilteredDetectors=function(){$scope.detectorsCurrentPage=1,$scope.detectorsTotalItems=$scope.filteredDetectors.length,$scope.detectorsNumPages=Math.ceil($scope.detectorsTotalItems/$scope.detectorsPageSize)},$scope.initialize=function(){u.success("Retrieving definition for requisition "+_.escape($scope.foreignSource)+"..."),d.getForeignSourceDefinition($scope.foreignSource).then((function(e){$scope.foreignSourceDef=e,$scope.filteredDetectors=$scope.foreignSourceDef.detectors,$scope.updateFilteredDetectors(),$scope.filteredPolicies=$scope.foreignSourceDef.policies,$scope.updateFilteredPolicies()}),$scope.errorHandler)},$scope.$watch("filters.detector",(function(){$scope.filteredDetectors=l($scope.foreignSourceDef.detectors,$scope.filters.detector),$scope.updateFilteredDetectors()})),$scope.$watch("filters.policy",(function(){$scope.filteredPolicies=l($scope.foreignSourceDef.policies,$scope.filters.policy),$scope.updateFilteredPolicies()})),$scope.foreignSource&&$scope.initialize()}])},307:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/policy.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <div class="modal-header"> <h3 class="modal-title">Policy</h3> </div> <div class="modal-body"> <form name="policyForm"> <div class="form-group"> <label class="col-form-label" for="name">Name</label> <input class="form-control" type="text" id="name" name="name" placeholder="Policy Name" ng-model="policy.name" required ng-class="{ \'is-invalid\' : policyForm.name.$invalid }"> <p ng-show="policyForm.name.$invalid" class="invalid-feedback">A non empty name is required.</p> </div> <div class="form-group"> <label class="col-form-label" for="clazz">Class</label> <input class="form-control" type="text" id="clazz" name="clazz" placeholder="Implementation Class (choose one from the list)" ng-model="policy.class" typeahead-min-length="0" typeahead-editable="false" typeahead-on-select="updatePolicyParameters($item)" uib-typeahead="policy.class as policy.name for policy in availablePolicies | filter:$viewValue" required ng-class="{ \'is-invalid\' : policyForm.clazz.$invalid }"> <p ng-show="policyForm.clazz.$invalid" class="invalid-feedback">A valid class name is required.</p> </div> <ng-form name="paramForm" ng-repeat="parameter in policy.parameter" ng-include="getTemplate(parameter)"> </ng-form> </form> </div> <div class="modal-footer"> <button type="button" class="btn btn-secondary" id="add-policy-parameter" ng-click="addParameter()" ng-disabled="policyForm.clazz.$invalid">Add Parameter</button> <button type="button" class="btn btn-primary" id="save-policy" ng-click="save()" ng-disabled="policyForm.$invalid">Save</button> <button type="button" class="btn btn-secondary" id="cancel=policy" ng-click="cancel()">Cancel</button> </div> </div> ')}]),e.exports=t},308:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/move.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <div class="modal-header"> <h3 class="modal-title">Move</h3> </div> <div class="modal-body"> <form name="moveForm"> <label class="col-form-label">{{ label }}</label> <div class="input-group"> <span class="input-group-prepend"> <button type="button" class="btn btn-secondary btn-number" ng-disabled="position == 0 || moveForm.$invalid" ng-click="substract()"> <span class="fa fa-minus"></span> </button> </span> <input type="text" ng-model="position" class="form-control input-number" ng-pattern="/\\d+/" required> <span class="input-group-append"> <button type="button" class="btn btn-secondary btn-number" ng-disabled="position == maximum || moveForm.$invalid" ng-click="add()"> <span class="fa fa-plus"></span> </button> </span> </div> <p class="form-text text-muted">Choose a index between 0 and {{ maximum }}.</p> </form> </div> <div class="modal-footer"> <button type="button" class="btn btn-primary" id="save-detector" ng-click="move()" ng-disabled="position > maximum || moveForm.$invalid">Move</button> <button type="button" class="btn btn-secondary" id="cancel-detector" ng-click="cancel()">Cancel</button> </div> </div> ')}]),e.exports=t},309:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/detector.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <div class="modal-header"> <h3 class="modal-title">Detector</h3> </div> <div class="modal-body"> <form name="detectorForm"> <div class="form-group"> <label class="col-form-label" for="name">Name</label> <input class="form-control" type="text" id="name" name="name" placeholder="Detector Name" ng-model="detector.name" required ng-class="{ \'is-invalid\' : detectorForm.name.$invalid }"> <p ng-show="detectorForm.name.$invalid" class="invalid-feedback">A non empty name is required.</p> </div> <div class="form-group"> <label class="col-form-label" for="clazz">Class</label> <input class="form-control" type="text" id="clazz" name="clazz" placeholder="Implementation Class (choose one from the list)" ng-model="detector.class" typeahead-min-length="0" typeahead-editable="false" typeahead-on-select="updateAvailableParameters($item)" uib-typeahead="detector.class as detector.name for detector in availableDetectors | filter:$viewValue" required ng-class="{ \'is-invalid\' : detectorForm.clazz.$invalid }"> <p ng-show="detectorForm.clazz.$invalid" class="invalid-feedback">A valid class name is required.</p> </div> <ng-form name="paramForm" ng-repeat="parameter in detector.parameter"> <div class="form-group"> <input class="form-control" type="text" name="paramName" ng-if="!parameter.key" placeholder="Parameter Name (choose one from the list)" ng-model="parameter.key" typeahead-min-length="0" typeahead-editable="false" uib-typeahead="param.key as param.key for param in getAvailableParameters() | filter:$viewValue" required ng-class="{ \'is-invalid\' : paramForm.paramName.$invalid }"> <p ng-show="paramForm.paramName.$invalid" class="invalid-feedback">Parameter name is required.</p> </div> <div class="form-group"> <label ng-if="parameter.key" class="col-form-label">{{parameter.key}}</label> <div class="input-group"> <input class="form-control" type="text" name="paramValue" placeholder="Parameter Value" ng-model="parameter.value" required ng-class="{ \'is-invalid\' : paramForm.paramValue.$invalid }"> <div class="input-group-append"> <button type="button" class="btn btn-secondary" ng-click="removeParameter($index)"> <span class="fa fa-trash"></span> </button> </div> <p ng-show="paramForm.paramValue.$invalid" class="invalid-feedback">Parameter value is required.</p> </div> </div> </ng-form> </form> </div> <div class="modal-footer"> <button type="button" class="btn btn-secondary" id="add-detector-parameter" ng-click="addParameter()" ng-disabled="detectorForm.clazz.$invalid || getAvailableParameters().length == 0">Add Parameter</button> <button type="button" class="btn btn-primary" id="save-detector" ng-click="save()" ng-disabled="detectorForm.$invalid">Save</button> <button type="button" class="btn btn-secondary" id="cancel-detector" ng-click="cancel()">Cancel</button> </div> </div> ')}]),e.exports=t},310:function(e,exports,t){"use strict";t(13);var n=r(t(29)),i=r(t(16)),a=r(t(9));function r(e){return e&&e.__esModule?e:{default:e}}t(25);var o=t(104);angular.module("onms-requisitions").config(["$locationProvider",function(e){e.hashPrefix("")}]).controller("InterfaceController",["$scope","$uibModalInstance","RequisitionsService","foreignSource","foreignId","requisitionInterface","ipBlackList","primaryInterface",function($scope,e,t,r,s,l,c,d){$scope.foreignSource=r,$scope.foreignId=s,$scope.requisitionInterface=l,$scope.ipBlackList=c,$scope.primaryInterface=d,$scope.snmpPrimaryFields=[{id:"P",title:"Primary"},{id:"S",title:"Secondary"},{id:"N",title:"Not Eligible"}],$scope.availableServices=[],$scope.save=function(){e.close($scope.requisitionInterface)},$scope.getSnmpPrimaryValues=function(e){var t;return null!==$scope.primaryInterface&&e!==$scope.primaryInterface?(0,n.default)(t=$scope.snmpPrimaryFields).call(t,(function(e){return"P"!==e.id})):$scope.snmpPrimaryFields},$scope.cancel=function(){e.dismiss("cancel")},$scope.addService=function(){$scope.requisitionInterface.services.push(new o({"service-name":""}))},$scope.removeService=function(e){var t;(0,i.default)(t=$scope.requisitionInterface.services).call(t,e,1)},$scope.getAvailableServices=function(){var e=[];return(0,a.default)(angular).call(angular,$scope.availableServices,(function(t){var n=!1;(0,a.default)(angular).call(angular,$scope.requisitionInterface.services,(function(e){e.name===t&&(n=!0)})),n||e.push(t)})),e},t.getAvailableServices($scope.foreignSource).then((function(e){$scope.availableServices=e}))}])},311:function(e,exports,t){"use strict";t(48),t(133),t(13);var n=r(t(11)),i=r(t(9)),a=r(t(475));function r(e){return e&&e.__esModule?e:{default:e}}t(25);t(139);var o=t(140).Scope,s=t(220);angular.module("onms-requisitions").config(["$locationProvider",function(e){e.hashPrefix("")}]).controller("MetaDataController",["$scope","$uibModalInstance","node","entry",function($scope,e,t,r){$scope.node=t,$scope.entry=r,$scope.resolveScopeReferences=function(e){e.scope===o.INTERFACE?e.scoped_interface=$scope.node.interfaces[e.interface_idx]:e.scope===o.SERVICE&&(e.scoped_interface=$scope.interfacesWithServices[e.interface_idx],e.scoped_service=e.scoped_interface.services[e.service_idx])},$scope.save=function(){$scope.resolveScopeReferences($scope.entry),e.close($scope.entry)},$scope.cancel=function(){e.dismiss("cancel")},$scope.getValueRowCount=function(e){var t;if(!e.value||(0,n.default)(t=e.value).call(t,"\n")<0)return 1;var i=(e.value.match(/\n/g)||[]).length;return Math.min(i+1,3)},$scope.interfacesWithServices=[],$scope.availableScopes={},$scope.availableScopes[o.NODE]="Node",$scope.node.interfaces&&$scope.node.interfaces.length>0&&($scope.availableScopes[o.INTERFACE]="Interface",(0,i.default)(s).call(s,$scope.node.interfaces,(function(e){e.services&&e.services.length>0&&$scope.interfacesWithServices.push(e)})),$scope.interfacesWithServices.length>0&&($scope.availableScopes[o.SERVICE]="Service")),$scope.entry.interface_idx=0,$scope.entry.service_idx=0,$scope.entry.scope===o.INTERFACE&&$scope.entry.scoped_interface?($scope.entry.interface_idx=(0,a.default)(s).call(s,$scope.node.interfaces,(function(e){return e.ipAddress===$scope.entry.scoped_interface.ipAddress})),$scope.entry.interface_idx<0&&($scope.entry.interface_idx=0)):$scope.entry.scope===o.SERVICE&&$scope.entry.scoped_service&&$scope.interfacesWithServices.length>0&&($scope.entry.interface_idx=(0,a.default)(s).call(s,$scope.interfacesWithServices,(function(e){return e.ipAddress===$scope.entry.scoped_interface.ipAddress})),$scope.entry.interface_idx<0&&($scope.entry.interface_idx=0),$scope.entry.service_idx=(0,a.default)(s).call(s,$scope.interfacesWithServices[$scope.entry.interface_idx].services,(function(e){return e.name===$scope.entry.scoped_service.name})),$scope.entry.service_idx<0&&($scope.entry.service_idx=0)),$scope.entry.interface_idx=String($scope.entry.interface_idx),$scope.entry.service_idx=String($scope.entry.service_idx),$scope.originalKey=$scope.entry.key}])},312:function(e,exports,t){"use strict";angular.module("onms-requisitions").config(["$locationProvider",function(e){e.hashPrefix("")}]).controller("MoveController",["$controller","$scope","$uibModalInstance","label","position","maximum",function(e,$scope,t,n,i,a){$scope.label=n,$scope.position=i,$scope.maximum=a,$scope.add=function(){$scope.position++},$scope.substract=function(){$scope.position--},$scope.move=function(){t.close($scope.position)},$scope.cancel=function(){t.dismiss("cancel")}}])},313:function(e,exports,t){"use strict";t(13);var n=a(t(9)),i=a(t(16));function a(e){return e&&e.__esModule?e:{default:e}}var r=t(83);t(25);var o,s,l,c,d,u,f,p,m,g=t(88),v=t(139);o=t(314),s=t(315),l=t(316),c=t(317),d=t(318),u=t(319),f=t(320),p=t(321),m=t(322),angular.module("onms-requisitions").config(["$locationProvider",function(e){e.hashPrefix("")}]).controller("NodeController",["$scope","$routeParams","$cookies","$window","$uibModal","Configuration","RequisitionsService","growl",function($scope,e,t,a,h,b,y,q){$scope.nodeBasicView=c,$scope.nodePathoutagesView=d,$scope.nodeInterfacesView=u,$scope.nodeAssetsView=f,$scope.nodeMetaDataView=p,$scope.nodeCategoriesView=m,$scope.timingStatus=y.getTiming(),$scope.foreignSource=e.foreignSource,$scope.foreignId=e.foreignId,$scope.isNew="__new__"===$scope.foreignId,$scope.node={},$scope.availableCategories=[],$scope.availableLocations=[],$scope.foreignIdBlackList=[],$scope.goTo=function(e){var t=function(){a.location.href=e};this.nodeForm.$dirty?r.dialog({message:"There are changes on the current node. Are you sure you want to cancel ?",title:"Cancel Changes",buttons:{success:{label:"Yes",className:"btn-primary",callback:t},main:{label:"No",className:"btn-secondary"}}}):t()},$scope.goTop=function(){$scope.goTo(b.baseHref+"#/requisitions")},$scope.goBack=function(){$scope.goTo(b.baseHref+"#/requisitions/"+encodeURIComponent($scope.foreignSource))},$scope.goVerticalLayout=function(){t.put("use_requisitions_node_vertical_layout","true"),$scope.goTo(b.baseHref+"#/requisitions/"+encodeURIComponent($scope.foreignSource)+"/nodes/"+encodeURIComponent($scope.foreignId)+"/vertical")},$scope.goHorizontalLayout=function(){t.put("use_requisitions_node_vertical_layout","false"),$scope.goTo(b.baseHref+"#/requisitions/"+encodeURIComponent($scope.foreignSource)+"/nodes/"+encodeURIComponent($scope.foreignId))},$scope.errorHandler=function(e){q.error(e,{ttl:1e4})},$scope.generateForeignId=function(e){$scope.node.foreignId=String((new Date).getTime()),e.$invalid=!1},$scope.editAsset=function(e,t){var i=this.nodeForm,a=$scope.node.assets[e],r=[];(0,n.default)(angular).call(angular,$scope.node.assets,(function(e){r.push(e.name)})),h.open({backdrop:"static",keyboard:!1,controller:"AssetController",templateUrl:o,resolve:{asset:function(){return angular.copy(a)},assetsBlackList:function(){return r}}}).result.then((function(e){angular.copy(e,a),i.$dirty=!0}),(function(){t&&$scope.node.assets.pop()}))},$scope.removeAsset=function(e){var t;(0,i.default)(t=$scope.node.assets).call(t,e,1),this.nodeForm.$dirty=!0},$scope.addAsset=function(){$scope.editAsset($scope.node.addNewAsset(),!0)},$scope.onMetadataTabSelect=function(){$scope.node.metaData.removeEntriesForMissingScopedEntities()},$scope.deleteNode=function(e){r.confirm("Are you sure you want to delete the current node?",(function(t){t&&(y.startTiming(),y.deleteNode(e).then((function(){$scope.nodeForm.$setPristine(),$scope.goBack(),e.nodeLabel?q.success("The node "+_.escape(e.nodeLabel)+" has been deleted."):q.success("The node has been deleted.")}),$scope.errorHandler))}))},$scope.editMetaData=function(e,t){var n=this.nodeForm;h.open({backdrop:"static",keyboard:!1,controller:"MetaDataController",templateUrl:s,resolve:{node:function(){return angular.copy($scope.node)},entry:function(){return angular.copy(e)}}}).result.then((function(i){angular.copy(i,e),n.$dirty=!0,t&&$scope.node.metaData.addEntry(e)}))},$scope.removeMetaData=function(e){$scope.node.metaData.removeEntry(e),this.nodeForm.$dirty=!0},$scope.addMetaData=function(){$scope.editMetaData(new v,!0)},$scope.editInterface=function(e,t){var i=this.nodeForm,a=$scope.node.interfaces[e],r=$scope.foreignSource,o=$scope.foreignId,s=[];(0,n.default)(angular).call(angular,$scope.node.interfaces,(function(e){s.push(e.ipAddress)})),h.open({backdrop:"static",keyboard:!1,controller:"InterfaceController",templateUrl:l,resolve:{foreignId:function(){return o},foreignSource:function(){return r},requisitionInterface:function(){return angular.copy(a)},ipBlackList:function(){return s},primaryInterface:function(){return $scope.getPrimaryAddress()}}}).result.then((function(e){angular.copy(e,a),i.$dirty=!0}),(function(){t&&$scope.node.interfaces.pop()}))},$scope.removeInterface=function(e){var t;(0,i.default)(t=$scope.node.interfaces).call(t,e,1),this.nodeForm.$dirty=!0},$scope.addInterface=function(){$scope.editInterface($scope.node.addNewInterface(),!0)},$scope.removeCategory=function(e){var t;(0,i.default)(t=$scope.node.categories).call(t,e,1),this.nodeForm.$dirty=!0},$scope.addCategory=function(){$scope.node.addNewCategory(),this.nodeForm.$dirty=!0},$scope.save=function(){var e=this.nodeForm;y.startTiming(),y.saveNode($scope.node).then((function(){q.success("The node "+_.escape($scope.node.nodeLabel)+" has been saved."),$scope.foreignId=$scope.node.foreignId,e.$dirty=!1}),$scope.errorHandler)},$scope.refresh=function(){q.success("Retrieving node "+_.escape($scope.foreignId)+" from requisition "+_.escape($scope.foreignSource)+"..."),y.getNode($scope.foreignSource,$scope.foreignId).then((function(e){$scope.node=e}),$scope.errorHandler)},$scope.getAvailableCategories=function(){var e=[];return(0,n.default)(angular).call(angular,$scope.availableCategories,(function(t){var i=!1;(0,n.default)(angular).call(angular,$scope.node.categories,(function(e){e.name===t&&(i=!0)})),i||e.push(t)})),e},$scope.getPrimaryAddress=function(){var e=$scope.node.getPrimaryIpAddress();return e||null},$scope.isNew?$scope.node=new g($scope.foreignSource,{}):$scope.refresh(),y.getAvailableCategories().then((function(e){$scope.availableCategories=e}),$scope.errorHandler),y.getAvailableLocations().then((function(e){$scope.availableLocations=e}),$scope.errorHandler),y.getRequisition($scope.foreignSource).then((function(e){(0,n.default)(angular).call(angular,e.nodes,(function(e){$scope.foreignIdBlackList.push(e.foreignId)}))}),$scope.errorHandler)}])},314:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/asset.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <div class="modal-header"> <h3 class="modal-title">Asset Field</h3> </div> <div class="modal-body"> <form name="assetForm"> <div class="form-group"> <div class="form-group"> <label class="col-form-label" for="name">Name</label> <input class="form-control" type="text" id="asset-name" name="name" placeholder="Asset Name (choose one from the list)" ng-model="asset.name" typeahead-min-length="0" uib-typeahead="asset for asset in getAvailableAssetFields() | filter:$viewValue" typeahead-editable="false" required ng-class="{ \'is-invalid\' : assetForm.name.$invalid }"> <p ng-show="assetForm.name.$invalid" class="invalid-feedback">A valid asset field name is required.</p> </div> <div class="form-group"> <label class="col-form-label" for="value">Value</label> <input class="form-control" type="text" id="asset-value" name="value" placeholder="Asset Value" ng-model="asset.value" required ng-class="{ \'is-invalid\' : assetForm.value.$invalid }"> <p ng-show="assetForm.value.$invalid" class="invalid-feedback">A non empty value is required.</p> </div> </div> </form> </div> <div class="modal-footer"> <button type="button" class="btn btn-primary" id="save-asset" ng-click="save()" ng-disabled="assetForm.$invalid">Save</button> <button type="button" class="btn btn-secondary" id="cancel-asset" ng-click="cancel()">Cancel</button> </div> </div> ')}]),e.exports=t},315:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/metadata.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <div class="modal-header"> <h3 class="modal-title">Meta-Data Entry</h3> </div> <div class="modal-body"> <form name="metaDataForm"> <div class="form-group"> <div class="form-group"> <label class="control-label" for="metadata-context">Scope</label> <select class="form-control" id="metadata-context" ng-model="entry.scope" required> <option ng-repeat="(scope, displayString) in availableScopes" value="{{ scope }}">{{ displayString }}</option> </select> </div> <div ng-if="entry.scope == \'interface\'"> <div class="form-group"> <label class="control-label" for="metadata-interface">Interface</label> <select class="form-control" id="metadata-interface" ng-model="entry.interface_idx" required> <option ng-repeat="iff in node.interfaces" value="{{ $index }}">{{ iff.ipAddress }}</option> </select> </div> </div> <div ng-if="entry.scope == \'service\'"> <div> <label class="control-label" for="metadata-service-interface">Interface</label> <select class="form-control" id="metadata-service-interface" ng-model="entry.interface_idx" required> <option ng-repeat="iff in interfacesWithServices" value="{{ $index }}">{{ iff.ipAddress }}</option> </select> </div> <div class="form-group"> <label class="control-label" for="metadata-service-service">Service</label> <select class="form-control" id="metadata-service-service" ng-model="entry.service_idx" required> <option ng-repeat="svc in interfacesWithServices[entry.interface_idx].services" value="{{ $index }}">{{ svc.name }}</option> </select> </div> </div> <div class="form-group" ng-class="{ \'has-error\' : metaDataForm.value.$invalid }"> <label class="control-label" for="metadata-key">Key</label> <input class="form-control" type="text" id="metadata-key" name="key" placeholder="Key" ng-model="entry.key" required valid-meta-data-key="entry"> <p ng-show="metaDataForm.key.$invalid" class="help-block">A unique key is required.</p> </div> <div class="form-group" ng-class="{ \'has-error\' : metaDataForm.value.$invalid }"> <label class="control-label" for="metadata-value">Value</label> <textarea class="form-control" cols="60" rows="{{ getValueRowCount(entry) }}" id="metadata-value" name="value" placeholder="Value" ng-model="entry.value">\n        </textarea> <p ng-show="metaDataForm.value.$invalid" class="help-block">A non empty value is required.</p> </div> </div> </form> </div> <div class="modal-footer"> <button type="button" class="btn btn-primary" id="save-metadata" ng-click="save()" ng-disabled="metaDataForm.$invalid">Save</button> <button type="button" class="btn btn-default" id="cancel-metadata" ng-click="cancel()">Cancel</button> </div> </div> ')}]),e.exports=t},316:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/interface.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <div class="modal-header"> <h3 class="modal-title">Interface</h3> </div> <div class="modal-body"> <form name="intfForm"> <div class="form-group"> <label class="col-form-label" for="ipAddress">IP Address</label> <input class="form-control" type="text" id="ipAddress" name="ipAddress" placeholder="A valid IPv4 or IPv6 address" ng-model="requisitionInterface.ipAddress" required valid-ip-address ng-class="{ \'is-invalid\' : intfForm.ipAddress.$invalid }"> <p ng-show="intfForm.ipAddress.$invalid" class="invalid-feedback">A valid IPv4 or IPv6 address is required, and must be unique within the node.</p> </div> <div class="form-group"> <label class="col-form-label" for="descr">Description</label> <input class="form-control" type="text" id="descr" name="descr" placeholder="Description [optional]" ng-model="requisitionInterface.description"> </div> <div class="form-group"> <label class="col-form-label" for="snmpPrimary">SNMP Primary</label> <input class="form-control" type="text" id="snmpPrimary" name="snmpPrimary" placeholder="SNMP Primary Flag (choose one from the list)" ng-model="requisitionInterface.snmpPrimary" typeahead-editable="false" typeahead-min-length="0" uib-typeahead="a.id as a.title for a in getSnmpPrimaryValues(requisitionInterface.ipAddress) | filter:$viewValue" required ng-class="{ \'is-invalid\' : intfForm.snmpPrimary.$invalid }"> <p ng-show="intfForm.snmpPrimary.$invalid" class="invalid-feedback">A valid SNMP Primary Flag is required, only one primary interface is allowed within the node.</p> </div> <label ng-show="requisitionInterface.services.length > 0">Services</label> <ng-form name="serviceForm" ng-repeat="service in requisitionInterface.services"> <div class="form-group"> <div class="input-group"> <div class="input-group-prepend"> <div class="input-group-text"> <i class="fa fa-pencil"></i> </div> </div> <input class="form-control" type="text" name="serviceName" placeholder="Service Name (choose one from the list or type a custom text for a new one)" ng-model="service.name" typeahead-editable="true" typeahead-min-length="0" uib-typeahead="service for service in getAvailableServices() | filter:$viewValue | orderBy:\'toString()\'" required valid-service ng-class="{ \'is-invalid\' : serviceForm.serviceName.$invalid }"> <span class="input-group-append"> <button class="btn btn-secondary" type="button" ng-click="removeService($index)"> <i class="fa fa-trash"></i> </button> </span> <p ng-show="serviceForm.serviceName.$invalid" class="invalid-feedback">Service name is required and should be unique on the interface.</p> </div> </div> </ng-form> </form> </div> <div class="modal-footer"> <button type="button" class="btn btn-secondary" id="add-service" ng-click="addService()" ng-disabled="intfForm.$invalid">Add Service</button> <button type="button" class="btn btn-primary" id="save-interface" ng-click="save()" ng-disabled="intfForm.$invalid">Save</button> <button type="button" class="btn btn-secondary" id="cancel-interface" ng-click="cancel()">Cancel</button> </div> </div> ')}]),e.exports=t},317:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/node-basic.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <br> <div class="form-group"> <label class="col-form-label" for="foreignId">Foreign ID</label> <div class="input-group"> <input class="form-control" type="text" id="foreignId" name="foreignId" placeholder="Foreign ID (must be unique within the requisition)" ng-model="node.foreignId" ng-disabled="!isNew" required valid-foreign-id ng-class="{ \'is-invalid\' : nodeForm.foreignId.$invalid }"> <div class="input-group-append"> <button class="btn btn-secondary" type="button" ng-click="generateForeignId(nodeForm.foreignId)" ng-disabled="!isNew"><span class="fa fa-tag"></span> Auto-generate</button> </div> <p ng-show="nodeForm.foreignId.$invalid" class="invalid-feedback">Foreign ID is required and must be unique within the requisition, and it cannot contain, :, /, \\, ?, &amp;, *, \', "</p> </div> </div> <div class="form-group"> <label class="col-form-label" for="nodeLabel">Node Label</label> <input class="form-control" type="text" id="nodeLabel" name="nodeLabel" placeholder="Node Label" ng-model="node.nodeLabel" required ng-class="{ \'is-invalid\' : nodeForm.nodeLabel.$invalid }"> <p ng-show="nodeForm.nodeLabel.$invalid" class="invalid-feedback">Node Label is required.</p> </div> <div class="form-group"> <label class="col-form-label" for="nodeLabel">Minion Location</label> <input class="form-control" type="text" id="location" name="location" placeholder="Location [optional]" ng-model="node.location" ng-disabled="availableLocations.length == 0" typeahead-min-length="0" typeahead-editable="false" uib-typeahead="location for location in availableLocations" typeahead-on-select="nodeForm.$setDirty();"> <p ng-show="availableLocations.length == 0" class="form-text text-muted">There are no locations available. (Set to Location "Default")</p> </div> <div class="form-group"> <label class="col-form-label" for="building">Building</label> <input class="form-control" type="text" id="building" name="building" placeholder="Building [optional]" ng-model="node.building"> </div> <div class="form-group"> <label class="col-form-label" for="city">City</label> <input class="form-control" type="text" id="city" name="city" placeholder="City [optional]" ng-model="node.city"> </div> </div> ')}]),e.exports=t},318:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/node-pathoutages.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <br> <div class="form-group"> <label class="col-form-label" for="parentForeignSource">Parent Foreign Source</label> <input class="form-control" type="text" id="parentForeignSource" name="parentForeignSource" placeholder="Parent Foreign Source (leave it blank to use the current requisition)" ng-model="node.parentForeignSource"> </div> <div class="form-group" ng-show="node.parentNodeLabel == null || node.parentNodeLabel == \'\'"> <label class="col-form-label" for="parentForeignId">Parent Foreign ID</label> <input class="form-control" type="text" id="parentForeignId" name="parentForeignId" placeholder="Parent Foreign ID (use either this or Parent Node Label)" ng-model="node.parentForeignId"> </div> <div class="form-group" ng-show="node.parentForeignId == null || node.parentForeignId == \'\'"> <label class="col-form-label" for="parentNodeLabel">Parent Node Label</label> <input class="form-control" type="text" id="parentNodeLabel" name="parentNodeLabel" placeholder="Parent Node Label (use either this or Parent Foreign ID)" ng-model="node.parentNodeLabel"> </div> </div> ')}]),e.exports=t},319:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/node-interfaces.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <div class="row"> <div class="col"> <div class="mt-4 pull-right"> <button type="button" class="btn btn-secondary btn-sm" id="add-interface" ng-click="addInterface()"> <span class="fa fa-plus"></span> Add Interface </button> </div> </div> </div> <p></p> <div class="table-responsive"> <table class="table table-striped table-sm"> <thead> <tr> <th>IP Address</th> <th>Description</th> <th>SNMP Primary</th> <th>Services</th> <th><span class="pull-right">Actions</span></th> </tr> </thead> <tbody> <tr ng-repeat="intf in node.interfaces"> <td>{{ intf.ipAddress }}</td> <td>{{ intf.description || \'N/A\' }}</td> <td>{{ intf.snmpPrimary }}</td> <td> <div ng-hide="intf.services.length > 0">[No services]</div> <div ng-repeat="service in intf.services"> <p>{{ service.name }}</p> </div> </td> <td> <div class="pull-right"> <button type="button" class="btn btn-secondary btn-sm" uib-tooltip="Edit the interface" ng-click="editInterface($index)"> <span class="fa fa-pencil"></span> </button> <button type="button" class="btn btn-secondary btn-sm" uib-tooltip="Remove the interface" ng-click="removeInterface($index)"> <span class="fa fa-trash"></span> </button> </div> </td> </tr> </tbody> </table> </div> </div> ')}]),e.exports=t},320:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/node-assets.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <div class="row"> <div class="col"> <div class="mt-4 pull-right"> <button type="button" class="btn btn-secondary btn-sm" id="add-asset" ng-click="addAsset()"> <span class="fa fa-plus"></span> Add Asset </button> </div> </div> </div> <p></p> <div class="table-responsive"> <table class="table table-striped table-sm"> <thead> <tr> <th>Name</th> <th>Value</th> <th><span class="pull-right">Actions</span></th> </tr> </thead> <tbody> <tr ng-repeat="asset in node.assets"> <td>{{asset.name}}</td> <td>{{asset.value}}</td> <td> <span class="pull-right"> <button type="button" class="btn btn-secondary btn-sm" uib-tooltip="Edit the asset" ng-click="editAsset($index)"> <span class="fa fa-pencil"></span> </button> <button type="button" class="btn btn-secondary btn-sm" uib-tooltip="Remove the asset" ng-click="removeAsset($index)"> <span class="fa fa-trash"></span> </button> </span> </td> </tr> </tbody> </table> </div> </div> ')}]),e.exports=t},321:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/node-metadata.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <div class="row"> <div class="col"> <div class="mt-4 pull-right"> <button type="button" class="btn btn-secondary btn-sm" id="add-metadata" ng-click="addMetaData()"> <span class="fa fa-plus"></span> Add Meta-Data </button> </div> </div> </div> <p></p> <div class="table-responsive"> <table class="table table-striped table-sm"> <thead> <tr> <th>Scope</th> <th>Interface</th> <th>Service</th> <th>Key</th> <th>Value</th> <th><span class="pull-right">Actions</span></th> </tr> </thead> <tbody> <tr ng-repeat="entry in node.metaData.requisition | orderBy:[\'scope\',\'scoped_interface\',\'scoped_service\',\'key\']"> <td>{{ entry.displayScope() }}</td> <td ng-if="entry.displayInterface() != null">{{ entry.displayInterface() }}</td> <td ng-if="entry.displayInterface() == null" class="text-muted">*</td> <td ng-if="entry.displayService() != null">{{ entry.displayService() }}</td> <td ng-if="entry.displayService() == null" class="text-muted">*</td> <td>{{ entry.key }}</td> <td>{{ entry.value }}</td> <td> <span class="pull-right"> <button type="button" class="btn btn-secondary btn-sm" uib-tooltip="Edit the meta-data entry" ng-click="editMetaData(entry)"> <span class="fa fa-pencil"></span> </button> <button type="button" class="btn btn-secondary btn-sm" uib-tooltip="Remove the meta-data entry" ng-click="removeMetaData(entry)"> <span class="fa fa-trash"></span> </button> </span> </td> </tr> </tbody> </table> </div> </div> ')}]),e.exports=t},322:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/node-categories.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <div class="row"> <div class="col"> <div class="pull-right mt-4"> <button type="button" class="btn btn-secondary btn-sm" id="add-category" ng-click="addCategory()"> <span class="fa fa-plus"></span> Add Category </button> </div> </div> </div> <p></p> <ng-form name="categoryForm" ng-repeat="category in node.categories"> <div class="form-group"> <div class="input-group"> <div class="input-group-prepend"> <div class="input-group-text"> <i class="fa fa-pencil"></i> </div> </div> <input class="form-control" type="text" name="categoryName" placeholder="Category Name (choose one from the list or type a custom text for a new one)" ng-model="category.name" typeahead-min-length="0" typeahead-editable="true" uib-typeahead="category for category in getAvailableCategories() | filter:$viewValue | orderBy:\'toString()\'" required valid-category="category" ng-class="{ \'is-invalid\' : categoryForm.categoryName.$invalid }"> <div class="input-group-append"> <button type="button" class="btn btn-secondary" ng-click="removeCategory($index)"> <span class="fa fa-trash"></span> </button> </div> <p ng-show="categoryForm.categoryName.$invalid" class="invalid-feedback">Category name is required and should be unique on the node.</p> </div> </div> </ng-form> </div> ')}]),e.exports=t},323:function(e,exports,t){"use strict";t(109),t(151);var n,i,a,r,o=c(t(16)),s=c(t(9)),l=c(t(11));function c(e){return e&&e.__esModule?e:{default:e}}t(25),n=t(324),i=t(325),a=t(326),r=t(327),angular.module("onms-requisitions").config(["$locationProvider",function(e){e.hashPrefix("")}]).controller("PolicyController",["$scope","$uibModalInstance","RequisitionsService","policy",function($scope,e,t,c){$scope.policy=c,$scope.availablePolicies=[],$scope.optionalParameters=[],$scope.save=function(){e.close($scope.policy)},$scope.cancel=function(){e.dismiss("cancel")},$scope.addParameter=function(){$scope.policy.parameter.push({key:"",value:""})},$scope.removeParameter=function(e){var t;(0,o.default)(t=$scope.policy.parameter).call(t,e,1)},$scope.updatePolicyParameters=function(e){e&&($scope.policy.parameter=[],(0,s.default)(angular).call(angular,$scope.availablePolicies,(function(t){t.class===e.class&&(0,s.default)(angular).call(angular,e.parameters,(function(e){e.required&&$scope.policy.parameter.push({key:e.key,value:null})}))})))},$scope.isNonEmptyArray=function(e){var t;return(0,l.default)(t=e.constructor.toString()).call(t,"Array")>-1&&e.length>0},$scope.getTemplate=function(e){var t=$scope.policy.class;$scope.optionalParameters=[];for(var o=0;o<$scope.availablePolicies.length;o++)if($scope.availablePolicies[o].class===t)for(var s=0;s<$scope.availablePolicies[o].parameters.length;s++){var l=$scope.availablePolicies[o].parameters[s];if(l.key===e.key&&l.required)return $scope.isNonEmptyArray(l.options)?n:i;l.required||$scope.optionalParameters.push(l.key)}return e.key?a:r},$scope.getParameterOptions=function(e){for(var t=0;t<$scope.availablePolicies.length;t++)if($scope.availablePolicies[t].class===$scope.policy.class)for(var n=0;n<$scope.availablePolicies[t].parameters.length;n++){var i=$scope.availablePolicies[t].parameters[n];if(i.key===e)return i.options}return[]},$scope.getOptionalParameters=function(){var e=[];return(0,s.default)(angular).call(angular,$scope.optionalParameters,(function(t){var n=!1;(0,s.default)(angular).call(angular,$scope.policy.parameter,(function(e){e.key===t&&(n=!0)})),n||e.push(t)})),e},t.getAvailablePolicies().then((function(e){$scope.availablePolicies=e,(0,s.default)(angular).call(angular,e,(function(e){if(e.class===$scope.policy.class){for(var t=[],n=0;n<e.parameters.length;n++)for(var i=e.parameters[n].key,a=0;a<$scope.policy.parameter.length;a++){var r=$scope.policy.parameter[a];r.key===i&&t.push(r)}$scope.policy.parameter=t}}))}))}])},324:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/policy-param.options.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <div class="form-group"> <label class="col-form-label">{{ parameter.key }}</label> <input required class="form-control" type="text" name="paramValue" placeholder="Select an option for {{ parameter.key }} (hit space bar to see the options and choose one)" ng-model="parameter.value" typeahead-min-length="0" typeahead-editable="false" uib-typeahead="param for param in getParameterOptions(parameter.key) | filter:$viewValue" ng-class="{ \'is-invalid\' : paramForm.paramValue.$invalid }"> <p ng-show="paramForm.paramValue.$invalid" class="invalid-feedback">Parameter value is required.</p> </div> </div> ')}]),e.exports=t},325:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/policy-param.string.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <div class="form-group"> <label class="col-form-label">{{ parameter.key }}</label> <input class="form-control" type="text" name="paramValue" placeholder="Parameter Value" ng-model="parameter.value" required ng-class="{ \'is-invalid\' : paramForm.paramValue.$invalid }"> <p ng-show="paramForm.paramValue.$invalid" class="invalid-feedback">Parameter value is required.</p> </div> </div> ')}]),e.exports=t},326:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/policy-param.fixed.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <div class="form-group"> <label class="col-form-label">{{ parameter.key }}</label> <div class="input-group"> <input class="form-control" type="text" name="paramValue" placeholder="Parameter Value" ng-model="parameter.value" required ng-class="{ \'is-invalid\' : paramForm.paramValue.$invalid }"> <span class="input-group-append"> <button type="button" class="btn btn-secondary" ng-click="removeParameter($index)"> <span class="fa fa-trash"></span> </button> </span> <p ng-show="paramForm.paramValue.$invalid" class="invalid-feedback">Parameter value is required.</p> </div> </div> </div> ')}]),e.exports=t},327:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/policy-param.editable.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <div class="form-group"> <input required class="form-control" type="text" name="paramName" placeholder="Parameter Name (hit space bar to see the options, and choose one)" ng-model="parameter.key" typeahead-min-length="0" typeahead-editable="false" uib-typeahead="param for param in getOptionalParameters() | filter:$viewValue" ng-class="{ \'is-invalid\' : paramForm.paramName.$invalid }"> <p ng-show="paramForm.paramName.$invalid" class="invalid-feedback">Parameter name is required.</p> </div> <div class="form-group"> <div class="input-group"> <input class="form-control" type="text" name="paramValue" placeholder="Parameter Value" ng-model="parameter.value" required ng-class="{ \'is-invalid\' : paramForm.paramValue.$invalid }"> <span class="input-group-append"> <button type="button" class="btn btn-secondary" ng-click="removeParameter($index)"> <span class="fa fa-trash"></span> </button> </span> <p ng-show="paramForm.paramValue.$invalid" class="invalid-feedback">Parameter value is required.</p> </div> </div> </div> ')}]),e.exports=t},328:function(e,exports,t){"use strict";t(13);var n=r(t(9)),i=r(t(16)),a=r(t(26));function r(e){return e&&e.__esModule?e:{default:e}}t(25);var o,s,l,c,d,u=t(182);o=t(183),s=t(184),l=t(185),c=t(186),d=t(187),angular.module("onms-requisitions").config(["$locationProvider",function(e){e.hashPrefix("")}]).controller("QuickAddNodeController",["$scope","foreignSources","RequisitionsService","growl","$sanitize",function($scope,e,t,r,f){$scope.quickAddPanelBasicView=o,$scope.quickAddPanelSnmpView=s,$scope.quickAddPanelCategoriesView=l,$scope.quickAddPanelCliView=c,$scope.quickAddPanelHelpView=d,$scope.foreignSources=[],$scope.availableCategories=[],$scope.availableAccessMethods=["RSH","SSH","Telnet"],$scope.isSaving=!1,$scope.node=new u,$scope.generateForeignId=function(e){$scope.node.foreignId=String((new Date).getTime()),e.$invalid=!1},$scope.provision=function(){$scope.isSaving=!0,r.info("The node "+_.escape($scope.node.nodeLabel)+" is being added to requisition "+_.escape($scope.node.foreignSource)+". Please wait...");var e="The node "+_.escape($scope.node.nodeLabel)+" has been added to requisition "+_.escape($scope.node.foreignSource);t.quickAddNode($scope.node).then((function(){$scope.reset(),bootbox.dialog({message:e,title:"Success",buttons:{main:{label:"Ok",className:"btn-secondary"}}})}),$scope.errorHandler)},$scope.reset=function(){$scope.node=new u,$scope.isSaving=!1},$scope.getAvailableCategories=function(){var e=[];return(0,n.default)(angular).call(angular,$scope.availableCategories,(function(t){var i=!1;(0,n.default)(angular).call(angular,$scope.node.categories,(function(e){e.name===t&&(i=!0)})),i||e.push(t)})),e},$scope.removeCategory=function(e){var t;(0,i.default)(t=$scope.node.categories).call(t,e,1),this.quickAddNodeForm.$dirty=!0},$scope.addCategory=function(){$scope.node.addNewCategory(),this.quickAddNodeForm.$dirty=!0},$scope.isInvalid=function(){return!(this.quickAddNodeForm&&this.quickAddNodeForm.foreignSource&&this.quickAddNodeForm.ipAddress&&this.quickAddNodeForm.nodeLabel)||this.quickAddNodeForm.foreignSource.$invalid||this.quickAddNodeForm.ipAddress.$invalid||this.quickAddNodeForm.nodeLabel.$invalid},$scope.errorHandler=function(e){r.error(e,{ttl:1e4})},$scope.addRequisition=function(){bootbox.prompt("A requisition is required, please enter the name for a new requisition",(function(e){e?t.addRequisition(e).then((function(){t.synchronizeRequisition(e,!1).then((function(){r.success("The requisition "+_.escape(e)+" has been created and synchronized."),$scope.foreignSources.push(e)}),$scope.errorHandler)}),$scope.errorHandler):window.location.href=a.default.getBaseHref()+"admin/opennms/index.jsp"}))},t.getAvailableCategories().then((function(e){$scope.availableCategories=e}),$scope.errorHandler),e?$scope.foreignSources=e:t.getRequisitionNames().then((function(e){$scope.foreignSources=e,0===$scope.foreignSources.length&&$scope.addRequisition()}),$scope.errorHandler)}])},329:function(e,exports,t){"use strict";var n,i,a,r,o;t(25),n=t(183),i=t(184),a=t(185),r=t(186),o=t(187),angular.module("onms-requisitions").config(["$locationProvider",function(e){e.hashPrefix("")}]).controller("QuickAddNodeModalController",["$controller","$scope","$uibModalInstance","foreignSources","RequisitionsService","growl",function(e,$scope,t,s,l,c){$scope.quickAddPanelBasicView=n,$scope.quickAddPanelSnmpView=i,$scope.quickAddPanelCategoriesView=a,$scope.quickAddPanelCliView=r,$scope.quickAddPanelHelpView=o,$scope.modalProvision=function(){$scope.provision(),t.close($scope.node)},$scope.modalCancel=function(){t.dismiss("cancel")},angular.extend(this,e("QuickAddNodeController",{$scope:$scope,foreignSources:s,RequisitionsService:l,growl:c}))}])},330:function(e,exports,t){"use strict";var n,i=(n=t(16))&&n.__esModule?n:{default:n};var a=t(83),r=t(137);t(25),t(141),angular.module("onms-requisitions").config(["$locationProvider",function(e){e.hashPrefix("")}]).controller("RequisitionController",["$scope","$filter","$cookies","$window","$routeParams","Configuration","RequisitionsService","SynchronizeService","growl",function($scope,e,t,n,o,s,l,c,d){$scope.timingStatus=l.getTiming(),$scope.foreignSource=o.foreignSource,$scope.requisition=new r({}),$scope.filteredNodes=[],$scope.pageSize=10,$scope.maxSize=5,$scope.totalItems=0,$scope.goBack=function(){n.location.href=s.baseHref+"#/requisitions"},$scope.editForeignSource=function(){n.location.href=s.baseHref+"#/requisitions/"+encodeURIComponent($scope.foreignSource)+"/foreignSource"},$scope.errorHandler=function(e){d.error(e,{ttl:1e4})},$scope.synchronize=function(){c.synchronize($scope.requisition,$scope.errorHandler)},$scope.getVerticalLayout=function(){return"true"===t.get("use_requisitions_node_vertical_layout")?"/vertical":""},$scope.addNode=function(){n.location.href=s.baseHref+"#/requisitions/"+encodeURIComponent($scope.foreignSource)+"/nodes/__new__"+$scope.getVerticalLayout()},$scope.editNode=function(e){n.location.href=s.baseHref+"#/requisitions/"+encodeURIComponent($scope.foreignSource)+"/nodes/"+encodeURIComponent(e.foreignId)+$scope.getVerticalLayout()},$scope.deleteNode=function(e){a.confirm("Are you sure you want to remove the node "+_.escape(e.nodeLabel)+"?",(function(t){t&&(l.startTiming(),l.deleteNode(e).then((function(){for(var t,n=-1,a=0;a<$scope.filteredNodes.length;a++)$scope.filteredNodes[a].foreignId===e.foreignId&&(n=a);n>-1&&(0,i.default)(t=$scope.filteredNodes).call(t,n,1),d.success("The node "+_.escape(e.nodeLabel)+" has been deleted.")}),$scope.errorHandler))}))},$scope.updateFilteredNodes=function(){$scope.currentPage=1,$scope.totalItems=$scope.filteredNodes.length},$scope.refreshDeployedStats=function(){l.startTiming(),l.updateDeployedStatsForRequisition($scope.requisition).then((function(){d.success("The deployed statistics has been updated.")}),$scope.errorHandler)},$scope.refreshRequisition=function(){a.confirm("Are you sure you want to reload the requisition?<br/>All current changes will be lost.",(function(e){e&&(l.startTiming(),$scope.requisition=new r({}),l.removeRequisitionFromCache(),$scope.initialize((function(){$scope.refreshDeployedStats()})))}))},$scope.savePageSize=function(){t.put("requisitions_page_size",$scope.pageSize)},$scope.initialize=function(e){var n=t.get("requisitions_page_size");n&&($scope.pageSize=n),d.success("Retrieving requisition "+_.escape($scope.foreignSource)+"..."),l.getRequisition($scope.foreignSource).then((function(t){$scope.requisition=t,$scope.filteredNodes=t.nodes,$scope.updateFilteredNodes(),e&&e()}),$scope.errorHandler)},$scope.$watch("reqFilter",(function(){$scope.filteredNodes=e("filter")($scope.requisition.nodes,$scope.reqFilter),$scope.updateFilteredNodes()})),$scope.foreignSource&&$scope.initialize()}])},331:function(e,exports,t){"use strict";t(48),t(133),t(109),t(210),t(293);var n,i=(n=t(9))&&n.__esModule?n:{default:n};var a,r,o=t(83);t(25),t(141),a=t(332),r=t(333),angular.module("onms-requisitions").config(["$locationProvider",function(e){e.hashPrefix("")}]).controller("RequisitionsController",["$scope","$filter","$cookies","$window","$uibModal","Configuration","DateFormatterService","RequisitionsService","SynchronizeService","growl",function($scope,e,t,n,s,l,c,d,u,f){$scope.timingStatus=d.getTiming(),$scope.loaded=!1,$scope.requisitionsData={requisitions:[]},$scope.filteredRequisitions=[],$scope.pageSize=10,$scope.maxSize=5,$scope.totalItems=0,$scope.errorHandler=function(e){f.error(e,{ttl:1e4})},$scope.quickAddNode=function(){var e=[];(0,i.default)(angular).call(angular,$scope.requisitionsData.requisitions,(function(t){e.push(t.foreignSource)})),s.open({backdrop:"static",keyboard:!1,controller:"QuickAddNodeModalController",templateUrl:a,size:"lg",resolve:{foreignSources:function(){return e}}}).result.then((function(e){$scope.requisitionsData.getRequisition(e.foreignSource).setNode(e)}))},$scope.clone=function(e){var t=[];(0,i.default)(angular).call(angular,$scope.requisitionsData.requisitions,(function(n){n.foreignSource!==e&&t.push(n.foreignSource)})),s.open({backdrop:"static",keyboard:!1,controller:"CloneForeignSourceController",templateUrl:r,resolve:{foreignSource:function(){return e},availableForeignSources:function(){return t}}}).result.then((function(t){o.confirm("This action will override the existing foreign source definition for the requisition named "+_.escape(t)+", using "+_.escape(e)+" as a template. Are you sure you want to continue ? This cannot be undone.",(function(n){n&&(d.startTiming(),d.cloneForeignSourceDefinition(e,t).then((function(){f.success("The foreign source definition for "+_.escape(e)+" has been cloned to "+_.escape(t))}),$scope.errorHandler))}))}))},$scope.add=function(){o.prompt("Please enter the name for the new requisition",(function(e){if(e){if(e.match(/[/\\?:&*'"]/))return void o.alert("Cannot add the requisition "+_.escape(e)+" because the following characters are invalid:<br/>:, /, \\, ?, &, *, ', \"");if($scope.requisitionsData.getRequisition(e))return void o.alert("Cannot add the requisition "+_.escape(e)+" because there is already a requisition with that name");d.addRequisition(e).then((function(e){f.success("The requisition "+_.escape(e.foreignSource)+" has been created.")}),$scope.errorHandler)}}))},$scope.editForeignSource=function(e){n.location.href=l.baseHref+"#/requisitions/"+encodeURIComponent(e)+"/foreignSource"},$scope.edit=function(e){n.location.href=l.baseHref+"#/requisitions/"+encodeURIComponent(e)},$scope.synchronize=function(e){d.startTiming(),u.synchronize(e,$scope.errorHandler)},$scope.refresh=function(e){d.startTiming(),d.updateDeployedStatsForRequisition(e).then((function(){f.success("The deployed statistics for "+_.escape(e.foreignSource)+" has been updated.")}),$scope.errorHandler)},$scope.removeAllNodes=function(e){o.confirm("Are you sure you want to remove all the nodes from "+_.escape(e)+"?",(function(t){t&&(d.startTiming(),d.removeAllNodesFromRequisition(e).then((function(){f.success("All the nodes from "+_.escape(e)+" have been removed, and the requisition has been synchronized."),$scope.requisitionsData.getRequisition(e).reset()}),$scope.errorHandler))}))},$scope.delete=function(e){o.confirm("Are you sure you want to remove the requisition "+_.escape(e)+"?",(function(t){t&&(d.startTiming(),d.deleteRequisition(e).then((function(){f.success("The requisition "+_.escape(e)+" has been deleted.")}),$scope.errorHandler))}))},$scope.editDefaultForeignSource=function(){n.location.href=l.baseHref+"#/requisitions/default/foreignSource"},$scope.resetDefaultForeignSource=function(){o.confirm("Are you sure you want to reset the default foreign source definition ?",(function(e){e&&(d.startTiming(),d.deleteForeignSourceDefinition("default").then((function(){f.success("The default foreign source definition has been reseted."),$scope.initialize()}),$scope.errorHandler))}))},$scope.refreshData=function(){o.dialog({message:"Are you sure you want to refresh the content of the page ?<br/><hr/>Choose <b>Reload Everything</b> to retrieve all the requisitions from the server (any existing unsaved change will be lost).<br/>Choose <b>Reload Deployed Data</b> to retrieve the deployed statistics and update the UI.<br/>Choose <b>Cancel</b> to abort the request.",title:"Refresh",buttons:{reloadAll:{label:"Reload Everything",className:"btn-primary",callback:function(){$scope.refreshRequisitions()}},reloadDeployed:{label:"Reload Deployed Data",className:"btn-secondary",callback:function(){$scope.refreshDeployedStats()}},main:{label:"Cancel",className:"btn-secondary"}}})},$scope.refreshDeployedStats=function(){d.startTiming(),f.success("Refreshing deployed statistics..."),d.updateDeployedStats($scope.requisitionsData).then((function(){f.success("The deployed statistics has been updated.")}),$scope.errorHandler)},$scope.refreshRequisitions=function(){o.confirm("Are you sure you want to reload all the requisitions?<br/>All current changes will be lost.",(function(e){e&&(d.startTiming(),f.success("Refreshing requisitions..."),d.clearCache(),$scope.requisitionsData={requisitions:[]},$scope.initialize())}))},$scope.updateFilteredRequisitions=function(){$scope.currentPage=1,$scope.totalItems=$scope.filteredRequisitions.length},$scope.savePageSize=function(){t.put("requisitions_page_size",$scope.pageSize)},$scope.initialize=function(){var e=t.get("requisitions_page_size");e&&($scope.pageSize=e),$scope.loaded=!1,c.formatter.finally((function(){d.getRequisitions().then((function(e){$scope.requisitionsData=e,$scope.filteredRequisitions=$scope.requisitionsData.requisitions,$scope.updateFilteredRequisitions(),$scope.loaded=!0,f.success("Loaded "+$scope.requisitionsData.requisitions.length+" requisitions...")}),$scope.errorHandler)}))},$scope.$watch("reqFilter",(function(){$scope.filteredRequisitions=e("filter")($scope.requisitionsData.requisitions,$scope.reqFilter),$scope.updateFilteredRequisitions()})),0===$scope.filteredRequisitions.length&&$scope.initialize()}])},332:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/quick-add-node.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <div class="modal-header"> <h3 class="modal-title">Quick-Add Node</h3> </div> <div class="modal-body"> <form name="quickAddNodeForm"> <uib-tabset> <uib-tab heading="Basic Attributes" id="tab-basic-information"> <ng-include src="quickAddPanelBasicView"></ng-include> </uib-tab> <uib-tab heading="SNMP Parameters" id="tab-snmp-parameters"> <ng-include src="quickAddPanelSnmpView"></ng-include> </uib-tab> <uib-tab heading="Surveillance Categories" id="tab-categories"> <ng-include src="quickAddPanelCategoriesView"></ng-include> </uib-tab> <uib-tab heading="CLI Authentication" id="tab-cli-auth-parameters"> <ng-include src="quickAddPanelCliView"></ng-include> </uib-tab> <uib-tab heading="Help" id="tab-help"> <ng-include src="quickAddPanelHelpView"></ng-include> </uib-tab> </uib-tabset> </form> </div> <div class="modal-footer"> <button type="button" class="btn btn-primary" id="provision" ng-click="modalProvision()" ng-disabled="isInvalid()">Provision</button> <button type="button" class="btn btn-secondary" id="cancel" ng-click="modalCancel()">Cancel</button> </div> </div> ')}]),e.exports=t},333:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/views/clone-foreignsource.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div> <div class="modal-header"> <h3 class="modal-title">Clone Foreign Source Definition</h3> </div> <div class="modal-body"> <form name="cloneForm"> <div class="form-group"> <div class="form-group"> <label class="col-form-label" for="sourceFS">Source Foreign Source</label> <input class="form-control" type="text" name="sourceFS" ng-disabled="true" ng-model="foreignSource"> </div> <div class="form-group"> <label class="col-form-label" for="targetFS">Target Foreign Source</label> <input class="form-control" type="text" name="targetFS" placeholder="Target Foreign Source to override (hit space bar to see the options)" ng-model="targetForeignSource" typeahead-min-length="0" typeahead-editable="false" uib-typeahead="fs for fs in availableForeignSources | filter:$viewValue" required> </div> </div> </form> </div> <div class="modal-footer"> <button type="button" class="btn btn-primary" ng-click="save()" ng-disabled="cloneForm.$invalid">Clone</button> <button type="button" class="btn btn-secondary" ng-click="cancel()">Cancel</button> </div> </div> ')}]),e.exports=t},334:function(e,exports,t){"use strict";t(13),t(48),t(133);var n=r(t(11)),i=r(t(9)),a=r(t(49));function r(e){return e&&e.__esModule?e:{default:e}}var o=t(221).isValidIPAddress,s=t(220);angular.module("onms-requisitions").directive("validIpAddress",(function(){return{restrict:"A",require:"ngModel",link:function(e,t,i,a){a.$parsers.unshift((function(t){var i;if(!e.ipBlackList||-1===(0,n.default)(i=e.ipBlackList).call(i,t))return o(t)?(a.$setValidity("valid",!0),t):void a.$setValidity("valid",!1);a.$setValidity("valid",!1)}))}}})).directive("validService",(function(){return{restrict:"A",require:"ngModel",link:function(e,t,n,a){a.$parsers.unshift((function(t){var n=!1;if(e.requisitionInterface&&e.requisitionInterface.services&&(0,i.default)(angular).call(angular,e.requisitionInterface.services,(function(i){i.$$hashKey!==e.service.$$hashKey&&i.name===t&&(n=!0)})),!n)return a.$setValidity("unique",!0),t;a.$setValidity("unique",!1)}))}}})).directive("validForeignId",(function(){return{restrict:"A",require:"ngModel",link:function(e,t,i,a){a.$parsers.unshift((function(t){var i;if(!(e.foreignIdBlackList&&-1!==(0,n.default)(i=e.foreignIdBlackList).call(i,t)||t.match(/[/\\?:&*'"]/)))return a.$setValidity("valid",!0),t;a.$setValidity("valid",!1)}))}}})).directive("validCategory",(function(){return{restrict:"A",require:"ngModel",transclude:!0,scope:{category:"=validCategory"},link:function(e,t,n,r){r.$parsers.unshift((function(t){if(t&&""!==(0,a.default)(t).call(t)){var n=!1;if((0,i.default)(angular).call(angular,e.$parent.node.categories,(function(i){i.$$hashKey!==e.category.$$hashKey&&i.name===t&&(n=!0)})),!n)return r.$setValidity("unique",!0),t;r.$setValidity("unique",!1)}else r.$setValidity("unique",!1)}))}}})).directive("validMetaDataKey",(function(){return{restrict:"A",require:"ngModel",transclude:!0,scope:{entry:"=validMetaDataKey"},link:function(e,t,i,a){a.$parsers.unshift((function(t){var i=!0;if(t!==e.$parent.originalKey){e.$parent.resolveScopeReferences(e.entry);var r=e.$parent.node.metaData.getKeysInScopeOf(e.entry);i=(0,n.default)(s).call(s,r,t)<0}if(i)return a.$setValidity("unique",!0),t;a.$setValidity("unique",!1)}))}}}))},335:function(e,exports,t){"use strict";t(14);var n,i=r(t(29)),a=r(t(46));function r(e){return e&&e.__esModule?e:{default:e}}(0,i.default)(n=angular.module("onms-requisitions")).call(n,"startFrom",(function(){return function(e,t){var n=Number(t);return e?e.length<n?e:(0,a.default)(e).call(e,n):[]}}))},42:function(e,exports,t){"use strict";var n,i=(n=t(26))&&n.__esModule?n:{default:n};var angular=t(3);t(10);var a=t(43),r=t(44);angular.module("onms-search",["onms.http","ui.bootstrap"]).config(["$locationProvider",function(e){e.hashPrefix("")}]).directive("onmsSearchNodes",(function(){return{restrict:"E",transclude:!0,templateUrl:r,controller:"NodeSearchCtrl"}})).directive("onmsSearchKsc",(function(){return{restrict:"E",transclude:!0,templateUrl:a,controller:"KscSearchCtrl"}})).controller("NodeSearchCtrl",["$scope","$window","$http",function($scope,e,t){$scope.getNodes=function(e){return t({url:"rest/nodes",method:"GET",params:{label:e,comparator:"contains"}}).then((function(e){return e.data.node}))},$scope.goToChooseResources=function(t){e.location.href=i.default.getBaseHref()+"graph/chooseresource.jsp?node="+t.id}}]).controller("KscSearchCtrl",["$scope","$window","$http","$filter",function($scope,e,t,n){$scope.getKscReports=function(e){return t({url:"rest/ksc",method:"GET"}).then((function(t){return n("filter")(t.data.kscReport,e)}))},$scope.goToKscReport=function(t){e.location.href=i.default.getBaseHref()+"KSC/customView.htm?type=custom&report="+t.id}}])},43:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/search/template.ksc.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div class="form-group"> <div class="input-group"> <input type="text" class="form-control" ng-model="asyncKsc" placeholder="Type the KSC report name" uib-typeahead="ksc as ksc.label for ksc in getKscReports($viewValue)" typeahead-editable="false" typeahead-loading="kscLoadingNodes" typeahead-no-results="kscNoResults" typeahead-min-length="1" typeahead-on-select="goToKscReport($item)"> <div class="input-group-append"> <span class="input-group-text"><i class="fa fa-search"></i></span> </div> </div> <i ng-show="kscLoadingNodes" class="fa fa-refresh"></i> <p class="form-text text-muted" ng-show="kscNoResults"> <i class="fa fa-remove"></i> No Results Found </p> </div> ')}]),e.exports=t},44:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/search/template.nodes.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<div class="form-group"> <div class="input-group"> <input type="text" class="form-control" ng-model="asyncNode" placeholder="Type the node label" uib-typeahead="node as node.label for node in getNodes($viewValue)" typeahead-editable="false" typeahead-loading="nodeLoadingNodes" typeahead-no-results="nodeNoResults" typeahead-min-length="1" typeahead-on-select="goToChooseResources($item)"> <div class="input-group-append"> <span class="input-group-text"><i class="fa fa-search"></i></span> </div> </div> <i ng-show="nodeLoadingNodes" class="fa fa-refresh"></i> <p class="form-text text-muted" ng-show="nodeNoResults"> <i class="fa fa-remove"></i> No Results Found </p> </div> ')}]),e.exports=t},45:function(e,exports,t){"use strict";t(13);var n=s(t(69)),i=s(t(9)),a=s(t(11)),r=s(t(46)),o=s(t(16));function s(e){return e&&e.__esModule?e:{default:e}}var angular=t(3);t(10),t(90),t(91),t(80);var l=t(47),c=function(e,t){t.data?e.error=t.data:e.error="An unexpected error occurred while handling the request"};angular.module("onms.central.search",["angular-loading-bar","ngResource","ui.router","onms.http"]).config(["$locationProvider",function(e){e.hashPrefix("")}]).directive("onmsCentralSearch",(function(){return{restrict:"E",transclude:!1,templateUrl:l,controller:"QuickSearchController"}})).factory("SearchResource",["$resource",function(e){return e("api/v2/search",{},{query:{method:"GET",isArray:!0,cancellable:!0}})}]).controller("QuickSearchController",["$scope","SearchResource","$timeout","$document",function($scope,e,t,s){var l=13,d=16,u=27,f=38,p=40,m="Group",g="Item",v="More";$scope.query="",$scope.results={},$scope.performSearchExecuted=!1,$scope.showLoadingIndicator=!1,$scope.showLoadingIndicatorDelay=250,$scope.performSearchDelay=500,$scope.performSearchPromise=void 0,$scope.performSearchHandle=void 0,$scope.showLoadingIndicatorPromise=void 0,$scope.shiftLastPressed=void 0,$scope.selectedIndex=0,(0,n.default)(s).call(s,"mousedown",(function(e){var n=$("#onms-search-form").has(e.target).length>0,i=$("#onms-search-form").is(e.target);n||i||t((function(){$scope.resetQuery(),$scope.cancelRequest()}))})),(0,n.default)(s).call(s,"keyup",(function(e){t((function(){e.keyCode===d&&new Date-$scope.shiftLastPressed<=350?(angular.element("#onms-search-query").focus(),angular.element("#onms-search-query").select(),$scope.shiftLastPressed=void 0):e.keyCode===d&&($scope.shiftLastPressed=new Date),e.keyCode===u&&($scope.resetQuery(),$scope.cancelRequest())}))})),(0,n.default)(s).call(s,"keydown",(function(e){t((function(){if($scope.results.length>0){var n=document.getElementById("onms-search-result-item-"+$scope.selectedIndex);if(e.keyCode===f||e.keyCode===p){$scope.navigateSearchResult(e.keyCode);var i=document.getElementById("onms-search-result"),a=i.clientHeight,r=n.clientHeight,o=n.offsetTop;o+r+25>=a+i.scrollTop&&(i.scrollTop=o),0!==i.scrollTop&&i.scrollTop>o-r&&(i.scrollTop=o-r)}e.keyCode===l&&($scope.results[$scope.selectedIndex].type===v?t((function(){angular.element(n).triggerHandler("click")}),0):($scope.resetQuery(),$scope.cancelRequest(),n.click()))}}))})),$scope.navigateSearchResult=function(e){switch($scope.results[$scope.selectedIndex].selected=!1,e){case f:$scope.selectedIndex--;break;case p:$scope.selectedIndex++}$scope.selectedIndex<1&&($scope.selectedIndex=1),$scope.selectedIndex>=$scope.results.length&&($scope.selectedIndex=$scope.results.length-1),$scope.results[$scope.selectedIndex].type===m?$scope.navigateSearchResult(e):$scope.results[$scope.selectedIndex].selected=!0},$scope.resetQuery=function(){$scope.query="",$scope.results=[],$scope.performSearchExecuted=!1,$scope.performSearchHandle&&$scope.performSearchHandle.$cancelRequest()},$scope.cancelRequest=function(){$scope.performSearchHandle&&$scope.performSearchHandle.$cancelRequest(),$scope.showLoadingIndicator=!1,t.cancel($scope.showLoadingIndicatorPromise)},$scope.select=function(e){var t=e||1;$scope.selectedIndex>=1&&($scope.results[$scope.selectedIndex].selected=!1),$scope.selectedIndex=t,$scope.results[$scope.selectedIndex].selected=!0},$scope.onQueryChange=function(){0!=$scope.query.length?$scope.query.length<3||(t.cancel($scope.performSearchPromise),$scope.results=[],$scope.performSearchExecuted=!1,$scope.performSearchPromise=t((function(){t.cancel($scope.showLoadingIndicatorPromise),$scope.showLoadingIndicatorPromise=t((function(){$scope.showLoadingIndicator=!0}),$scope.showLoadingIndicatorDelay),$scope.performSearchHandle&&$scope.performSearchHandle.$cancelRequest(),$scope.error=void 0,$scope.performSearchHandle=e.query({_s:$scope.query},(function(t){$scope.cancelRequest(),$scope.performSearchExecuted=!0;var n=[];(0,i.default)(t).call(t,(function(t){var s;if(n.push({context:t.context.name,label:t.results.length>1?t.context.name+"s":t.context.name,type:m,count:t.results.length,more:t.more}),(0,i.default)(s=t.results).call(s,(function(e){e.type=g,n.push(e)})),!0===t.more){var l={context:t.context.name,count:t.results.length,type:v,loadMore:function(){$scope.error=void 0,e.query({_s:$scope.query,_l:this.count+10,_c:this.context},(function(e){var t,n,s,c,d=(0,a.default)(t=$scope.results).call(t,l),u=e[0],f=(0,r.default)(n=u.results).call(n,d-1);(0,i.default)(f).call(f,(function(e,t){var n;e.type=g,(0,o.default)(n=$scope.results).call(n,d+t,0,e),l.count++})),l.selected=!1,$scope.results[$scope.selectedIndex].selected=!0,!1===u.more&&(0,o.default)(s=$scope.results).call(s,(0,a.default)(c=$scope.results).call(c,l),1)}),(function(e){$scope.performSearchExecuted=!0,c($scope,e)}))},selected:!1};n.push(l)}})),$scope.results=n,0!=$scope.results.length&&($scope.selectedIndex=1,$scope.results[$scope.selectedIndex].selected=!0)}),(function(e){e.status>=0&&($scope.performSearchExecuted=!0,c($scope,e),$scope.cancelRequest())}))}),$scope.performSearchDelay)):$scope.resetQuery()}}])},47:function(e,exports){var t="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-central-search/quicksearch.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(t,'<span> <style>.search-result{max-height:700px;min-width:280px;max-width:60%;position:absolute;top:100%;z-index:100000;overflow:auto;border:#343a40 solid 1px}.search-result .list-group-item{padding:.25rem .75rem;font-size:90%}.search-result .list-group-item:last-child{border-bottom-right-radius:0;border-bottom-left-radius:0}.search-bar .form-control{border:none;outline:0;box-shadow:none;border-radius:1rem;padding:0}.search-bar .input-group-text{border-top-left-radius:1rem;border-bottom-left-radius:1rem;background-color:#fff;border-color:#fff}.search-result .list-group-item:hover{background-color:#e9ecef}.selected{background-color:#e9ecef}</style> <form id="onms-search-form" autocomplete="off" novalidate class="form-inline"> <input autocomplete="false" name="hidden" type="text" style="display:none"> <div class="input-group search-bar"> <div class="input-group-prepend"> <div class="input-group-text"><i class="fa fa-search"></i></div> </div> <label class="form-control"> <input id="onms-search-query" ng-change="onQueryChange()" ng-focus="input.focus=true" ng-blur="input.focus=false" ng-model="query" type="text" class="form-control" placeholder="Search..." aria-label="Search"> <small class="text-muted mr-4 quick-search-chevron" ng-show="!input.focus"> <span></span> <span></span> </small> </label> <div ng-if="showLoadingIndicator" class="btn btn-secondary rounded-0"> <div class="spinner-border spinner-border-sm text-white" role="status"></div> <span class="sr-only">Loading...</span> </div> <div ng-if="performSearchExecuted === true && !showLoadingIndicator" class="input-group-append"> <button class="btn btn-secondary" type="button" title="Reset Search" ng-click="resetQuery()"><i class="fa fa-times"></i></button> </div> <div ng-if="showLoadingIndicator" class="input-group-append"> <button class="btn btn-secondary" type="button" title="Cancel Request" ng-click="cancelRequest()"><i class="fa fa-times"></i></button> </div> </div> <div ng-if="performSearchExecuted === true" class="bg-dark search-result rounded-bottom" id="onms-search-result"> <div class="list-group" ng-if="results.length > 0"> <div id="onms-search-result-item-{{$index}}" ng-repeat-start="item in results track by $index" ng-if="item.type === \'Group\'" class="list-group-item bg-dark text-grey border-0 pl-2"> <span ng-if="!item.t">{{item.label}}</span> </div> <a id="onms-search-result-item-{{$index}}" ng-class="{\'selected\': item.selected}" ng-if="item.type === \'More\'" ng-click="item.loadMore()" class="list-group-item list-group-item-action" href ng-mouseover="select($index)">more...</a> <a id="onms-search-result-item-{{$index}}" ng-class="{\'selected\': item.selected}" ng-repeat-end ng-if="item.type === \'Item\'" href="{{item.url}}" class="list-group-item list-group-item-action" ng-mouseover="select($index)" ng-click="resetQuery()"> <h6 class="mb-0"><i class="{{item.icon}}" ng-if="item.icon">&nbsp;</i>{{item.label}} <i style="-webkit-transform:scaleY(-1);transform:scaleY(-1)" class="fa fa-reply pull-right" ng-if="item.selected"></i></h6> <small class="mr-4" ng-class="{\'text-muted\': !item.selected}" ng-repeat="match in item.matches">{{match.label}}: {{match.value}}</small> <br ng-if="item.info !== \'\'"> <small class="mr-4" ng-class="{\'text-muted\': !item.selected}" ng-if="item.info !== \'\'">{{item.info}}</small> </a> </div> <div ng-if="!error && results.length === 0" class="text-grey"> <span>No Results found</span> </div> <div ng-if="error" class="alert alert-danger mx-2 my-2"> <span>{{error}}</span> </div> </div> </form> </span> ')}]),e.exports=t},5:function(e,exports,t){"use strict";console.log("init: jquery-js");var jQuery=t(7);t(28),e.exports=jQuery},63:function(e,exports,t){"use strict";var angular=t(3);t(42),t(45);angular.module("onms.default.apps",["onms.central.search","onms-search"])},8:function(e,exports,t){"use strict";console.log("init: moment-js");var n=t(1);t(35),t(36),e.exports=n},88:function(e,exports,t){"use strict";t(116),t(117),t(13);var n=a(t(9)),i=a(t(49));function a(e){return e&&e.__esModule?e:{default:e}}var r=t(138),o=t(303),s=function(e){return null==e||0===e.length};e.exports=function(e,t,a){var l=this;l.foreignSource=e,l.deployed=a,l.modified=!1,l.foreignId=t["foreign-id"],s(l.foreignId)&&(l.foreignId=String((new Date).getTime())),l.nodeLabel=t["node-label"],l.location=t.location,l.city=t.city,l.building=t.building,l.parentForeignSource=t["parent-foreign-source"];var c=t["parent-foreign-id"];l.parentForeignId=s(c)?null:c;var d=t["parent-node-label"];return l.parentNodeLabel=s(d)?null:d,l.interfaces=[],l.categories=[],l.assets=[],(0,n.default)(angular).call(angular,t.interface,(function(e){l.interfaces.push(new r(e))})),(0,n.default)(angular).call(angular,t.asset,(function(e){l.assets.push(e)})),(0,n.default)(angular).call(angular,t.category,(function(e){l.categories.push(e)})),l.metaData=new o(t,this),l.isModified=function(){return!!l.modified||!l.deployed},l.addNewInterface=function(){var e=!1;return(0,n.default)(angular).call(angular,l.interfaces,(function(t){"P"===t.snmpPrimary&&(e=!0)})),l.interfaces.push(new r({"snmp-primary":e?"N":"P"})),l.interfaces.length-1},l.addNewAsset=function(){return l.assets.push({name:"",value:""}),l.assets.length-1},l.addNewCategory=function(){return l.categories.push({name:""}),l.categories.length-1},l.getPrimaryIpAddress=function(){var e=null;return(0,n.default)(angular).call(angular,l.interfaces,(function(t){"P"===t.snmpPrimary&&(e=t.ipAddress)})),e},l.hasParentInformation=function(){var e,t,n;return!(!l.parentForeignSource||""===(0,i.default)(e=l.parentForeignSource).call(e))||(!(!l.parentForeignId||""===(0,i.default)(t=l.parentForeignId).call(t))||!(!l.parentNodeLabel||""===(0,i.default)(n=l.parentNodeLabel).call(n)))},l.getOnmsRequisitionNode=function(){var e={"foreign-id":l.foreignId,"node-label":l.nodeLabel,location:l.location,city:l.city,building:l.building,interface:[],"parent-foreign-source":l.parentForeignSource,"parent-foreign-id":l.parentForeignId,"parent-node-label":l.parentNodeLabel,asset:[],"meta-data":l.metaData.getOnmsMetaDataForNode(),category:[]};return(0,n.default)(angular).call(angular,l.interfaces,(function(t){var i={"ip-addr":t.ipAddress,descr:t.description,"snmp-primary":t.snmpPrimary,status:t.status||"managed"===t.status?"1":"3","meta-data":l.metaData.getOnmsMetaDataForInterface(t),"monitored-service":[]};(0,n.default)(angular).call(angular,t.services,(function(e){var n={"service-name":e.name,"meta-data":l.metaData.getOnmsMetaDataForService(t,e)};i["monitored-service"].push(n)})),e.interface.push(i)})),(0,n.default)(angular).call(angular,l.assets,(function(t){e.asset.push(t)})),(0,n.default)(angular).call(angular,l.categories,(function(t){e.category.push(t)})),e},l.className="RequisitionNode",l}}},[[1153,0]]])}));
//# sourceMappingURL=quickaddnode.min.js.map