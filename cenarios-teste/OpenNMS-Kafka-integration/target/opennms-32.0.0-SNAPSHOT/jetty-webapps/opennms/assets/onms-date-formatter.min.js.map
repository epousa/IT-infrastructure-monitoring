{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///./src/main/assets/js/vendor/bootstrap-js.js","webpack:///./src/main/assets/js/apps/onms-date-formatter/index.js","webpack:///./src/main/assets/js/vendor/angular-js.js","webpack:///./src/main/assets/js/vendor/jquery-js.js","webpack:///./src/main/assets/js/vendor/moment-js.js"],"names":["root","factory","exports","module","define","amd","a","i","window","console","log","jQuery","require","_context","angular","moment","OnmsDateFormatter","prototype","init","readyCallback","self","this","defaultFormat","_onmsZoneId","undefined","xhr","XMLHttpRequest","onreadystatechange","readyState","DONE","status","config","JSON","parse","responseText","datetimeformatConfig","datetimeformat","_onmsDateTimeFormat","zoneId","statusText","e","open","setRequestHeader","send","assertInitialized","Error","getZoneId","_zoneId","warn","tz","guess","format","date","formatJavaDTF","jest","f","_onmsFormatter","$interval","$q","deferred","defer","count","resolve","cancel","raw","formatter","promise","then","_filter","default","call","$filter","DateFormatterService","input","ifEmpty","ret","directive","dateFormatterService","restrict","compile","element","text","formatted","replaceWith","catch","error","version","full"],"mappings":"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","file":"onms-date-formatter.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn ","console.log('init: bootstrap-js'); // eslint-disable-line no-console\n\nconst jQuery = require('vendor/jquery-js');\nrequire('vendor/moment-js');\nrequire('bootstrap/dist/js/bootstrap');\n\nmodule.exports = jQuery;\n","/* eslint no-console: 0 */\n\nconst angular = require('vendor/angular-js');\nconst moment = require('vendor/moment-js');\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction OnmsDateFormatter() {\n}\n\nOnmsDateFormatter.prototype.init = function init(readyCallback) {\n\tvar self = this;\n\tvar defaultFormat = \"yyyy-MM-dd'T'HH:mm:ssxxx\"; // eslint-disable-line quotes\n\twindow._onmsZoneId = undefined;\n\n\tvar xhr = new XMLHttpRequest();\n\txhr.onreadystatechange = function readystatechange() {\n\t\ttry {\n\t\t\tif (xhr.readyState === XMLHttpRequest.DONE) {\n\t\t\t\tif (xhr.status === 200) {\n\t\t\t\t\tvar config = JSON.parse(xhr.responseText);\n\t\t\t\t\tif (config.datetimeformatConfig && config.datetimeformatConfig.datetimeformat) {\n\t\t\t\t\t\twindow._onmsDateTimeFormat = config.datetimeformatConfig.datetimeformat || defaultFormat;\n\t\t\t\t\t\twindow._onmsZoneId = config.datetimeformatConfig.zoneId;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log('Error: datetimeformatConfig property not found:',config);\n\t\t\t\t\t\twindow._onmsDateTimeFormat = defaultFormat;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Error: failed to request format info: ' + xhr.status + ' ' + xhr.statusText);\n\t\t\t\t\twindow._onmsDateTimeFormat = defaultFormat;\n\t\t\t\t}\n\t\t\t\treadyCallback(self, xhr.status);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log('Error: failed to request format info: ', e);\n\t\t\twindow._onmsDateTimeFormat = defaultFormat;\n\t\t\treadyCallback(self, xhr.status);\n\t\t}\n\t};\n\txhr.open('GET', 'rest/info');\n\txhr.setRequestHeader('Accept', 'application/json');\n\txhr.send();\n};\n\nOnmsDateFormatter.prototype.assertInitialized = function assertInitialized() {\n\tif (!window._onmsDateTimeFormat) {\n\t\tconsole.log('OnmsDateFormatter.init() must complete before using!');\n\t\tthrow new Error('OnmsDateFormatter.init() must complete before using!');\n\t}\n};\n\nOnmsDateFormatter.prototype.getZoneId = function getZoneId() {\n\tthis.assertInitialized();\n\n\tif (!this._zoneId) {\n\t\tif (window._onmsZoneId) {\n\t\t\tthis._zoneId = window._onmsZoneId;\n\t\t} else {\n\t\t\tconsole.warn('No zone ID specified from the server; guessing based on browser.');\n\t\t\tthis._zoneId = moment.tz.guess();\n\t\t}\n\t}\n\treturn this._zoneId;\n};\n\nOnmsDateFormatter.prototype.format = function format(date) {\n\tthis.assertInitialized();\n\n\tif (date === undefined || date === null) {\n\t\treturn date;\n\t}\n\n\tconst zoneId = this.getZoneId();\n\tconst momentDate = moment.tz(date, zoneId);\n\treturn momentDate.formatJavaDTF(window._onmsDateTimeFormat);\n};\n\n(function() {\n\t'use strict';\n\tif (typeof jest === 'undefined') {\n\t\tvar f = new OnmsDateFormatter();\n\t\tf.init(function() {\n\t\t\twindow._onmsFormatter = f;\n\t\t});\n\t} else {\n\t\tconsole.log('Running in a test environment. Skipping automatic initialization.');\n\t}\n})();\n\n(function() {\n\t'use strict';\n\n\tif (window.angular) {\n\t\tangular.module('onmsDateFormatter', ['ng']).factory('DateFormatterService', ['$interval', '$q', function DateFormatterService($interval, $q) {\n\t\t\tconsole.log('Initializing DateFormatterService');\n\n\t\t\tvar deferred = $q.defer();\n\n\t\t\tvar count = 0;\n\t\t\tvar i = $interval(function() {\n\t\t\t\tif (window._onmsFormatter) {\n\t\t\t\t\tconsole.log('Global formatter found: ' + window._onmsDateTimeFormat);\n\t\t\t\t\tdeferred.resolve(window._onmsFormatter);\n\t\t\t\t\t$interval.cancel(i);\n\t\t\t\t}\n\t\t\t\tif (count++ > 300) {\n\t\t\t\t\tconsole.log('DateFormatterService: giving up waiting for global formatter.');\n\t\t\t\t\t$interval.cancel(i);\n\t\t\t\t}\n\t\t\t}, 100);\n\n\t\t\treturn {\n\t\t\t\traw: window._onmsFormatter,\n\t\t\t\tformatter: deferred.promise,\n\t\t\t\tformat: function(date) {\n\t\t\t\t\treturn deferred.promise.then(function(f) {\n\t\t\t\t\t\treturn f.format(date);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\tangular.module('onmsDateFormatter').filter('onmsDate', ['$filter', 'DateFormatterService', function($filter, DateFormatterService) {\n\t\t\treturn function onmsDate(input, ifEmpty) {\n\t\t\t\tvar ret;\n\t\t\t\tif (window._onmsFormatter) {\n\t\t\t\t\t// If the formatter has finished initializing, use it\n\t\t\t\t\tret = window._onmsFormatter.format(input);\n\t\t\t\t\t//console.log('onmsDate: formatter returned: ' + ret);\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise, use ISO format\n\t\t\t\t\tret = $filter('date')(input, 'yyyy-MM-ddTHH:mm:ss.sssZ');\n\t\t\t\t\t//console.log('onmsDate: $filter(date) returned: ' + ret);\n\t\t\t\t}\n\t\t\t\tif (ret !== undefined && ret !== null) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\treturn ifEmpty;\n\t\t\t}\n\t\t}]);\n\n\t\tangular.module('onmsDateFormatter').directive('onmsDate', ['DateFormatterService', function(dateFormatterService) {\n\t\t\treturn {\n\t\t\t\trestrict: 'E',\n\t\t\t\tcompile: function(element) {\n\t\t\t\t\tdateFormatterService.format(element.text()).then(function(formatted) {\n\t\t\t\t\t\telement.replaceWith(formatted);\n\t\t\t\t\t}).catch(function(e) {\n\t\t\t\t\t\tconsole.error('Failed to format ' + element.text(), e);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}]);\n\t} else {\n\t\tconsole.log('Angular not found.  Not initializing OnmsDateFormatter Angular components.');\n\t}\n})();\n\nmodule.exports = OnmsDateFormatter;\n","/* Load jQuery first, so Angular finds it */\nrequire('./jquery-js');\n\n/* Angular Core */\nconst angular = require('angular');\nrequire('angular-animate');\nrequire('angular-cookies');\nrequire('angular-route');\nrequire('angular-resource');\nrequire('angular-sanitize');\n\n/* 3rd-Party Modules */\nrequire('angular-growl-v2');\nrequire('angular-loading-bar');\n\nrequire('angular-growl-v2/build/angular-growl.css');\nrequire('angular-loading-bar/build/loading-bar.css');\n\n/* Bootstrap UI */\nrequire('vendor/bootstrap-js');\nrequire('angular-bootstrap-checkbox');\nrequire('ui-bootstrap4'); // angular-ui-boostrap for bootstrap 4\n\nconsole.log('init: angular-js ' + angular.version.full); // eslint-disable-line no-console\n\nmodule.exports = window['angular'] = angular;","console.log('init: jquery-js'); // eslint-disable-line no-console\n\nconst jQuery = require('jquery');\nrequire('jquery-migrate');\n\nmodule.exports = jQuery;\n","console.log('init: moment-js'); // eslint-disable-line no-console\n\nconst moment = require('moment');\nrequire('moment-timezone');\nrequire('@rangerrick/moment-javaformat');\n\nmodule.exports = moment;"],"sourceRoot":""}