{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///./src/main/assets/js/apps/timeline-resize/index.js"],"names":["debounce","require","DEBOUNCE_RATE","RELATIVE_SIZE","getSize","element","td","closest","undefined","Math","round","offsetWidth","container","width","NaN","recalculateBox","e","$","imgs","_find","default","call","i","length","img","w","imgsrc","data","attr","spans","span","htmlsrc","load","String","document","ready","window","addEventListener"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,QAAQ,GAAGC,mBAAO,CAAC,sFAAS,CAACD,QAAQ;AAE3C,IAAME,aAAa,GAAG,GAAG,CAAC,CAAC;AAC3B,IAAMC,aAAa,GAAG,GAAG;AAEzB,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAYC,OAAO,EAAE;EAChC;EACA,IAAMC,EAAE,GAAGD,OAAO,CAACE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACnC,IAAID,EAAE,KAAKE,SAAS,EAAE;IACpB,OAAOC,IAAI,CAACC,KAAK,CAACJ,EAAE,CAACK,WAAW,CAAC;EACnC;;EAEA;EACA,IAAMC,SAAS,GAAGP,OAAO,CAACE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;EAC1C,IAAIK,SAAS,KAAKJ,SAAS,EAAE;IAC3B,OAAOC,IAAI,CAACC,KAAK,CAACE,SAAS,CAACC,KAAK,EAAE,GAAGV,aAAa,CAAC;EACtD;EAEA,OAAOW,GAAG;AACZ,CAAC;AAED,IAAMC,cAAc,GAAGf,QAAQ,CAAC,YAAM;EACpC,IAAMgB,CAAC,GAAGC,CAAC,CAAC,mBAAmB,CAAC;EAChC;EACA,IAAMC,IAAI,GAAG,IAAAC,KAAA,CAAAC,OAAA,EAAAJ,CAAC,EAAAK,IAAA,CAADL,CAAC,EAAM,KAAK,CAAC;EAC1B,KAAK,IAAIM,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGJ,IAAI,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IAClC,IAAME,GAAG,GAAGP,CAAC,CAACC,IAAI,CAACI,CAAC,CAAC,CAAC;IACtB,IAAMG,CAAC,GAAGrB,OAAO,CAACoB,GAAG,CAAC;IACtB,IAAIC,CAAC,EAAE;MACL,IAAMC,MAAM,GAAGF,GAAG,CAACG,IAAI,CAAC,QAAQ,CAAC,GAAGF,CAAC;MACrCD,GAAG,CAACI,IAAI,CAAC,KAAK,EAAEF,MAAM,CAAC;IACzB;EACF;EACA;EACA,IAAMG,KAAK,GAAG,IAAAV,KAAA,CAAAC,OAAA,EAAAJ,CAAC,EAAAK,IAAA,CAADL,CAAC,EAAM,MAAM,CAAC;EAC5B,KAAK,IAAIM,EAAC,GAAC,CAAC,EAAEA,EAAC,GAAGO,KAAK,CAACN,MAAM,EAAED,EAAC,EAAE,EAAE;IACnC,IAAMQ,IAAI,GAAGb,CAAC,CAACY,KAAK,CAACP,EAAC,CAAC,CAAC;IACxB,IAAMG,EAAC,GAAGrB,OAAO,CAAC0B,IAAI,CAAC;IACvB,IAAIL,EAAC,IAAIK,IAAI,CAACH,IAAI,CAAC,KAAK,CAAC,EAAE;MACzB,IAAMI,OAAO,GAAGD,IAAI,CAACH,IAAI,CAAC,KAAK,CAAC,GAAGF,EAAC;MACpCK,IAAI,CAACE,IAAI,CAACC,MAAM,CAACF,OAAO,CAAC,CAAC;IAC5B;EACF;AACF,CAAC,EAAE7B,aAAa,CAAC;AAEjBe,CAAC,CAACiB,QAAQ,CAAC,CAACC,KAAK,CAACpB,cAAc,CAAC;AACjCqB,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEtB,cAAc,CAAC,C","file":"timeline-resize.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn ","/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2015-2021 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2021 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\nconst debounce = require('lodash').debounce;\n\nconst DEBOUNCE_RATE = 200; // ms\nconst RELATIVE_SIZE = 0.5;\n\nconst getSize = function(element) {\n  // if we can get the offset width of the actual <td>, use it\n  const td = element.closest('td')[0];\n  if (td !== undefined) {\n    return Math.round(td.offsetWidth);\n  }\n\n  // otherwise, fall back to the old way of calculating\n  const container = element.closest('div'); // This is the panel, not the cell that contains the IMG\n  if (container !== undefined) {\n    return Math.round(container.width() * RELATIVE_SIZE);\n  }\n\n  return NaN;\n}\n\nconst recalculateBox = debounce(() => {\n  const e = $('#availability-box');\n  // Update the timeline headers\n  const imgs = e.find('img');\n  for (let i=0; i < imgs.length; i++) {\n    const img = $(imgs[i]);\n    const w = getSize(img);\n    if (w) {\n      const imgsrc = img.data('imgsrc') + w;\n      img.attr('src', imgsrc);\n    }\n  }\n  // Update the timeline html/images\n  const spans = e.find('span');\n  for (let i=0; i < spans.length; i++) {\n    const span = $(spans[i]);\n    const w = getSize(span);\n    if (w && span.data('src')) {\n      const htmlsrc = span.data('src') + w;\n      span.load(String(htmlsrc));\n    }\n  }\n}, DEBOUNCE_RATE);\n\n$(document).ready(recalculateBox);\nwindow.addEventListener('resize', recalculateBox);\n"],"sourceRoot":""}