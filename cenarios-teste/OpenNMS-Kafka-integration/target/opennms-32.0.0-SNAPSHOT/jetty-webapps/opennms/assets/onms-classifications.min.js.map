{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///./src/main/assets/js/lib/onms-http/index.js","webpack:///./src/main/assets/js/apps/onms-classifications/views/index.html","webpack:///./src/main/assets/js/apps/onms-classifications/views/config.html","webpack:///./src/main/assets/js/apps/onms-classifications/views/group.html","webpack:///./src/main/assets/js/apps/onms-classifications/views/modals/new-rule-modal.html","webpack:///./src/main/assets/js/apps/onms-classifications/views/modals/new-group-modal.html","webpack:///./src/main/assets/js/apps/onms-classifications/views/modals/import-modal.html","webpack:///./src/main/assets/js/apps/onms-classifications/views/modals/export-modal.html","webpack:///./src/main/assets/js/vendor/bootstrap-js.js","webpack:///./src/main/assets/js/apps/onms-elementList/lib/elementList.js","webpack:///./src/main/assets/js/apps/onms-elementList/templates/angular-onms-elementList-editInPlace.html","webpack:///./src/main/assets/js/apps/onms-elementList/templates/angular-onms-elementList-editListInPlace.html","webpack:///./src/main/assets/js/apps/onms-elementList/templates/angular-onms-elementList-editMapInPlace.html","webpack:///./src/main/assets/js/lib/onms-pagination/index.js","webpack:///./src/main/assets/js/lib/onms-pagination/pagination-toolbar.html","webpack:///./src/main/assets/js/lib/onms-http/403-permission-denied.html","webpack:///./src/main/assets/modules/lib/util/index.js","webpack:///./src/main/assets/js/apps/onms-classifications/views/modals/popover.html","webpack:///./src/main/assets/js/vendor/angular-js.js","webpack:///./src/main/assets/js/apps/search/index.js","webpack:///./src/main/assets/js/apps/search/template.ksc.html","webpack:///./src/main/assets/js/apps/search/template.nodes.html","webpack:///./src/main/assets/js/apps/onms-central-search/index.js","webpack:///./src/main/assets/js/apps/onms-central-search/quicksearch.html","webpack:///./src/main/assets/js/vendor/jquery-js.js","webpack:///./src/main/assets/js/apps/onms-default-apps/index.js","webpack:///./src/main/assets/js/vendor/moment-js.js","webpack:///./src/main/assets/js/apps/onms-classifications/index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","obj","_startsWith","require","__esModule","default","angular","permissionDeniedTemplate","$q","$rootScope","responseError","rejection","_context","_context2","status","config","url","call","console","error","headers","$emit","reject","$locationProvider","hashPrefix","$httpProvider","defaults","common","interceptors","push","run","$uibModal","$on","baseTags","document","getElementsByTagName","length","href","headerLogoutForm","submit","warn","open","templateUrl","controller","$scope","$uibModalInstance","reload","dismiss","location","size","backdrop","keyboard","path","c","put","log","jQuery","MODULE_NAME","ISO_8601_DATE_FORMAT","ISO_8601_DATE_FORMAT_WITHOUT_MILLIS","editInPlaceTemplate","editListInPlaceTemplate","editMapInPlaceTemplate","escapeSearchValue","value","replace","toFiql","clauses","first","fiql","property","operator","fromFiql","statements","split","segments","_context3","_context4","_context5","_context6","_indexOf","normalizeOffset","offset","maxOffset","limit","lastPageOffset","newOffset","Math","floor","_filter","_context7","_context8","input","fuzzy","_trim","html5Mode","enabled","rewriteLinks","directive","editing","originalValue","copy","edit","unedit","onKeyup","$event","keyCode","cancel","onSubmit","scope","item","valueType","step","transclude","$window","newValue","event","add","_values","confirmAndRemove","items","confirm","_splice","onEdit","_sort","values","newKey","key","keyType","$location","$log","$filter","debug","_s","searchClauses","orderBy","order","initialLimit","search","Number","query","lastOffset","searchParam","newLimit","MAX_VALUE","$watch","queryParams","addSearchClause","clause","isDate","Date","getSearchClause","refresh","clauseEquals","b","addEpochTimestampSearchClause","removeSearchClause","_context9","_context10","removeSearchClauses","_context11","_context12","index","replaceSearchClause","oldClause","newClause","scopeOldClause","scopeNewClause","clearSearch","changeOrderBy","setOffset","o","setLimit","update","deleteItem","appendTransform","defaultTransform","transform","t","isArray","_concat","parseContentRange","contentRange","start","end","total","pattern","paginationTemplate","restrict","model","position","onChangeCallback","link","element","attrs","undefined","Error","page","totalItems","currentPage","onChange","Util","_classCallCheck","base","getBaseHref","booleanValue","elementName","checkboxes","getElementsByName","hasOwnProperty","checked","version","full","_util","kscTemplate","nodesTemplate","$http","getNodes","criteria","method","params","label","comparator","then","response","data","node","goToChooseResources","id","getKscReports","kscReport","goToKscReport","ksc","quickSearchTemplate","globalErrorHandling","errorResponse","$resource","cancellable","SearchResource","$timeout","$document","KeyCodes","Types","results","performSearchExecuted","showLoadingIndicator","showLoadingIndicatorDelay","performSearchDelay","performSearchPromise","performSearchHandle","showLoadingIndicatorPromise","shiftLastPressed","selectedIndex","_bind","isChild","$","has","target","isSelf","is","resetQuery","cancelRequest","e","focus","select","getElementById","navigateSearchResult","parentComponent","parentHeight","clientHeight","resultHeight","resultOffset","offsetTop","scrollTop","type","triggerHandler","click","selected","$cancelRequest","selectIndex","onQueryChange","_forEach","eachResult","context","name","count","more","showMoreElement","loadMore","this","endIndex","searchResult","_slice","moment","elementList","indexTemplate","configTemplate","groupTemplate","newRuleModalTemplate","newGroupModalTemplate","importModalTemplate","exportModalTemplate","confirmTopoverTemplate","handleErrorResponse","message","confirmationPopoverDefaults","$stateProvider","$urlRouterProvider","state","otherwise","charAt","toUpperCase","substr","toLowerCase","$state","ClassificationService","ClassificationGroupService","ProtocolService","groups","classificationRequest","classificationResponse","isClassificationCollapsed","classify","result","classifyError","classification","refreshTabs","navigateToFirstGroup","group","l","r","_reverse","go","loadProtocols","protocols","fullyDefined","protocol","dstPort","dstAddress","srcPort","srcAddress","exporterAddress","toggleClassificationMode","classificationMode","updateGroup","$update","deleteGroup","$delete","openModal","resolve","groupsTotalAmount","editGroup","closed","addGroup","parameters","sortableGroups","ui","stop","oldIndex","newIndex","previousGroup","$stateParams","ClassificationRuleService","rules","splitRule","entry","_replaceAll","findGroup","groupId","get","showExportRulesDialog","editPositionOfRuleEnabled","readOnly","sortable","groupFilter","refreshGroup","refreshAll","$promise","column","deleteRule","rule","deleteAllRules","delete","editRule","addRule","sortableRules","previousRule","importRules","setFile","$apply","fileToUpload","files","openFileDialogue","_setTimeout2","resetInput","failedRows","containsHeader","deleteExistingRules","pagination","navigateWithinErrors","min","errors","uploadFile","reader","FileReader","onload","close","errorKeys","_getOwnPropertyNames","rowIndex","_parseInt2","readAsText","export","requestedFileName","exportGroup","string","currentSelection","selectedProtocols","buttonName","maxPosition","ruleCount","selectableGroups","save","closeCallback","errorCallback","_map","keyword","insertProtocol","removeProtocol"],"mappings":"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","file":"onms-classifications.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn ","'use strict';\n\nconst angular = require('vendor/angular-js');\n\nconst permissionDeniedTemplate  = require('./403-permission-denied.html');\n\nangular.module('onms.http', ['ui.bootstrap'])\n    .factory('InterceptorService',['$q', '$rootScope', function($q, $rootScope) {\n        return {\n            responseError: function (rejection) {\n                if (rejection.status === 401) {\n                    if (rejection.config && rejection.config.url\n                        && (rejection.config.url.startsWith('rest/')\n                            || rejection.config.url.startsWith('api/v2/'))\n                    ) {\n                        console.error('Login Required', rejection, rejection.headers); // eslint-disable-line no-console\n                        $rootScope.$emit('loginRequired');\n                    }\n                }\n                if (rejection.status === 403) {\n                    $rootScope.$emit('permissionDenied');\n                }\n                return $q.reject(rejection);\n            }\n        }\n    }])\n    .config(['$locationProvider', function($locationProvider) {\n        $locationProvider.hashPrefix('');\n    }])\n    .config(['$httpProvider',\n        function ($httpProvider) {\n            $httpProvider.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n            $httpProvider.interceptors.push('InterceptorService');\n        }\n    ])\n    .run(['$rootScope', '$uibModal', function($rootScope, $uibModal) {\n        $rootScope.$on('loginRequired', function() {\n            var baseTags = document.getElementsByTagName('base');\n            if (baseTags && baseTags.length > 0 && baseTags[0].href) {\n                document.headerLogoutForm.submit();\n            } else {\n                console.warn('Login is required, but cannot forward to login page due to missing base tag.'); // eslint-disable-line no-console\n            }\n        });\n\n        $rootScope.$on('permissionDenied', function() {\n            $uibModal.open({\n                templateUrl: permissionDeniedTemplate,\n                controller: function($scope, $uibModalInstance) {\n                    $scope.reload = function () {\n                        $uibModalInstance.dismiss();\n                        window.location.reload();\n                    };\n                },\n                size: '',\n                backdrop: 'static',\n                keyboard  : false\n            });\n        });\n    }])\n;\n\nmodule.exports = angular;","// Module\nvar code = \"<div class=\\\"row\\\"> <div class=\\\"\\\" ng-class=\\\"{'col-md-12': isClassificationCollapsed, 'col-md-9': !isClassificationCollapsed}\\\"> <ul id=\\\"tabs\\\" class=\\\"nav nav-tabs\\\"> <li role=\\\"presentation\\\" class=\\\"nav-item\\\"> <a ui-sref-active=\\\"active\\\" ui-sref=\\\"classifications.config\\\" data-name=\\\"settings\\\" class=\\\"nav-link\\\">Settings</a> </li> <li role=\\\"presentation\\\" ng-repeat=\\\"group in groups\\\" class=\\\"nav-item\\\"> <a ui-sref-active=\\\"active\\\" ui-sref=\\\"classifications.group({'id': group.id, 'group': group})\\\" title=\\\"{{group.description}}\\\" data-name=\\\"{{group.name}}\\\" class=\\\"nav-link\\\"> {{group.name | capitalize}} Rules <span class=\\\"badge badge-primary\\\" title=\\\"{{group.ruleCount}} defined rules\\\">{{group.ruleCount}}</span> </a> </li> <button id=\\\"action.classification.toggle\\\" class=\\\"btn btn-secondary mr-3\\\" style=\\\"position:absolute;right:0;z-index:900\\\" ng-click=\\\"isClassificationCollapsed = !isClassificationCollapsed\\\" title=\\\"{{isClassificationCollapsed ? 'Test classification' : 'Collapse classification panel'}}\\\"> <i class=\\\"fa\\\" ng-class=\\\"{'fa-magic': isClassificationCollapsed, 'fa-caret-right': !isClassificationCollapsed}\\\"></i> </button> </ul> <div class=\\\"card border-top-0\\\" ui-view> </div> </div> <div id=\\\"classification-tab\\\" class=\\\"col-md-3 collapse\\\" uib-collapse=\\\"isClassificationCollapsed\\\"> <div> <ul class=\\\"nav nav-tabs\\\"> <li role=\\\"presentation\\\" class=\\\"nav-item\\\"> <a class=\\\"nav-link active\\\">Test Classification</a> </li> </ul> </div> <div class=\\\"card border-top-0\\\"> <div class=\\\"card-default card-body\\\"> <form name=\\\"classifyForm\\\"> <div class=\\\"form-group\\\"> <label class=\\\"col-form-label\\\" for=\\\"classify-protocol\\\">Protocol</label> <input class=\\\"form-control\\\" type=\\\"text\\\" autocomplete=\\\"off\\\" id=\\\"classify-protocol\\\" name=\\\"classify-protocol\\\" ng-model=\\\"classificationRequest.protocol\\\" placeholder=\\\"A valid RFC specified IP protocol, e.g. TCP, UDP\\\" typeahead-min-length=\\\"0\\\" uib-typeahead=\\\"protocol.keyword for protocol in protocols | filter:$viewValue\\\" typeahead-editable=\\\"false\\\" ng-class=\\\"{ 'is-invalid' : ruleForm['classify-protocol'].$invalid || classifyError.protocol }\\\"> <p id=\\\"classifyError.protocol\\\" ng-show=\\\"classifyError.protocol\\\" class=\\\"form-text text-muted\\\">{{classifyError.protocol}}</p> </div> <div class=\\\"form-group\\\"> <label class=\\\"col-form-label\\\" for=\\\"classify-exporterAddress\\\">Exporter Address</label> <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"classify-exporterAddress\\\" name=\\\"classify-exporterAddress\\\" placeholder=\\\"e.g. 10.0.0.1\\\" ng-model=\\\"classificationRequest.exporterAddress\\\" ng-class=\\\"{ 'is-invalid' : ruleForm['classify-exporterAddress'].$invalid || classifyError.exporterAddress }\\\"> <p id=\\\"classifyError.exporterAddress\\\" ng-show=\\\"classifyError.exporterAddress\\\" class=\\\"invalid-feedback\\\">{{classifyError.exporterAddress}}</p> </div> <div class=\\\"form-row\\\"> <div class=\\\"form-group col-md-8 col-sm-8 col-xs-8\\\"> <label class=\\\"col-form-label\\\" for=\\\"classify-srcAddress\\\">Source Address</label> <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"classify-srcAddress\\\" name=\\\"classify-srcAddress\\\" placeholder=\\\"e.g. 127.0.0.1\\\" ng-model=\\\"classificationRequest.srcAddress\\\" ng-class=\\\"{ 'is-invalid' : ruleForm['classify-srcAddress'].$invalid || classifyError.srcAddress }\\\"> <p id=\\\"classifyError.srcAddress\\\" ng-show=\\\"classifyError.srcAddress\\\" class=\\\"invalid-feedback\\\">{{classifyError.srcAddress}}</p> </div> <div class=\\\"form-group col-md-4 col-sm-4 col-xs-4\\\"> <label class=\\\"col-form-label\\\" for=\\\"classify-srcPort\\\">Port</label> <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"classify-srcPort\\\" name=\\\"classify-srcPort\\\" placeholder=\\\"e.g. 55252\\\" ng-model=\\\"classificationRequest.srcPort\\\" ng-class=\\\"{ 'is-invalid' : ruleForm['classify-srcPort'].$invalid || classifyError.srcPort }\\\"> <p id=\\\"classifyError.srcPort\\\" ng-show=\\\"classifyError.srcPort\\\" class=\\\"invalid-feedback\\\">{{classifyError.srcPort}}</p> </div> </div> <div class=\\\"form-row\\\"> <div class=\\\"form-group col-md-8 col-sm-8 col-xs-8\\\"> <label class=\\\"col-form-label\\\" for=\\\"classify-dstAddress\\\">Destination Address</label> <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"classify-dstAddress\\\" name=\\\"classify-dstAddress\\\" placeholder=\\\"e.g. 127.0.0.1\\\" ng-model=\\\"classificationRequest.dstAddress\\\" ng-class=\\\"{ 'is-invalid' : ruleForm['classify-dstAddress'].$invalid || classifyError.dstAddress }\\\"> <p id=\\\"classifyError.dstAddress\\\" ng-show=\\\"classifyError.dstAddress\\\" class=\\\"invalid-feedback\\\">{{classifyError.dstAddress}}</p> </div> <div class=\\\"form-group col-md-4 col-sm-4 col-xs-4\\\"> <label class=\\\"col-form-label\\\" for=\\\"classify-dstPort\\\">Port</label> <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"classify-dstPort\\\" name=\\\"classify-dstPort\\\" placeholder=\\\"e.g. 80\\\" ng-model=\\\"classificationRequest.dstPort\\\" ng-class=\\\"{ 'is-invalid' : ruleForm['classify-dstPort'].$invalid || classifyError.dstPort }\\\"> <p id=\\\"classifyError.dstPort\\\" ng-show=\\\"classifyError.dstPort\\\" class=\\\"invalid-feedback\\\">{{classifyError.dstPort}}</p> </div> </div> <div class=\\\"badge badge-secondary\\\" ng-show=\\\"classificationResponse\\\"> <span id=\\\"classification-response\\\" title=\\\"Based on the current set of rules, the given flow would be mapped to\\\">{{classificationResponse}}</span> </div> <div class=\\\"alert alert-danger\\\" ng-show=\\\"classifyError.entity\\\"> <span id=\\\"classification-error\\\">{{classifyError.entity}}</span> </div> <div class=\\\"form-group\\\"> <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" id=\\\"classification-submit\\\" ng-click=\\\"classify(classificationRequest)\\\" ng-disabled=\\\"classifyForm.$invalid || !fullyDefined()\\\">Classify</button> </div> </form> </div> </div> </div> </div> \";\n// Exports\nvar _module_exports = code;;\nvar path = '/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-classifications/views/index.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"card-body\\\"> <div class=\\\"btn-toolbar pull-right mb-2\\\"> <div class=\\\"btn-group ml-2\\\" role=\\\"group\\\"> <button id=\\\"action.refresh\\\" class=\\\"btn btn-secondary\\\" ng-click=\\\"refresh()\\\" title=\\\"Refresh list\\\"><i class=\\\"fa fa-refresh\\\"></i></button> </div> <div class=\\\"btn-group ml-2\\\" role=\\\"group\\\"> <button id=\\\"action.addGroup\\\" class=\\\"btn btn-secondary\\\" ng-click=\\\"addGroup()\\\" title=\\\"Add new classification group\\\"><i class=\\\"fa fa-plus\\\"></i></button> </div> </div> <div ng-show=\\\"groups.length == 0\\\">No groups defined.</div> <pagination model=\\\"query\\\" ng-show=\\\"groups.length > 0\\\" position=\\\"bottom\\\" on-change=\\\"refresh\\\"> <table class=\\\"table table-striped\\\"> <thead> <tr class=\\\"d-flex\\\"> <th class=\\\"col-md-1 text-nowrap\\\">Position</th> <th class=\\\"col-md-3 text-nowrap\\\">Name</th> <th class=\\\"col-md-5 text-nowrap\\\">Description</th> <th class=\\\"col-md-1 text-nowrap\\\">Editable</th> <th class=\\\"col-md-1 text-nowrap\\\">Enabled</th> <th class=\\\"col-md-1 text-nowrap\\\">Actions</th> </tr> </thead> <tbody ng-model=\\\"groups\\\" ui-sortable=\\\"sortableGroups\\\"> <tr class=\\\"d-flex\\\" ng-repeat=\\\"group in groups\\\" data-row=\\\"{{group.name}}\\\" ng-class=\\\"{'unsortable': group['readOnly']}\\\"> <td class=\\\"col-md-1 text-nowrap\\\"> <i class=\\\"fa fa-bars text-muted\\\" style=\\\"padding-right:1em\\\" ng-style=\\\"{'visibility': !group['readOnly'] ? 'visible' : 'hidden'}\\\"></i> {{group['position']}}</td> <td class=\\\"col-md-3 text-nowrap\\\">{{group['name']}}</td> <td class=\\\"col-md-5 text-nowrap\\\">{{group['description']}}</td> <td class=\\\"col-md-1 text-nowrap\\\">{{!group['readOnly']}}</td> <td class=\\\"col-md-1 text-nowrap\\\"> <toggle id=\\\"action.{{group.name}}.toggle\\\" size=\\\"btn-sm\\\" ng-model=\\\"group['enabled']\\\" ng-change=\\\"updateGroup(group)\\\"></toggle> </td> <td class=\\\"col-md-1 text-nowrap\\\"> <div class=\\\"pull-right\\\"> <button id=\\\"action.{{group.position}}.edit\\\" class=\\\"btn btn-sm btn-secondary\\\" ng-click=\\\"editGroup(group)\\\" title=\\\"edit group\\\" ng-show=\\\"!group.readOnly\\\"><i class=\\\"fa fa-edit\\\"></i></button> <button id=\\\"action.{{group.position}}.delete\\\" class=\\\"btn btn-sm btn-secondary\\\" mwl-confirm title=\\\"delete group\\\" message=\\\"Do you want to delete group '{{group.name}}' with {{group.ruleCount}} rule(s)?\\\" on-confirm=\\\"deleteGroup(group)\\\" placement=\\\"left\\\" confirm-button-type=\\\"danger\\\" cancel-button-type=\\\"secondary\\\" confirm-text=\\\"Yes\\\" cancel-text=\\\"No\\\" ng-show=\\\"!group.readOnly\\\"><i class=\\\"fa fa-trash-o\\\"></i></button> </div> </td> </tr> </tbody> </table> </pagination> </div> \";\n// Exports\nvar _module_exports = code;;\nvar path = '/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-classifications/views/config.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div> <style>.wrapped{white-space:pre}.text-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap!important}</style> <div class=\\\"card-body\\\"> <div class=\\\"btn-toolbar pull-right mb-2\\\" role=\\\"toolbar\\\"> <div class=\\\"input-group\\\" role=\\\"group\\\" ng-show=\\\"group.ruleCount > 0\\\"> <div class=\\\"input-group-prepend\\\"> <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span> </div> <input type=\\\"text\\\" id=\\\"action.search\\\" ng-model=\\\"query.search\\\" ng-change=\\\"refresh()\\\" placeholder=\\\"search...\\\" class=\\\"form-control\\\"> <div class=\\\"input-group-append\\\"> <button class=\\\"btn btn-secondary\\\" title=\\\"Clear search\\\" ng-click=\\\"clearSearch()\\\" ng-show=\\\"query.search\\\"><i class=\\\"fa fa-close\\\"></i></button> </div> </div> <div class=\\\"btn-group ml-4\\\" role=\\\"group\\\"> <button id=\\\"action.refresh\\\" class=\\\"btn btn-secondary\\\" ng-click=\\\"refreshAll()\\\" title=\\\"Refresh list\\\"><i class=\\\"fa fa-refresh\\\"></i></button> </div> <div class=\\\"btn-group ml-2\\\" role=\\\"group\\\" ng-show=\\\"!group.readOnly\\\"> <button id=\\\"action.addRule\\\" class=\\\"btn btn-secondary\\\" ng-click=\\\"addRule(group)\\\" title=\\\"Add new classification rule\\\"><i class=\\\"fa fa-plus\\\"></i></button> <button ng-if=\\\"rules.length > 0\\\" id=\\\"action.deleteAll\\\" class=\\\"btn btn-secondary\\\" mwl-confirm title=\\\"Delete rules\\\" message=\\\"Do you want to delete all {{group.name}} rules?\\\" on-confirm=\\\"deleteAllRules()\\\" placement=\\\"left\\\" confirm-button-type=\\\"danger\\\" cancel-button-type=\\\"secondary\\\" confirm-text=\\\"Yes\\\" cancel-text=\\\"No\\\"><i class=\\\"fa fa-trash-o\\\"></i></button> </div> <div class=\\\"btn-group ml-2\\\" role=\\\"group\\\" ng-show=\\\"!group.readOnly\\\"> <button id=\\\"action.importCSV\\\" class=\\\"btn btn-secondary\\\" ng-click=\\\"importRules()\\\" title=\\\"Import classification rules from CSV\\\"><i class=\\\"fa fa-upload\\\"></i></button> <button id=\\\"action.exportCSV\\\" class=\\\"btn btn-secondary\\\" ng-click=\\\"showExportRulesDialog()\\\" title=\\\"Export classification rules as CSV\\\"> <i class=\\\"fa fa-download\\\"></i> </button> </div> </div> <h5 class=\\\"pt-2\\\">{{group.description}} <span class=\\\"badge badge-secondary\\\" ng-if=\\\"group.readOnly\\\">read-only</span></h5> <div class=\\\"text-center mt-4\\\" ng-show=\\\"rules.length == 0\\\"><pre>No rules defined.</pre></div> <pagination model=\\\"query\\\" ng-show=\\\"rules.length > 0\\\" position=\\\"bottom\\\" on-change=\\\"refresh\\\"> <table class=\\\"table table-striped\\\"> <thead> <tr class=\\\"d-flex\\\"> <th class=\\\"col-md-1 text-nowrap\\\"> <a ng-click=\\\"changeOrderBy('position')\\\">Position</a> <i ng-show=\\\"query.orderBy === 'position' &amp;&amp; query.order === 'asc'\\\" class=\\\"fa fa-sort-asc\\\"></i> <i ng-show=\\\"query.orderBy === 'position' &amp;&amp; query.order === 'desc'\\\" class=\\\"fa fa-sort-desc\\\"></i> </th> <th class=\\\"col-md-1 text-nowrap\\\"> <a ng-click=\\\"changeOrderBy('name')\\\">Application</a> <i ng-show=\\\"query.orderBy === 'name' &amp;&amp; query.order === 'asc'\\\" class=\\\"fa fa-sort-asc\\\"></i> <i ng-show=\\\"query.orderBy === 'name' &amp;&amp; query.order === 'desc'\\\" class=\\\"fa fa-sort-desc\\\"></i> </th> <th class=\\\"col-md-1 text-nowrap\\\"> <a ng-click=\\\"changeOrderBy('protocol')\\\">Protocol</a> <i ng-show=\\\"query.orderBy === 'protocol' &amp;&amp; query.order === 'asc'\\\" class=\\\"fa fa-sort-asc\\\"></i> <i ng-show=\\\"query.orderBy === 'protocol' &amp;&amp; query.order === 'desc'\\\" class=\\\"fa fa-sort-desc\\\"></i> </th> <th class=\\\"col-md-2 text-nowrap\\\"> <a ng-click=\\\"changeOrderBy('srcAddress')\\\">Src. Address</a> <i ng-show=\\\"query.orderBy === 'srcAddress' &amp;&amp; query.order === 'asc'\\\" class=\\\"fa fa-sort-asc\\\"></i> <i ng-show=\\\"query.orderBy === 'srcAddress' &amp;&amp; query.order === 'desc'\\\" class=\\\"fa fa-sort-desc\\\"></i> </th> <th class=\\\"col-md-1 text-nowrap\\\"> <a ng-click=\\\"changeOrderBy('srcPort')\\\">Src. Port</a> <i ng-show=\\\"query.orderBy === 'srcPort' &amp;&amp; query.order === 'asc'\\\" class=\\\"fa fa-sort-asc\\\"></i> <i ng-show=\\\"query.orderBy === 'srcPort' &amp;&amp; query.order === 'desc'\\\" class=\\\"fa fa-sort-desc\\\"></i> </th> <th class=\\\"col-md-2 text-nowrap\\\"> <a ng-click=\\\"changeOrderBy('dstAddress')\\\">Dst. Address</a> <i ng-show=\\\"query.orderBy === 'dstAddress' &amp;&amp; query.order === 'asc'\\\" class=\\\"fa fa-sort-asc\\\"></i> <i ng-show=\\\"query.orderBy === 'dstAddress' &amp;&amp; query.order === 'desc'\\\" class=\\\"fa fa-sort-desc\\\"></i> </th> <th class=\\\"col-md-1 text-nowrap\\\"> <a ng-click=\\\"changeOrderBy('dstPort')\\\">Dst. Port</a> <i ng-show=\\\"query.orderBy === 'dstPort' &amp;&amp; query.order === 'asc'\\\" class=\\\"fa fa-sort-asc\\\"></i> <i ng-show=\\\"query.orderBy === 'dstPort' &amp;&amp; query.order === 'desc'\\\" class=\\\"fa fa-sort-desc\\\"></i> </th> <th ng-class=\\\"{'col-md-1': group.readOnly === false, 'col-md-2': group.readOnly === true}\\\" class=\\\"text-nowrap\\\"> <a ng-click=\\\"changeOrderBy('exporterFilter')\\\">Exporter Filter</a> <i ng-show=\\\"query.orderBy === 'exporterFilter' &amp;&amp; query.order === 'asc'\\\" class=\\\"fa fa-sort-asc\\\"></i> <i ng-show=\\\"query.orderBy === 'exporterFilter' &amp;&amp; query.order === 'desc'\\\" class=\\\"fa fa-sort-desc\\\"></i> </th> <th class=\\\"col-md-1 text-nowrap\\\"> <a ng-click=\\\"changeOrderBy('omnidirectional')\\\">Omnidirectional</a> <i ng-show=\\\"query.orderBy === 'omnidirectional' &amp;&amp; query.order === 'asc'\\\" class=\\\"fa fa-sort-asc\\\"></i> <i ng-show=\\\"query.orderBy === 'omnidirectional' &amp;&amp; query.order === 'desc'\\\" class=\\\"fa fa-sort-desc\\\"></i> </th> <th class=\\\"col-md-1\\\" ng-if=\\\"group.readOnly === false\\\"> Actions </th> </tr> </thead> <tbody ng-model=\\\"rules\\\" ui-sortable=\\\"sortableRules\\\"> <tr ng-repeat=\\\"rule in rules\\\" class=\\\"d-flex\\\"> <td class=\\\"col-md-1 text-nowrap\\\"> <i class=\\\"fa fa-bars text-muted\\\" ng-show=\\\"!group.readOnly && query.orderBy === 'position' && query.order === 'asc'\\\" style=\\\"padding-right:1em\\\"></i>{{rule['position']}} </td> <td class=\\\"col-md-1 text-nowrap\\\">{{rule['name']}}</td> <td class=\\\"col-md-1 text-nowrap\\\"> <span ng-repeat=\\\"protocol in rule.protocols\\\" class=\\\"badge badge-secondary mr-2\\\">{{protocol}}</span> </td> <td class=\\\"col-md-2 wrapped\\\">{{splitRule(rule['srcAddress'])}}</td> <td class=\\\"col-md-1 wrapped\\\">{{splitRule(rule['srcPort'])}}</td> <td class=\\\"col-md-2 wrapped\\\">{{splitRule(rule['dstAddress'])}}</td> <td class=\\\"col-md-1 wrapped\\\">{{splitRule(rule['dstPort'])}}</td> <td ng-class=\\\"{'col-md-1': group.readOnly === false, 'col-md-2': group.readOnly === true}\\\" class=\\\"text-ellipsis\\\"> <span title=\\\"{{rule['exporterFilter']}}\\\">{{rule['exporterFilter']}}</span> </td> <td class=\\\"col-md-1 text-nowrap\\\"><span class=\\\"fa fa-exchange\\\" ng-if=\\\"rule['omnidirectional'] === true\\\" aria-hidden=\\\"true\\\"></span></td> <td class=\\\"col-md-1\\\" ng-if=\\\"group.readOnly === false\\\"> <div class=\\\"pull-right\\\"> <button id=\\\"action.{{rule.position}}.edit\\\" class=\\\"btn btn-sm btn-secondary\\\" ng-click=\\\"editRule(rule, group)\\\" title=\\\"edit rule\\\"><i class=\\\"fa fa-edit\\\"></i></button> <button id=\\\"action.{{rule.position}}.delete\\\" class=\\\"btn btn-sm btn-secondary\\\" ng-click=\\\"deleteRule(rule)\\\" title=\\\"delete rule\\\"><i class=\\\"fa fa-trash-o\\\"></i></button> </div> </td> </tr> </tbody> </table> </pagination> </div> </div>\";\n// Exports\nvar _module_exports = code;;\nvar path = '/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-classifications/views/group.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div id=\\\"ruleModal\\\"> <div class=\\\"modal-header\\\"> <h5 class=\\\"modal-title\\\" ng-show=\\\"classification.id === undefined\\\">Create Classification Rule</h5> <h5 class=\\\"modal-title\\\" ng-show=\\\"classification.id !== undefined\\\">Edit Classification Rule</h5> </div> <div class=\\\"modal-body\\\"> <form name=\\\"ruleForm\\\" novalidate> <div class=\\\"form-group\\\"> <div ng-show=\\\"error.entity\\\" class=\\\"form-text text-danger\\\">{{error.entity}}</div> </div> <div class=\\\"form-group form-row\\\"> <label class=\\\"col-form-label\\\" for=\\\"rule.group\\\">Group</label> <select class=\\\"form-control custom-select\\\" ng-options=\\\"group as group.name for group in selectableGroups track by group.id\\\" ng-model=\\\"classification.group\\\" ng-disabled=\\\"classification.id === undefined\\\" id=\\\"rule.group\\\"></select> </div> <div class=\\\"form-group form-row\\\"> <label class=\\\"col-form-label\\\" for=\\\"rule.position\\\">Position</label> <button class=\\\"btn btn-link\\\" uib-popover-html=\\\"'<div>Rules on low positions will be evaluated first:<br>position 0 -&gt; position 1 -&gt; position 2 -&gt; ...</div>'\\\" popover-trigger=\\\"'outsideClick'\\\"><i class=\\\"fa fa-question-circle\\\"></i></button> <input class=\\\"form-control\\\" id=\\\"rule.position\\\" name=\\\"position\\\" placeholder=\\\"{{maxPosition}}\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"{{maxPosition}}\\\" step=\\\"1\\\" pattern=\\\"[0-9]*\\\" ng-model=\\\"classification.position\\\" ng-class=\\\"{ 'is-invalid' : ruleForm.position.$invalid || error.position }\\\"> <div ng-show=\\\"ruleForm.position.$invalid\\\" class=\\\"invalid-feedback\\\">Position must be between 0 and {{maxPosition}}.</div> </div> <div class=\\\"form-group form-row\\\"> <label class=\\\"col-form-label\\\" for=\\\"rule.name\\\">Application Name</label> <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"rule.name\\\" name=\\\"name\\\" placeholder=\\\"HTTP\\\" ng-model=\\\"classification.name\\\" ng-class=\\\"{ 'is-invalid' : ruleForm.name.$invalid || error.name }\\\" required> <div ng-show=\\\"ruleForm.name.$invalid\\\" class=\\\"invalid-feedback\\\">The name is required.</div> <div ng-show=\\\"error.name\\\" class=\\\"invalid-feedback\\\">{{error.name}}</div> </div> <div class=\\\"form-row\\\"> <div class=\\\"form-group col-md-8\\\"> <label class=\\\"col-form-label\\\" for=\\\"rule.srcAddress\\\">Source IP Address</label> <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"rule.srcAddress\\\" name=\\\"srcAddress\\\" placeholder=\\\"127.0.0.1,10.0.0.0/24,10.0.0.0-10.255.255.255\\\" ng-model=\\\"classification.srcAddress\\\" ng-class=\\\"{ 'is-invalid' : ruleForm.srcAddress.$invalid || error.srcAddress}\\\"> <div ng-show=\\\"error.srcAddress\\\" class=\\\"invalid-feedback\\\">{{error.srcAddress}}</div> </div> <div class=\\\"form-group col-md-4\\\"> <label class=\\\"col-form-label\\\" for=\\\"rule.srcPort\\\">Source Port</label> <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"rule.srcPort\\\" name=\\\"srcPort\\\" placeholder=\\\"80,8080\\\" ng-model=\\\"classification.srcPort\\\" ng-class=\\\"{ 'is-invalid' : ruleForm.srcPort.$invalid || error.srcPort }\\\"> <div ng-show=\\\"error.srcPort\\\" class=\\\"invalid-feedback\\\">{{error.srcPort}}</div> </div> </div> <div class=\\\"form-row\\\"> <div class=\\\"form-group col-md-8\\\"> <label class=\\\"col-form-label\\\" for=\\\"rule.dstAddress\\\">Destination IP Address</label> <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"rule.dstAddress\\\" name=\\\"dstAddress\\\" placeholder=\\\"127.0.0.1,10.0.0.0/24,10.0.0.0-10.255.255.255\\\" ng-model=\\\"classification.dstAddress\\\" ng-class=\\\"{ 'is-invalid' : ruleForm.dstAddress.$invalid || error.dstAddress}\\\"> <div ng-show=\\\"error.dstAddress\\\" class=\\\"invalid-feedback\\\">{{error.dstAddress}}</div> </div> <div class=\\\"form-group col-md-4\\\"> <label class=\\\"col-form-label\\\" for=\\\"rule.dstPort\\\">Destination Port</label> <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"rule.dstPort\\\" name=\\\"dstPort\\\" placeholder=\\\"80,8080\\\" ng-model=\\\"classification.dstPort\\\" ng-class=\\\"{ 'is-invalid' : ruleForm.dstPort.$invalid || error.dstPort }\\\"> <div ng-show=\\\"error.dstPort\\\" class=\\\"invalid-feedback\\\">{{error.dstPort}}</div> </div> </div> <div class=\\\"form-group\\\"> <label class=\\\"col-form-label\\\" for=\\\"rule.omnidirectional\\\">Omnidirectional</label> <div class=\\\"form-check\\\"> <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"rule.omnidirectional\\\" name=\\\"omnidirectional\\\" ng-model=\\\"classification.omnidirectional\\\" ng-class=\\\"{ 'is-invalid' : ruleForm.omnidirectional.$invalid || error.omnidirectional }\\\"> <label class=\\\"form-check-label\\\" for=\\\"rule.omnidirectional\\\">Enable matching independent of the flow direction</label> <div ng-show=\\\"error.omnidirectional\\\" class=\\\"invalid-feedback\\\">{{error.omnidirectional}}</div> </div> </div> <div class=\\\"form-group form-row\\\"> <label class=\\\"col-form-label\\\" for=\\\"rule.exporterFilter\\\">Exporter Filter</label> <button class=\\\"btn btn-link\\\" uib-popover-html=\\\"'<div>The rule is only applied if the exporter of the flow matches the defined <a href=https://docs.opennms.com/horizon/latest/reference/configuration/filters/filters.html target=_blank>filter</a>.</div>'\\\" popover-trigger=\\\"'outsideClick'\\\"><i class=\\\"fa fa-question-circle\\\"></i></button> <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"rule.exporterFilter\\\" name=\\\"exporterFilter\\\" placeholder=\\\"categoryName == 'Exporters' | ipAddr == '10.0.0.1'\\\" ng-model=\\\"classification.exporterFilter\\\" ng-class=\\\"{ 'is-invalid' : ruleForm.exporterFilter.$invalid || error.exporterFilter }\\\"> <div ng-show=\\\"error.exporterFilter\\\" class=\\\"invalid-feedback\\\">{{error.exporterFilter}}</div> </div> <div class=\\\"form-group form-row\\\"> <label class=\\\"col-form-label\\\" for=\\\"rule.protocol\\\">IP Protocol</label> <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"rule.protocol\\\" name=\\\"protocol\\\" ng-model=\\\"currentSelection\\\" placeholder=\\\"tcp\\\" typeahead-on-select=\\\"insertProtocol($item)\\\" typeahead-min-length=\\\"0\\\" uib-typeahead=\\\"protocol.keyword for protocol in protocols | filter:$viewValue\\\" typeahead-editable=\\\"false\\\" ng-class=\\\"{ 'is-invalid' : ruleForm.protocol.$invalid || error.protocol }\\\"> <span ng-repeat=\\\"protocol in selectedProtocols\\\" class=\\\"badge badge-secondary mt-2 mr-2\\\"> {{protocol.keyword | uppercase}} <a href class=\\\"text-danger\\\" name=\\\"remove-protocol\\\" ng-click=\\\"removeProtocol(protocol)\\\"><i class=\\\"fa fa-remove\\\" title=\\\"remove protocol\\\"></i></a> </span> <div ng-show=\\\"error.protocol\\\" class=\\\"invalid-feedback\\\">{{error.protocol}}</div> </div> </form> </div> <div class=\\\"modal-footer\\\"> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"save-rule\\\" ng-click=\\\"save()\\\" ng-disabled=\\\"ruleForm.$invalid\\\">{{buttonName}}</button> <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" id=\\\"cancel-rule\\\" ng-click=\\\"cancel()\\\">Cancel</button> </div> </div> \";\n// Exports\nvar _module_exports = code;;\nvar path = '/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-classifications/views/modals/new-rule-modal.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div id=\\\"groupModal\\\"> <div class=\\\"modal-header\\\"> <h5 class=\\\"modal-title\\\" ng-show=\\\"group.id === undefined\\\">Create Classification Group</h5> <h5 class=\\\"modal-title\\\" ng-show=\\\"group.id !== undefined\\\">Edit Classification Group</h5> </div> <div class=\\\"modal-body\\\"> <form name=\\\"groupForm\\\" novalidate> <div class=\\\"form-group\\\"> <div ng-show=\\\"error.entity\\\" class=\\\"form-text text-danger\\\">{{error.entity}}</div> </div> <div class=\\\"form-group form-row\\\"> <label class=\\\"col-form-label\\\" for=\\\"group.position\\\">Position</label> <button class=\\\"btn btn-link\\\" uib-popover-html=\\\"'<div>Groups on low positions will be evaluated first:<br>position 0 -&gt; position 1 -&gt; position 2 -&gt; ...</div>'\\\" popover-trigger=\\\"'outsideClick'\\\"><i class=\\\"fa fa-question-circle\\\"></i></button> <input class=\\\"form-control\\\" id=\\\"group.position\\\" name=\\\"position\\\" placeholder=\\\"{{maxPosition}}\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"{{maxPosition}}\\\" step=\\\"1\\\" pattern=\\\"[0-9]*\\\" ng-model=\\\"group.position\\\" ng-class=\\\"{ 'is-invalid' : groupForm.position.$invalid || error.position }\\\"> <div ng-show=\\\"groupForm.position.$invalid\\\" class=\\\"invalid-feedback\\\">Position must be between 0 and {{maxPosition}}.</div> </div> <div class=\\\"form-group form-row\\\"> <label class=\\\"col-form-label\\\" for=\\\"group.name\\\">Group Name</label> <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"group.name\\\" name=\\\"name\\\" placeholder=\\\"my classification group\\\" ng-model=\\\"group.name\\\" ng-class=\\\"{ 'is-invalid' : groupForm.name.$invalid || error.name }\\\" required> <div ng-show=\\\"groupForm.name.$invalid\\\" class=\\\"invalid-feedback\\\">The name is required.</div> <div ng-show=\\\"error.name\\\" class=\\\"invalid-feedback\\\">{{error.name}}</div> </div> <div class=\\\"form-group form-row\\\"> <label class=\\\"col-form-label\\\" for=\\\"group.description\\\">Group Description</label> <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"group.description\\\" name=\\\"description\\\" placeholder=\\\"my description\\\" ng-model=\\\"group.description\\\" ng-class=\\\"{ 'is-invalid' : groupForm.description.$invalid || error.description }\\\" required> <div ng-show=\\\"error.description\\\" class=\\\"invalid-feedback\\\">{{error.description}}</div> </div> </form> </div> <div class=\\\"modal-footer\\\"> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"save-group\\\" ng-click=\\\"save()\\\" ng-disabled=\\\"groupForm.$invalid\\\">{{buttonName}}</button> <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" id=\\\"cancel-group\\\" ng-click=\\\"cancel()\\\">Cancel</button> </div> </div> \";\n// Exports\nvar _module_exports = code;;\nvar path = '/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-classifications/views/modals/new-group-modal.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div> <div class=\\\"modal-header\\\"> <h5 class=\\\"modal-title\\\">Import Classification Rules</h5> </div> <div class=\\\"modal-body\\\"> <form class=\\\"form\\\"> <div class=\\\"form-group form-row\\\"> <label class=\\\"col-sm-3 col-form-label\\\">Group</label> <div class=\\\"col-sm-9\\\"> <p class=\\\"form-control-plaintext\\\">{{group.name}}</p> </div> </div> <div class=\\\"form-group form-row\\\"> <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"importFile\\\">Select file to import</label> <div class=\\\"col-sm-9\\\"> <div class=\\\"input-group\\\"> <span class=\\\"input-group-prepend\\\"> <button ng-click=\\\"openFileDialogue()\\\" class=\\\"btn btn-secondary\\\" type=\\\"button\\\">Choose</button> </span> <input ng-click=\\\"openFileDialogue()\\\" type=\\\"text\\\" id=\\\"importFile\\\" class=\\\"form-control\\\" placeholder=\\\"Choose a file...\\\" ng-model=\\\"fileToUpload.name\\\"> <span class=\\\"input-group-append\\\"> <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" ng-click=\\\"resetInput()\\\">Reset</button> </span> </div> </div> </div> <div class=\\\"form-group form-row\\\"> <div class=\\\"col-sm-offset-3 col-sm-9\\\"> <div class=\\\"checkbox\\\"> <label> <input type=\\\"checkbox\\\" ng-model=\\\"containsHeader\\\"> Contains header </label> </div> <div class=\\\"checkbox\\\"> <label> <input type=\\\"checkbox\\\" ng-model=\\\"deleteExistingRules\\\"> Delete existing rules </label> </div> </div> </div> <input id=\\\"fileToImport\\\" type=\\\"file\\\" style=\\\"visibility:hidden;display:none\\\" onchange=\\\"angular.element(this).scope().setFile(this)\\\"> </form> <div class=\\\"alert alert-danger\\\" ng-show=\\\"error\\\"> {{error}} </div> <div ng-show=\\\"failedRows.length > 0\\\"> <pagination model=\\\"pagination\\\" position=\\\"bottom\\\" on-change=\\\"navigateWithinErrors\\\"> <table class=\\\"table table-bordered table-striped\\\"> <tbody> <tr class=\\\"d-flex\\\"> <th class=\\\"col-md-1\\\">Row Index</th> <th class=\\\"col-md-11\\\">Error Message</th> </tr> <tr class=\\\"d-flex\\\" ng-repeat=\\\"failedRow in failedRows\\\"> <td class=\\\"col-md-1\\\">{{failedRow['index']}}</td> <td class=\\\"col-md-11\\\">{{failedRow['message']}}</td> </tr> </tbody> </table> </pagination> </div> </div> <div class=\\\"modal-footer\\\"> <div style=\\\"display:inline\\\" title=\\\"Please confirm deletion\\\"> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"uploadFile()\\\" ng-show=\\\"fileToUpload\\\" title=\\\"Upload Rule\\\">Upload</button> </div> <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" ng-click=\\\"$dismiss('cancelled by user')\\\">Cancel</button> </div> </div>\";\n// Exports\nvar _module_exports = code;;\nvar path = '/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-classifications/views/modals/import-modal.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div id=\\\"exportModal\\\"> <div class=\\\"modal-header\\\"> <h5 class=\\\"modal-title\\\">Export Classification Rules for Group: {{group.name}}</h5> </div> <div class=\\\"modal-body\\\"> <form name=\\\"exportGroupForm\\\"> <div class=\\\"form-group\\\"> <div class=\\\"form-group\\\"> <label class=\\\"col-form-label\\\" for=\\\"export.requestedFileName\\\">File Name</label> <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"export.requestedFileName\\\" name=\\\"requestedFileName\\\" value=\\\"{{group.id}}_rules.csv\\\" ng-model=\\\"export.requestedFileName\\\" ng-pattern=\\\"/^[a-zA-Z1-9_ .-]{1,}$/\\\" required ng-class=\\\"{ 'is-invalid' : exportGroupForm.requestedFileName.$invalid }\\\"> <p ng-show=\\\"exportGroupForm.requestedFileName.$invalid\\\" class=\\\"invalid-feedback\\\"> A valid file name is required, allowed characters: [a-zA-Z1-9_ .-]</p> </div> </div> </form> </div> <div class=\\\"modal-footer\\\"> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"exportGroup()\\\" ng-disabled=\\\"exportGroupForm.$invalid\\\">Export</button> <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" ng-click=\\\"$dismiss('cancelled by user')\\\">Cancel</button> </div> </div>\";\n// Exports\nvar _module_exports = code;;\nvar path = '/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-classifications/views/modals/export-modal.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","console.log('init: bootstrap-js'); // eslint-disable-line no-console\n\nconst jQuery = require('vendor/jquery-js');\nrequire('vendor/moment-js');\nrequire('bootstrap/dist/js/bootstrap');\n\nmodule.exports = jQuery;\n","const MODULE_NAME = 'onms.elementList';\n\n/**\n * ISO-8601 date format string.\n */\nwindow.ISO_8601_DATE_FORMAT = 'yyyy-MM-ddTHH:mm:ss.sssZ';\nwindow.ISO_8601_DATE_FORMAT_WITHOUT_MILLIS = 'yyyy-MM-ddTHH:mm:ssZ';\n\nconst angular = require('vendor/angular-js');\nconst jQuery = require('vendor/jquery-js');\nrequire('vendor/bootstrap-js');\n\nconst editInPlaceTemplate = require('../templates/angular-onms-elementList-editInPlace.html');\nconst editListInPlaceTemplate = require('../templates/angular-onms-elementList-editListInPlace.html');\nconst editMapInPlaceTemplate = require('../templates/angular-onms-elementList-editMapInPlace.html');\n\n/**\n * Function used to append an extra transformer to the default $http transforms.\n */\nconst appendTransform = (defaultTransform, transform) => {\n\tconst t = angular.isArray(defaultTransform) ? defaultTransform : [ defaultTransform ];\n\treturn t.concat(transform);\n};\n\n/**\n * Escape FIQL reserved characters by URL-encoding them. Reserved characters are:\n * <ul>\n * <li>!</li>\n * <li>$</li>\n * <li>'</li>\n * <li>(</li>\n * <li>)</li>\n * <li>*</li>\n * <li>+</li>\n * <li>,</li>\n * <li>;</li>\n * <li>=</li>\n * </ul>\n * @param value\n * @returns String with reserved characters URL-encoded\n */\nconst escapeSearchValue = (value) => {\n\tif (typeof value === 'string') {\n\t\t\treturn value\n\t\t\t\t\t.replace('!', '%21')\n\t\t\t\t\t.replace('$', '%24')\n\t\t\t\t\t.replace('\\'', '%27')\n\t\t\t\t\t.replace('(', '%28')\n\t\t\t\t\t.replace(')', '%29')\n\t\t\t\t\t// People are going to type this in as a wildcard, so I\n\t\t\t\t\t// guess they'll have to type in '%2A' if they want to\n\t\t\t\t\t// match an asterisk...\n\t\t\t\t\t//.replace('*', '%2A')\n\t\t\t\t\t.replace('+', '%2B')\n\t\t\t\t\t.replace(',', '%2C')\n\t\t\t\t\t.replace(';', '%3B')\n\t\t\t\t\t.replace('=', '%3D');\n\t}\n\treturn value;\n};\n\n/**\n * Convert from a clause into a FIQL query string.\n */\nconst toFiql = (clauses) => {\n\tlet first = true;\n\tlet fiql = '';\n\tfor (let i = 0; i < clauses.length; i++) {\n\t\tif (!first) {\n\t\t\tfiql += ';';\n\t\t}\n\t\tfiql += clauses[i].property;\n\n\t\tswitch (clauses[i].operator) {\n\t\tcase 'EQ':\n\t\t\tfiql += '=='; break;\n\t\tcase 'NE':\n\t\t\tfiql += '!='; break;\n\t\tcase 'LT':\n\t\t\tfiql += '=lt='; break;\n\t\tcase 'LE':\n\t\t\tfiql += '=le='; break;\n\t\tcase 'GT':\n\t\t\tfiql += '=gt='; break;\n\t\tcase 'GE':\n\t\t\tfiql += '=ge='; break;\n\t\tdefault:\n\t\t\t// otherwise, do nothing\n\t\t\tbreak;\n\t\t}\n\n\t\tfiql += escapeSearchValue(clauses[i].value);\n\n\t\tfirst = false;\n\t}\n\treturn fiql;\n};\n\n/**\n * Convert from a FIQL query string into separate clause objects.\n * This only works for simple queries composed of multiple AND (';')\n * clauses.\n * \n * TODO: Expand this to cover more FIQL syntax\n */\nconst fromFiql = (fiql) => {\n\tlet statements = fiql.split(';');\n\tlet segments = [];\n\tlet clauses = [];\n\tfor (let i = 0; i < statements.length; i++) {\n\t\tif (statements[i].indexOf('==') > 0) {\n\t\t\tsegments = statements[i].split('==');\n\t\t\tclauses.push({\n\t\t\t\tproperty: segments[0],\n\t\t\t\toperator: 'EQ',\n\t\t\t\tvalue: segments[1]\n\t\t\t});\n\t\t} else if (statements[i].indexOf('!=') > 0) {\n\t\t\tsegments = statements[i].split('!=');\n\t\t\tclauses.push({\n\t\t\t\tproperty: segments[0],\n\t\t\t\toperator: 'NE',\n\t\t\t\tvalue: segments[1]\n\t\t\t});\n\t\t} else if (statements[i].indexOf('=lt=') > 0) {\n\t\t\tsegments = statements[i].split('=lt=');\n\t\t\tclauses.push({\n\t\t\t\tproperty: segments[0],\n\t\t\t\toperator: 'LT',\n\t\t\t\tvalue: segments[1]\n\t\t\t});\n\t\t} else if (statements[i].indexOf('=le=') > 0) {\n\t\t\tsegments = statements[i].split('=le=');\n\t\t\tclauses.push({\n\t\t\t\tproperty: segments[0],\n\t\t\t\toperator: 'LE',\n\t\t\t\tvalue: segments[1]\n\t\t\t});\n\t\t} else if (statements[i].indexOf('=gt=') > 0) {\n\t\t\tsegments = statements[i].split('=gt=');\n\t\t\tclauses.push({\n\t\t\t\tproperty: segments[0],\n\t\t\t\toperator: 'GT',\n\t\t\t\tvalue: segments[1]\n\t\t\t});\n\t\t} else if (statements[i].indexOf('=ge=') > 0) {\n\t\t\tsegments = statements[i].split('=ge=');\n\t\t\tclauses.push({\n\t\t\t\tproperty: segments[0],\n\t\t\t\toperator: 'GE',\n\t\t\t\tvalue: segments[1]\n\t\t\t});\n\t\t}\n\t}\n\treturn clauses;\n};\n\n\n/**\n * Parse an HTTP Content-Range header into the start, end, and total fields.\n * The header should be in a format like: \"items 0-14/28\".\n * \n * @param contentRange String from the Content-Range header\n */\nconst parseContentRange = (contentRange) => {\n\tif (!contentRange) {\n\t\treturn {start: 0, end: 0, total: 0};\n\t}\n\t// Example: items 0-14/28\n\tconst pattern = /items\\s+?(\\d+)\\s*-\\s*(\\d+)\\s*\\/\\s*(\\d+)/;\n\treturn {\n\t\tstart: Number(contentRange.replace(pattern, '$1')),\n\t\tend: Number(contentRange.replace(pattern, '$2')),\n\t\ttotal: Number(contentRange.replace(pattern, '$3'))\n\t};\n};\n\nconst normalizeOffset = (offset, maxOffset, limit) => {\n\tlet newOffset = offset;\n\n\t// Offset of the last page\n\tlet lastPageOffset;\n\tif (maxOffset < 0) {\n\t\tnewOffset = 0;\n\t\tlastPageOffset = 0;\n\t} else {\n\t\tlastPageOffset = Math.floor(maxOffset / limit) * limit; \n\t}\n\n\t// Bounds checking\n\tnewOffset = ((newOffset < 0) ? 0 : newOffset);\n\tnewOffset = ((newOffset > lastPageOffset) ? lastPageOffset : newOffset);\n\n\t// Make sure that offset is a multiple of limit\n\tnewOffset = Math.floor(newOffset / limit) * limit;\n\n\treturn newOffset;\n};\n\n/* // BMR: this doesn't seem to actually be used anywhere\nString.prototype.endsWith = function(suffix) {\n\treturn this.indexOf(suffix, this.length - suffix.length) !== -1;\n};\n*/\n\n// $filters that can be used to create human-readable versions of filter values\nangular.module('onmsListFilters', [])\n.filter('operator', function() {\n\treturn function(input, value) {\n\t\t// See if the string contains a wildcard\n\t\tvar fuzzy = (typeof value === 'string' && value.indexOf('*') > -1);\n\n\t\tswitch (input) {\n\t\tcase 'EQ':\n\t\t\treturn fuzzy ? 'is like' : 'equals';\n\t\tcase 'NE':\n\t\t\treturn fuzzy ? 'is not like' : 'does not equal';\n\t\tcase 'LT':\n\t\t\treturn 'is less than';\n\t\tcase 'LE':\n\t\t\treturn 'is less than or equal';\n\t\tcase 'GT':\n\t\t\treturn 'is greater than';\n\t\tcase 'GE':\n\t\t\treturn 'is greater than or equal';\n\t\tdefault:\n\t\t\t// If no match, return the input\n\t\t\treturn input;\n\t\t}\n\t}\n})\n.filter('isNotEmpty', function() {\n\treturn function(input) {\n\t\treturn input &&\n\t\t\t(typeof input === 'string' ? input.trim() !== '' : true);\n\t}\n})\n;\n\n// List module\nangular.module(MODULE_NAME, [])\n\n.config(/* @ngInject */ function($locationProvider) {\n\t$locationProvider.hashPrefix('');\n\t$locationProvider.html5Mode({\n\t\t// Use HTML5 \n\t\tenabled: true,\n\t\t// Don't rewrite all <a> links on the page\n\t\trewriteLinks: false\n\t});\n})\n\n.directive('onmsListEditInPlace', /* @ngInject */ function() {\n\treturn {\n\t\tcontroller: function($scope) {\n\t\t\t$scope.editing = false;\n\t\t\t$scope.originalValue = angular.copy($scope.value);\n\n\t\t\t// Start editing the value\n\t\t\t$scope.edit = function() {\n\t\t\t\t$scope.editing = true;\n\t\t\t}\n\n\t\t\t// Stop editing the value\n\t\t\t$scope.unedit = function() {\n\t\t\t\t$scope.editing = false;\n\t\t\t}\n\n\t\t\t$scope.onKeyup = function($event) {\n\t\t\t\t// If the user types ESC, then abort the edit\n\t\t\t\tif($event.keyCode === 27) {\n\t\t\t\t\t$scope.cancel();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$scope.submit = function() {\n\t\t\t\t$scope.onSubmit();\n\t\t\t\t// TODO: Handle update failures\n\t\t\t\t// Now that we've save a new value, use it as the original value\n\t\t\t\t$scope.originalValue = $scope.value;\n\t\t\t\t// Switch out of edit mode\n\t\t\t\t$scope.unedit();\n\t\t\t}\n\n\t\t\t$scope.cancel = function() {\n\t\t\t\t// Restore the original value\n\t\t\t\t$scope.value = $scope.originalValue;\n\t\t\t\t// Switch out of edit mode\n\t\t\t\t$scope.unedit();\n\t\t\t}\n\t\t},\n\t\t// Use an isolated scope\n\t\tscope: {\n\t\t\titem: '=',\n\t\t\tvalue: '=',\n\t\t\tvalueType: '=',\n\t\t\t// Optional step attribute for number fields\n\t\t\tstep: '=',\n\t\t\tonSubmit: '&onSubmit'\n\t\t},\n\t\ttemplateUrl: editInPlaceTemplate,\n\t\ttransclude: true\n\t};\n})\n\n.directive('onmsListEditListInPlace', /* @ngInject */ function($window) {\n\treturn {\n\t\tcontroller: function($scope) {\n\t\t\t$scope.editing = false;\n\n\t\t\t// Start editing the value\n\t\t\t$scope.edit = function() {\n\t\t\t\t$scope.editing = true;\n\t\t\t}\n\n\t\t\t// Stop editing the value\n\t\t\t$scope.unedit = function() {\n\t\t\t\t// Undo any edits\n\t\t\t\t$scope.newValue = null;\n\t\t\t\t$scope.editing = false;\n\t\t\t}\n\n\t\t\t$scope.onKeyup = function(event) {\n\t\t\t\tswitch(event.keyCode) {\n\t\t\t\t// If the user types Enter, then submit the edit\n\t\t\t\tcase 13: $scope.add($scope.values, $scope.newValue); break;\n\t\t\t\t// If the user types ESC, then abort the edit\n\t\t\t\tcase 27: $scope.unedit(); break;\n\t\t\t\t// otherwise, do nothing\n\t\t\t\tdefault: break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$scope.confirmAndRemove = function(items, item) {\n\t\t\t\t// Splice the value out of the array\n\t\t\t\tif ($window.confirm('Are you sure you want to remove \"' + item + '\"?')) {\n\t\t\t\t\titems.splice(items.indexOf(item), 1);\n\t\t\t\t\t$scope.onEdit();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$scope.add = function(items, item) {\n\t\t\t\titems.push(item);\n\t\t\t\titems.sort();\n\t\t\t\t// TODO: Handle update failures\n\t\t\t\t$scope.onEdit();\n\t\t\t\t// Switch out of edit mode\n\t\t\t\t$scope.unedit();\n\t\t\t}\n\t\t},\n\t\t// Use an isolated scope\n\t\tscope: {\n\t\t\tvalues: '=',\n\t\t\tvalueType: '=',\n\t\t\t// Optional step attribute for number fields\n\t\t\tstep: '=',\n\t\t\tonEdit: '&onEdit'\n\t\t},\n\t\ttemplateUrl: editListInPlaceTemplate,\n\t\ttransclude: true\n\t};\n})\n\n.directive('onmsListEditMapInPlace', /* @ngInject */ function($window) {\n\treturn {\n\t\tcontroller: function($scope) {\n\t\t\t$scope.editing = false;\n\n\t\t\t// Start editing the value\n\t\t\t$scope.edit = function() {\n\t\t\t\t$scope.editing = true;\n\t\t\t}\n\n\t\t\t// Stop editing the value\n\t\t\t$scope.unedit = function() {\n\t\t\t\t// Undo any edits\n\t\t\t\t$scope.newKey = null;\n\t\t\t\t$scope.newValue = null;\n\t\t\t\t$scope.editing = false;\n\t\t\t}\n\n\t\t\t$scope.onKeyup = function(event) {\n\t\t\t\tswitch(event.keyCode) {\n\t\t\t\t// If the user types Enter, then submit the edit\n\t\t\t\tcase 13: $scope.add($scope.values, $scope.newKey, $scope.newValue); break;\n\t\t\t\t// If the user types ESC, then abort the edit\n\t\t\t\tcase 27: $scope.unedit(); break;\n\t\t\t\t// otherwise, do nothing\n\t\t\t\tdefault: break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$scope.confirmAndRemove = function(items, key) {\n\t\t\t\t// Splice the value out of the array\n\t\t\t\tif ($window.confirm('Are you sure you want to remove \"' + key + '\"?')) {\n\t\t\t\t\tdelete items[key];\n\t\t\t\t\t$scope.onEdit();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$scope.add = function(items, key, value) {\n\t\t\t\titems[key] = value;\n\t\t\t\t// TODO: Handle update failures\n\t\t\t\t$scope.onEdit();\n\t\t\t\t// Switch out of edit mode\n\t\t\t\t$scope.unedit();\n\t\t\t}\n\t\t},\n\t\t// Use an isolated scope\n\t\tscope: {\n\t\t\tvalues: '=',\n\t\t\tkeyType: '=',\n\t\t\tvalueType: '=',\n\t\t\t// Optional step attribute for number fields\n\t\t\tstep: '=',\n\t\t\tonEdit: '&onEdit'\n\t\t},\n\t\ttemplateUrl: editMapInPlaceTemplate,\n\t\ttransclude: true\n\t};\n})\n\n/**\n * Generic list controller\n */\n.controller('ListCtrl', ['$scope', '$location', '$window', '$log', '$filter', function($scope, $location, $window, $log, $filter) {\n\t$log.debug('ListCtrl initializing...');\n\n\t$scope.defaults = {\n\t\t_s: '',\n\t\tsearchClauses: [],\n\t\tlimit: 20,\n\t\toffset: 0,\n\t\torderBy: '',\n\t\torder: 'asc'\n\t}\n\n\tvar initialLimit = typeof $location.search().limit === 'undefined' ? $scope.defaults.limit : (Number($location.search().limit) > 0 ? Number($location.search().limit) : $scope.defaults.limit);\n\n\t// Restore any query parameters that you can from the \n\t// query string, blank out the rest\n\t$scope.query = {\n\t\tlastOffset: 0,\n\t\tmaxOffset: 0,\n\n\t\tsearchParam: typeof $location.search()._s === 'undefined' ? $scope.defaults._s : $location.search()._s,\n\t\tsearchClauses: typeof $location.search()._s === 'undefined' ? $scope.defaults.searchClauses : fromFiql($location.search()._s),\n\t\tlimit: initialLimit,\n\t\tnewLimit: initialLimit,\n\t\toffset: typeof $location.search().offset === 'undefined' ? $scope.defaults.offset : (Number($location.search().offset) > 0 ? normalizeOffset(Number($location.search().offset), Number.MAX_VALUE, initialLimit) : $scope.defaults.offset),\n\n\t\t// TODO: Validate that the orderBy is in a list of supported properties\n\t\torderBy: typeof $location.search().orderBy === 'undefined' ? $scope.defaults.orderBy : $location.search().orderBy,\n\t\torder: typeof $location.search().order === 'undefined' ? $scope.defaults.order : ($location.search().order === 'asc' ? 'asc' : 'desc')\n\t};\n\n\t// Sync the query hash with the $location query string\n\t$scope.$watch('query', function() {\n\t\tvar queryParams = angular.copy($scope.query);\n\n\t\t// Delete derived values that we don't need in the query string\n\t\tdelete queryParams.searchClauses;\n\t\tdelete queryParams.newLimit;\n\t\tdelete queryParams.lastOffset;\n\t\tdelete queryParams.maxOffset;\n\n\t\t// Rename searchParam to _s\n\t\tqueryParams._s = (queryParams.searchParam === '' ? null : queryParams.searchParam);\n\t\tdelete queryParams.searchParam;\n\n\t\t// Delete any parameters that have default or blank values\n\t\tif (queryParams.limit === $scope.defaults.limit || queryParams.limit === '') { delete queryParams.limit; }\n\t\tif (queryParams.offset === $scope.defaults.offset || queryParams.offset === '') { delete queryParams.offset; }\n\t\tif (queryParams.orderBy === $scope.defaults.orderBy || queryParams.orderBy === '') { delete queryParams.orderBy; }\n\t\tif (queryParams.order === $scope.defaults.order || queryParams.order === '') { delete queryParams.order; }\n\t\tif (queryParams._s === $scope.defaults._s || queryParams._s === '') { delete queryParams._s; }\n\n\t\t$location.search(queryParams);\n\t}, \n\ttrue // Use object equality because the reference doesn't change\n\t);\n\n\t// Add the search clause to the list of clauses\n\t$scope.addSearchClause = function(clause) {\n\t\tif(angular.isDate(clause.value)) {\n\t\t\t// Returns a value in yyyy-MM-ddTHH:mm:ss.sssZ format\n\t\t\t// Unfortunately, I don't think CXF will like this because\n\t\t\t// it includes the millisecond portion of the date.\n\t\t\t//clause.value = new Date(clause.value).toISOString();\n\n\t\t\tclause.value = $filter('date')(new Date(clause.value), ISO_8601_DATE_FORMAT);\n\t\t}\n\n\t\t// Make sure the clause isn't already in the list of search clauses\n\t\tif ($scope.getSearchClause(clause)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO: Add validation?\n\t\t$scope.query.searchClauses.push(angular.copy(clause));\n\t\t$scope.query.searchParam = toFiql($scope.query.searchClauses);\n\t\t$scope.refresh();\n\t}\n\n\t$scope.getSearchClause = function(clause) {\n\t\tfor (var i = 0; i < $scope.query.searchClauses.length; i++) {\n\t\t\tif ($scope.clauseEquals(clause, $scope.query.searchClauses[i])) {\n\t\t\t\treturn $scope.query.searchClauses[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t$scope.clauseEquals = function(a, b) {\n\t\treturn a.property === b.property &&\n\t\t\ta.operator === b.operator &&\n\t\t\ta.value === b.value;\n\t}\n\n\t// Convert an epoch timestamp into String format before adding the search clause\n\t$scope.addEpochTimestampSearchClause = function(clause) {\n\t\tclause.value = $filter('date')(clause.value, ISO_8601_DATE_FORMAT);\n\t\t$scope.addSearchClause(clause);\n\t}\n\n\t// Remove a search clause from the list of clauses\n\t$scope.removeSearchClause = function(clause) {\n\t\t// TODO: Add validation?\n\t\t$scope.query.searchClauses.splice($scope.query.searchClauses.indexOf(clause), 1);\n\t\t$scope.query.searchParam = toFiql($scope.query.searchClauses);\n\t\t$scope.refresh();\n\t}\n\n\t$scope.removeSearchClauses = function(clauses) {\n\t\tfor (var i = 0; i < clauses.length; i++) {\n\t\t\tvar index = $scope.query.searchClauses.indexOf(clauses[i]);\n\t\t\tif (index >= 0) {\n\t\t\t\t$scope.query.searchClauses.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\t$scope.query.searchParam = toFiql($scope.query.searchClauses);\n\t\t$scope.refresh();\n\t}\n\n\t// Replace a search clause with a new clause\n\t$scope.replaceSearchClause = function(oldClause, newClause) {\n\t\tif(angular.isDate(newClause.value)) {\n\t\t\t// Returns a value in yyyy-MM-ddTHH:mm:ss.sssZ format\n\t\t\t// Unfortunately, I don't think CXF will like this because\n\t\t\t// it includes the millisecond portion of the date.\n\t\t\t//clause.value = new Date(clause.value).toISOString();\n\n\t\t\tnewClause.value = $filter('date')(new Date(newClause.value), ISO_8601_DATE_FORMAT);\n\t\t}\n\n\t\t// TODO: Add validation?\n\t\tvar scopeOldClause = $scope.getSearchClause(oldClause);\n\t\tvar scopeNewClause = $scope.getSearchClause(newClause);\n\t\tif (!scopeOldClause) {\n\t\t\tif (!scopeNewClause) {\n\t\t\t\t// If the old clause is not present, simply add the new clause\n\t\t\t\t$scope.addSearchClause(newClause);\n\t\t\t} else {\n\t\t\t\t// If the old clause is not present and the new clause is already\n\t\t\t\t// present, then do nothing\n\t\t\t}\n\t\t} else {\n\t\t\tif (!scopeNewClause) {\n\t\t\t\t// If the old clause is present and the new clause is not, replace\n\t\t\t\t// the values inside the old clause and then refresh\n\t\t\t\tscopeOldClause.property = newClause.property;\n\t\t\t\tscopeOldClause.operator = newClause.operator;\n\t\t\t\tscopeOldClause.value = newClause.value;\n\n\t\t\t\t$scope.query.searchParam = toFiql($scope.query.searchClauses);\n\t\t\t\t$scope.refresh();\n\t\t\t} else {\n\t\t\t\t// If the old clause is present and the new clause is present,\n\t\t\t\t// then just remove the old clause (as if it had been replaced by\n\t\t\t\t// the already-existing new clause)\n\t\t\t\t$scope.removeSearchClause(oldClause);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Clear the current search\n\t$scope.clearSearch = function() {\n\t\tif ($scope.query.searchClauses.length > 0) {\n\t\t\t$scope.query.searchClauses = [];\n\t\t\t$scope.query.searchParam = '';\n\t\t\t$scope.refresh();\n\t\t}\n\t}\n\n\t// Change the sorting of the table\n\t$scope.changeOrderBy = function(property) {\n\t\tif ($scope.query.orderBy === property) {\n\t\t\t// TODO: Figure out if we should reset limit/offset here also\n\t\t\t// If the property is already selected then reverse the sorting\n\t\t\t$scope.query.order = ($scope.query.order === 'asc' ? 'desc' : 'asc');\n\t\t} else {\n\t\t\t// TODO: Figure out if we should reset limit/offset here also\n\t\t\t$scope.query.orderBy = property;\n\t\t\t$scope.query.order = $scope.defaults.order;\n\t\t}\n\t\t$scope.refresh();\n\t}\n\n\t$scope.setOffset = function(offset) {\n\t\tconst o = normalizeOffset(offset, $scope.query.maxOffset, $scope.query.limit);\n\n\t\tif ($scope.query.offset !== o) {\n\t\t\t$scope.query.offset = o;\n\t\t\t$scope.refresh();\n\t\t}\n\t}\n\n\t$scope.setLimit = function(limit) {\n\t\tif (limit < 1) {\n\t\t\t$scope.query.newLimit = $scope.query.limit;\n\t\t\t// TODO: Throw a validation error\n\t\t\treturn;\n\t\t}\n\t\tif ($scope.query.limit !== limit) {\n\t\t\t$scope.query.limit = limit;\n\t\t\t$scope.query.offset = normalizeOffset($scope.query.offset, $scope.query.maxOffset, $scope.query.limit);\n\t\t\t$scope.refresh();\n\t\t}\n\t}\n\n\t// Override this to implement updates to an object\n\t$scope.refresh = function() {\n\t\t$log.warn('You need to override $scope.$parent.refresh() in your controller');\n\t}\n\n\t// Override this to implement updates to an object\n\t$scope.update = function() {\n\t\t$log.warn('You need to override $scope.$parent.update() in your controller');\n\t}\n\n\t// Override this to implement deletions\n\t$scope.deleteItem = function(item) {\n\t\t$log.warn('You need to override $scope.$parent.deleteItem() in your controller');\n\t}\n\n\t$log.debug('ListCtrl initialized');\n}])\n\n.run(['$rootScope', '$log', function($rootScope, $log) {\n\t$log.debug('Finished initializing ' + MODULE_NAME);\n}])\n\n;\n\n/*\nangular.element(document).ready(function() {\n\tconsole.log('Bootstrapping ' + MODULE_NAME);\n\tangular.bootstrap(document, [MODULE_NAME]);\n});\n*/\n\nmodule.exports = {\n\tappendTransform: appendTransform,\n\ttoFiql: toFiql,\n\tfromFiql: fromFiql,\n\tparseContentRange: parseContentRange,\n\tescapeSearchValue: escapeSearchValue,\n\tnormalizeOffset: normalizeOffset\n};\n","// Module\nvar code = \"<form class=\\\"form-inline\\\" ng-submit=\\\"submit()\\\" style=\\\"margin:0\\\"> <input ng-show=\\\"editing\\\" ng-keyup=\\\"onKeyup($event)\\\" type=\\\"{{valueType}}\\\" step=\\\"{{step}}\\\" ng-model=\\\"value\\\"> <span style=\\\"line-height:24px\\\" ng-hide=\\\"editing\\\" ng-click=\\\"edit()\\\">{{value}}&nbsp;</span> <a href style=\\\"text-decoration:none\\\" ng-click=\\\"edit()\\\" ng-hide=\\\"editing\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a> <a href style=\\\"text-decoration:none\\\" ng-click=\\\"submit()\\\" ng-show=\\\"editing\\\"><i class=\\\"fa fa-check fa-lg\\\"></i></a> <a href style=\\\"text-decoration:none\\\" ng-click=\\\"cancel()\\\" ng-show=\\\"editing\\\"><i class=\\\"fa fa-close fa-lg\\\"></i></a> <span ng-transclude></span> </form> \";\n// Exports\nvar _module_exports = code;;\nvar path = '/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-elementList/templates/angular-onms-elementList-editInPlace.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<span> <span ng-repeat=\\\"value in values\\\"> <button class=\\\"btn btn-sm btn-secondary\\\" ng-click=\\\"confirmAndRemove(values, value)\\\" style=\\\"margin-bottom:3px;margin-right:3px\\\"> {{value}}&nbsp;<i class=\\\"fa fa-close\\\"></i> </button> </span> <span style=\\\"line-height:24px\\\" ng-hide=\\\"editing\\\"> <a href style=\\\"text-decoration:none\\\" ng-click=\\\"edit()\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>&nbsp; </span> <span ng-show=\\\"editing\\\" class=\\\"text-nowrap\\\"> <input type=\\\"{{valueType}}\\\" ng-keyup=\\\"onKeyup($event)\\\" ng-model=\\\"newValue\\\"> <a href style=\\\"text-decoration:none\\\" ng-click=\\\"add(values, newValue)\\\"><i class=\\\"fa fa-plus fa-lg\\\"></i></a> <a href style=\\\"text-decoration:none\\\" ng-click=\\\"unedit()\\\"><i class=\\\"fa fa-close fa-lg\\\"></i></a> </span> <span ng-transclude></span> </span>\";\n// Exports\nvar _module_exports = code;;\nvar path = '/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-elementList/templates/angular-onms-elementList-editListInPlace.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<span> <span ng-repeat=\\\"(key,value) in values\\\"> <button class=\\\"btn btn-sm btn-secondary\\\" ng-click=\\\"confirmAndRemove(values, key)\\\" style=\\\"margin-bottom:3px;margin-right:3px\\\"> <b>{{key}}:</b> {{value}}&nbsp;<i class=\\\"fa fa-close\\\"></i> </button> </span> <span style=\\\"line-height:24px\\\" ng-hide=\\\"editing\\\"> <a href style=\\\"text-decoration:none\\\" ng-click=\\\"edit()\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>&nbsp; </span> <span ng-show=\\\"editing\\\" class=\\\"text-nowrap\\\"> <input type=\\\"{{keyType}}\\\" ng-keyup=\\\"onKeyup($event)\\\" ng-model=\\\"newKey\\\"> <input type=\\\"{{valueType}}\\\" ng-keyup=\\\"onKeyup($event)\\\" ng-model=\\\"newValue\\\"> <a href style=\\\"text-decoration:none\\\" ng-click=\\\"add(values, newKey, newValue)\\\"><i class=\\\"fa fa-plus fa-lg\\\"></i></a> <a href style=\\\"text-decoration:none\\\" ng-click=\\\"unedit()\\\"><i class=\\\"fa fa-close fa-lg\\\"></i></a> </span> <span ng-transclude></span> </span>\";\n// Exports\nvar _module_exports = code;;\nvar path = '/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-elementList/templates/angular-onms-elementList-editMapInPlace.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","const angular = require('vendor/angular-js');\nconst paginationTemplate = require('./pagination-toolbar.html');\n\nconst MODULE_NAME = 'onms.pagination';\n\nangular.module(MODULE_NAME, [ 'ui.bootstrap' ])\n    .directive('pagination', function() {\n        return {\n            restrict: 'E',\n            scope: {\n                model: '=model',\n                position: '@position',\n                onChangeCallback: '=onChange'\n            },\n            link: function(scope, element, attrs) {\n                if (scope.model === undefined) { throw new Error('No model defined.'); }\n                if (scope.model.page === undefined) { throw new Error('No attribute model.page defined'); }\n                if (scope.model.totalItems === undefined) { throw new Error('No attribute model.totalItems defined'); }\n                if (scope.model.limit === undefined) { throw new Error('No attribute model.limit defined'); }\n\n                var currentPage = scope.model.page;\n                scope.onChange = function() {\n                    if (currentPage !== scope.model.page) {\n                        currentPage = scope.model.page;\n                        if (scope.onChangeCallback) {\n                            scope.onChangeCallback();\n                        }\n                    }\n                };\n            },\n            transclude: true,\n            templateUrl: paginationTemplate\n        }\n    });\n","// Module\nvar code = \"<div> <div ng-transclude ng-if=\\\"position === 'bottom'\\\"></div> <div class=\\\"row\\\"> <div class=\\\"col-md-4 col-lg-6 col-sm-12\\\" ng-show=\\\"(model.totalItems / model.limit) > 1\\\"> <div style=\\\"margin:0\\\" uib-pagination ng-model=\\\"model.page\\\" total-items=\\\"model.totalItems\\\" items-per-page=\\\"model.limit\\\" rotate=\\\"true\\\" boundary-links=\\\"true\\\" max-size=\\\"5\\\" boundary-link-numbers=\\\"true\\\" ng-change=\\\"onChange()\\\"> </div> </div> <div class=\\\"col-md-8 col-lg-6 col-sm-12 mt-4\\\"> <pre class=\\\"pull-right\\\" ng-show=\\\"model.totalItems == 0\\\">No items found.</pre> <pre class=\\\"pull-right\\\" ng-show=\\\"model.totalItems > 0\\\">{{model.totalItems / model.page === 1\\n            ? \\\"Item \\\" + (model.offset + 1)\\n            : \\\"Items \\\" + ((model.page - 1) * model.limit + 1) + \\\" - \\\" + (model.page * model.limit &gt; model.totalItems ? model.totalItems : model.page * model.limit)}} ({{model.totalItems}} total)</pre> </div> </div> <div ng-transclude ng-if=\\\"position === 'top' || position === undefined\\\"></div> </div>\";\n// Exports\nvar _module_exports = code;;\nvar path = '/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/lib/onms-pagination/pagination-toolbar.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<span> <div class=\\\"modal-header\\\"> <h3><i class=\\\"fa fa-exclamation-triangle text-warning\\\"></i> Permission Denied</h3> </div> <div class=\\\"modal-body\\\"> <h5> You are not allowed to perform the requested action. </h5> <p class=\\\"text-muted\\\"> This is not supposed to happen. Please reload the page and contact your administrator if this occurs more often. </p> </div> <div class=\\\"modal-footer\\\"> <button class=\\\"btn btn-primary\\\" ng-click=\\\"reload()\\\">Reload</button> </div> </span>\";\n// Exports\nvar _module_exports = code;;\nvar path = '/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/lib/onms-http/403-permission-denied.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","export default class Util {\n\tstatic getBaseHref() {\n\t\tconst base = document.getElementsByTagName('base')[0];\n\t\tif (base) {\n\t\t\treturn base.href;\n\t\t}\n\t\treturn '';\n\t}\n\tstatic setLocation(url) {\n\t\tif (window && window.location) {\n\t\t\twindow.location.href = Util.getBaseHref() + url;\n\t\t}\n\t}\n\tstatic toggle(booleanValue, elementName) {\n\t\tvar checkboxes = document.getElementsByName(elementName);\n\t\tfor (var index in checkboxes) {\n\t\t\tif (checkboxes.hasOwnProperty(index)) {\n\t\t\t\tcheckboxes[index].checked = booleanValue;\n\t\t\t}\n\t\t}\n\t}\n}","// Module\nvar code = \"<div class=\\\"popover px-2 py-2\\\" ng-class=\\\"[vm.$attrs.placement || vm.defaults.placement, 'bs-popover-' + (vm.$attrs.placement || vm.defaults.placement), vm.$attrs.popoverClass || vm.defaults.popoverClass, {fade: vm.animation}]\\\"> <div class=\\\"popover-arrow arrow\\\" style=\\\"top:50px\\\"></div> <h3 class=\\\"popover-title\\\" ng-bind-html=\\\"vm.$attrs.title\\\"></h3> <div class=\\\"popover-content\\\"> <p ng-bind-html=\\\"vm.$attrs.message\\\"></p> <div class=\\\"row\\\"> <div class=\\\"col-sm-6\\\" ng-if=\\\"!vm.$attrs.hideConfirmButton && !vm.defaults.hideConfirmButton\\\" ng-class=\\\"{'col-sm-offset-3': vm.$attrs.hideCancelButton || vm.defaults.hideCancelButton}\\\"> <button class=\\\"btn btn-block confirm-button\\\" ng-class=\\\"'btn-' + (vm.$attrs.confirmButtonType || vm.defaults.confirmButtonType)\\\" ng-click=\\\"vm.onConfirm(); vm.hidePopover()\\\" ng-bind-html=\\\"vm.$attrs.confirmText || vm.defaults.confirmText\\\"> </button> </div> <div class=\\\"col-sm-6\\\" ng-if=\\\"!vm.$attrs.hideCancelButton && !vm.defaults.hideCancelButton\\\" ng-class=\\\"{'col-sm-offset-3': vm.$attrs.hideConfirmButton || vm.defaults.hideConfirmButton}\\\"> <button class=\\\"btn btn-block cancel-button\\\" ng-class=\\\"'btn-' + (vm.$attrs.cancelButtonType || vm.defaults.cancelButtonType)\\\" ng-click=\\\"vm.onCancel(); vm.hidePopover()\\\" ng-bind-html=\\\"vm.$attrs.cancelText || vm.defaults.cancelText\\\"> </button> </div> </div> </div> </div> \";\n// Exports\nvar _module_exports = code;;\nvar path = '/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-classifications/views/modals/popover.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","/* Load jQuery first, so Angular finds it */\nrequire('./jquery-js');\n\n/* Angular Core */\nconst angular = require('angular');\nrequire('angular-animate');\nrequire('angular-cookies');\nrequire('angular-route');\nrequire('angular-resource');\nrequire('angular-sanitize');\n\n/* 3rd-Party Modules */\nrequire('angular-growl-v2');\nrequire('angular-loading-bar');\n\nrequire('angular-growl-v2/build/angular-growl.css');\nrequire('angular-loading-bar/build/loading-bar.css');\n\n/* Bootstrap UI */\nrequire('vendor/bootstrap-js');\nrequire('angular-bootstrap-checkbox');\nrequire('ui-bootstrap4'); // angular-ui-boostrap for bootstrap 4\n\nconsole.log('init: angular-js ' + angular.version.full); // eslint-disable-line no-console\n\nmodule.exports = window['angular'] = angular;","/**\n* @author Alejandro Galue <agalue@opennms.org>\n* @copyright 2016-2022 The OpenNMS Group, Inc.\n*/\n\n'use strict';\n\nconst angular = require('vendor/angular-js');\nrequire('lib/onms-http');\n\nconst kscTemplate = require('./template.ksc.html');\nconst nodesTemplate = require('./template.nodes.html');\n\nimport Util from 'lib/util';\n\nangular.module('onms-search', [\n  'onms.http',\n  'ui.bootstrap'\n])\n\n.config(['$locationProvider', function($locationProvider) {\n  $locationProvider.hashPrefix('');\n}])\n\n.directive('onmsSearchNodes', function() {\n  return {\n    restrict: 'E',\n    transclude: true,\n    templateUrl: nodesTemplate,\n    controller: 'NodeSearchCtrl'\n  };\n})\n\n.directive('onmsSearchKsc', function() {\n  return {\n    restrict: 'E',\n    transclude: true,\n    templateUrl: kscTemplate,\n    controller: 'KscSearchCtrl'\n  };\n})\n\n.controller('NodeSearchCtrl', ['$scope', '$window', '$http', function($scope, $window, $http) {\n\n  $scope.getNodes = function(criteria) {\n    return $http({\n      url: 'rest/nodes',\n      method: 'GET',\n      params: { label: criteria, comparator: 'contains' }\n    }).then(function(response) {\n      return response.data.node;\n    });\n  };\n\n  $scope.goToChooseResources = function(node) {\n    $window.location.href = Util.getBaseHref() + 'graph/chooseresource.jsp?node=' + node.id;\n  }\n\n}])\n\n.controller('KscSearchCtrl', ['$scope', '$window', '$http', '$filter', function($scope, $window, $http, $filter) {\n\n  $scope.getKscReports = function(criteria) {\n    return $http({\n      url: 'rest/ksc',\n      method: 'GET'\n    }).then(function(response) {\n       return $filter('filter')(response.data.kscReport, criteria);\n    });\n  };\n\n  $scope.goToKscReport = function(ksc) {\n    $window.location.href = Util.getBaseHref() + 'KSC/customView.htm?type=custom&report=' + ksc.id;\n  }\n\n}]);","// Module\nvar code = \"<div class=\\\"form-group\\\"> <div class=\\\"input-group\\\"> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"asyncKsc\\\" placeholder=\\\"Type the KSC report name\\\" uib-typeahead=\\\"ksc as ksc.label for ksc in getKscReports($viewValue)\\\" typeahead-editable=\\\"false\\\" typeahead-loading=\\\"kscLoadingNodes\\\" typeahead-no-results=\\\"kscNoResults\\\" typeahead-min-length=\\\"1\\\" typeahead-on-select=\\\"goToKscReport($item)\\\"> <div class=\\\"input-group-append\\\"> <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span> </div> </div> <i ng-show=\\\"kscLoadingNodes\\\" class=\\\"fa fa-refresh\\\"></i> <p class=\\\"form-text text-muted\\\" ng-show=\\\"kscNoResults\\\"> <i class=\\\"fa fa-remove\\\"></i> No Results Found </p> </div> \";\n// Exports\nvar _module_exports = code;;\nvar path = '/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/search/template.ksc.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","// Module\nvar code = \"<div class=\\\"form-group\\\"> <div class=\\\"input-group\\\"> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"asyncNode\\\" placeholder=\\\"Type the node label\\\" uib-typeahead=\\\"node as node.label for node in getNodes($viewValue)\\\" typeahead-editable=\\\"false\\\" typeahead-loading=\\\"nodeLoadingNodes\\\" typeahead-no-results=\\\"nodeNoResults\\\" typeahead-min-length=\\\"1\\\" typeahead-on-select=\\\"goToChooseResources($item)\\\"> <div class=\\\"input-group-append\\\"> <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span> </div> </div> <i ng-show=\\\"nodeLoadingNodes\\\" class=\\\"fa fa-refresh\\\"></i> <p class=\\\"form-text text-muted\\\" ng-show=\\\"nodeNoResults\\\"> <i class=\\\"fa fa-remove\\\"></i> No Results Found </p> </div> \";\n// Exports\nvar _module_exports = code;;\nvar path = '/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/search/template.nodes.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","const angular = require('vendor/angular-js');\nrequire('../../lib/onms-http');\nrequire('angular-bootstrap-toggle/dist/angular-bootstrap-toggle');\nrequire('angular-bootstrap-toggle/dist/angular-bootstrap-toggle.css');\nrequire('angular-ui-router');\n\nconst quickSearchTemplate  = require('./quicksearch.html');\n\nconst globalErrorHandling = function(scope, errorResponse) {\n    if (errorResponse.data) {\n        scope.error = errorResponse.data;\n    } else {\n        scope.error = \"An unexpected error occurred while handling the request\";\n    }\n};\n\n(function() {\n    'use strict';\n\n    var MODULE_NAME = 'onms.central.search';\n\n    angular.module(MODULE_NAME, [\n        'angular-loading-bar',\n        'ngResource',\n        'ui.router',\n        'onms.http',\n    ])\n        .config(['$locationProvider', function($locationProvider) {\n            $locationProvider.hashPrefix('');\n        }])\n\n        .directive('onmsCentralSearch', function() {\n            return {\n                restrict: 'E',\n                transclude: false,\n                templateUrl: quickSearchTemplate,\n                controller: 'QuickSearchController'\n            };\n        })\n        .factory('SearchResource', function($resource) {\n            return $resource('api/v2/search', {}, {\n                'query':      { method: 'GET', isArray: true, cancellable: true },\n            });\n        })\n        .controller('QuickSearchController', ['$scope', 'SearchResource', '$timeout', '$document', function($scope, SearchResource, $timeout, $document) {\n            var KeyCodes = {\n                ENTER: 13,\n                SHIFT: 16,\n                ESC: 27,\n                KEY_LEFT: 37,\n                KEY_UP: 38,\n                KEY_RIGHT: 39,\n                KEY_DOWN: 40,\n            };\n\n            var Types = {\n                Group: 'Group',\n                Item: 'Item',\n                More: 'More'\n            };\n\n            $scope.query = '';\n            $scope.results = {};\n            $scope.performSearchExecuted = false;\n            $scope.showLoadingIndicator = false;\n            $scope.showLoadingIndicatorDelay = 250;\n            $scope.performSearchDelay = 500; // in ms\n            $scope.performSearchPromise = undefined;\n            $scope.performSearchHandle = undefined;\n            $scope.showLoadingIndicatorPromise = undefined;\n            $scope.shiftLastPressed = undefined;\n            $scope.selectedIndex = 0;\n\n            $document.bind('mousedown', function(event) {\n                var isChild = $('#onms-search-form').has(event.target).length > 0;\n                var isSelf = $('#onms-search-form').is(event.target);\n                var isInside = isChild || isSelf;\n                if (!isInside) {\n                    $timeout(function() {\n                        $scope.resetQuery();\n                        $scope.cancelRequest();\n                    });\n                }\n            });\n\n            $document.bind('keyup', function(e) {\n                // Search Focus Field\n                $timeout(function() {\n                    if (e.keyCode === KeyCodes.SHIFT && new Date() - $scope.shiftLastPressed <= 350) {\n                        angular.element('#onms-search-query').focus();\n                        angular.element('#onms-search-query').select();\n                        $scope.shiftLastPressed = undefined;\n                    } else if(e.keyCode === KeyCodes.SHIFT) {\n                        $scope.shiftLastPressed = new Date();\n                    }\n\n                    // Reset Search\n                    if (e.keyCode === KeyCodes.ESC) {\n                        $scope.resetQuery();\n                        $scope.cancelRequest();\n                    }\n                });\n            });\n\n            $document.bind('keydown', function(e) {\n                $timeout(function() {\n                    if ($scope.results.length > 0) {\n                        var element = document.getElementById('onms-search-result-item-' + $scope.selectedIndex);\n                        if (e.keyCode === KeyCodes.KEY_UP || e.keyCode === KeyCodes.KEY_DOWN) {\n                            $scope.navigateSearchResult(e.keyCode);\n\n                            // Ideally we would use scrollToView(), but that will also scroll the body, which\n                            // results in the header scrolling down slightly, which looks weird when using the search\n                            // So instead scrolling is implemented manually\n                            var parentComponent = document.getElementById('onms-search-result');\n                            var parentHeight = parentComponent.clientHeight;\n                            var resultHeight = element.clientHeight;\n                            var resultOffset = element.offsetTop;\n                            var padding = 25;\n\n                            // Scroll down\n                            if (resultOffset + resultHeight + padding >= parentHeight + parentComponent.scrollTop) {\n                                parentComponent.scrollTop = resultOffset;\n                            }\n                            // Scroll up\n                            if (parentComponent.scrollTop !== 0\n                                && parentComponent.scrollTop > resultOffset - resultHeight) {\n                                parentComponent.scrollTop = resultOffset - resultHeight;\n                            }\n                        }\n                        if (e.keyCode === KeyCodes.ENTER) {\n                            if ($scope.results[$scope.selectedIndex].type === Types.More) {\n                                // Ensure next action is run in angular context\n                                // Do not use angular.$apply here, as it may fail on angular sites,\n                                // such as the requisition ui\n                                $timeout(function() {\n                                    angular.element(element).triggerHandler('click');\n                                }, 0);\n                            } else {\n                                $scope.resetQuery();\n                                $scope.cancelRequest();\n                                element.click();\n                            }\n                        }\n                    }\n                });\n            });\n\n            $scope.navigateSearchResult = function(keyCode) {\n                $scope.results[$scope.selectedIndex].selected = false;\n                switch(keyCode) {\n                    case KeyCodes.KEY_UP:\n                        $scope.selectedIndex--;\n                        break;\n                    case KeyCodes.KEY_DOWN:\n                        $scope.selectedIndex++;\n                        break;\n                    default:\n                        break;\n                }\n                if ($scope.selectedIndex < 1) {\n                    $scope.selectedIndex = 1;\n                }\n                if ($scope.selectedIndex >= $scope.results.length) {\n                    $scope.selectedIndex = $scope.results.length - 1;\n                }\n                if ($scope.results[$scope.selectedIndex].type === Types.Group) {\n                    $scope.navigateSearchResult(keyCode); // Skip group element\n                } else {\n                    $scope.results[$scope.selectedIndex].selected = true;\n                }\n            };\n\n            $scope.resetQuery = function() {\n                $scope.query = '';\n                $scope.results = [];\n                $scope.performSearchExecuted = false;\n                if ($scope.performSearchHandle) {\n                    $scope.performSearchHandle.$cancelRequest();\n                }\n            };\n\n            $scope.cancelRequest = function() {\n                if ($scope.performSearchHandle) {\n                    $scope.performSearchHandle.$cancelRequest();\n                }\n                $scope.showLoadingIndicator = false;\n                $timeout.cancel($scope.showLoadingIndicatorPromise);\n            };\n\n            // Ensure there is no difference between selected and mouseover\n            $scope.select = function(index) {\n                var selectIndex = index || 1;\n                if ($scope.selectedIndex >= 1) {\n                    $scope.results[$scope.selectedIndex].selected = false;\n                }\n                $scope.selectedIndex = selectIndex;\n                $scope.results[$scope.selectedIndex].selected = true;\n            };\n\n            $scope.onQueryChange = function() {\n                if ($scope.query.length == 0) {\n                    $scope.resetQuery();\n                    return;\n                }\n                if ($scope.query.length < 3) {\n                    return;\n                }\n\n                // Stop any previous loading\n                $timeout.cancel($scope.performSearchPromise);\n                $scope.results = [];\n                $scope.performSearchExecuted = false;\n\n                // Start timeout before actually searching, this will allow for not invoking when the user\n                // is still typing. Fiddle with $scope.loadingDelay to make it resolve faster\n                $scope.performSearchPromise = $timeout(function() {\n                    // Stop any previously started delay\n                    $timeout.cancel($scope.showLoadingIndicatorPromise);\n\n                    // Kick of loading indicator\n                    $scope.showLoadingIndicatorPromise = $timeout(function() {\n                        $scope.showLoadingIndicator = true;\n                    }, $scope.showLoadingIndicatorDelay);\n\n                    // Cancel any previous request\n                    if ($scope.performSearchHandle) {\n                        $scope.performSearchHandle.$cancelRequest();\n                    }\n\n                    // Kick of the search\n                    $scope.error = undefined;\n                    $scope.performSearchHandle = SearchResource.query({'_s' : $scope.query},\n                        function(data) {\n                            $scope.cancelRequest();\n                            $scope.performSearchExecuted = true;\n\n                            var results = [];\n                            data.forEach(function(eachResult) {\n                                // Create the header\n                                results.push({\n                                        context: eachResult.context.name,\n                                        // Make the label have an s at the end if it has multiple items\n                                        label: eachResult.results.length > 1 ? eachResult.context.name + 's' : eachResult.context.name,\n                                        type: Types.Group,\n                                        count: eachResult.results.length,\n                                        more: eachResult.more\n                                    }\n                                );\n\n                                eachResult.results.forEach(function(item) {\n                                    item.type = Types.Item;\n                                    results.push(item);\n                                });\n\n                                if (eachResult.more === true) {\n                                    var showMoreElement = {\n                                        context: eachResult.context.name,\n                                        count: eachResult.results.length,\n                                        type: Types.More,\n                                        loadMore: function() {\n                                            $scope.error = undefined;\n                                            SearchResource.query({'_s': $scope.query, '_l': this.count + 10, '_c' : this.context}, function(response) {\n                                                var endIndex = $scope.results.indexOf(showMoreElement);\n\n                                                // The result is context focused, so there is only one search result anyways\n                                                var searchResult = response[0];\n                                                var results = searchResult.results.slice(endIndex - 1); // Remove first elements, as they are already being showed\n                                                results.forEach(function(item, i) {\n                                                    // Add item\n                                                    item.type = Types.Item;\n                                                    $scope.results.splice(endIndex + i, 0, item);\n                                                    showMoreElement.count++;\n                                                });\n                                                // Toggle Selection\n                                                showMoreElement.selected = false;\n                                                $scope.results[$scope.selectedIndex].selected = true;\n\n                                                // Hide element\n                                                if (searchResult.more === false) {\n                                                    $scope.results.splice($scope.results.indexOf(showMoreElement), 1);\n                                                }\n                                            }, function(response) {\n                                                $scope.performSearchExecuted = true;\n                                                globalErrorHandling($scope, response);\n                                            });\n                                        },\n                                        selected: false\n                                    };\n                                    results.push(showMoreElement);\n                                }\n                            });\n                            $scope.results = results;\n                            if ($scope.results.length != 0) {\n                                $scope.selectedIndex = 1;\n                                $scope.results[$scope.selectedIndex].selected = true;\n                            }\n                        },\n                        function(response) {\n                            if (response.status >= 0) {\n                                $scope.performSearchExecuted = true;\n                                globalErrorHandling($scope, response);\n                                $scope.cancelRequest();\n                            } else {\n                                // Request cancelled\n                            }\n                        }\n                    );\n                }, $scope.performSearchDelay);\n            };\n        }])\n    ;\n}());\n","// Module\nvar code = \"<span> <style>.search-result{max-height:700px;min-width:280px;max-width:60%;position:absolute;top:100%;z-index:100000;overflow:auto;border:#343a40 solid 1px}.search-result .list-group-item{padding:.25rem .75rem;font-size:90%}.search-result .list-group-item:last-child{border-bottom-right-radius:0;border-bottom-left-radius:0}.search-bar .form-control{border:none;outline:0;box-shadow:none;border-radius:1rem;padding:0}.search-bar .input-group-text{border-top-left-radius:1rem;border-bottom-left-radius:1rem;background-color:#fff;border-color:#fff}.search-result .list-group-item:hover{background-color:#e9ecef}.selected{background-color:#e9ecef}</style> <form id=\\\"onms-search-form\\\" autocomplete=\\\"off\\\" novalidate class=\\\"form-inline\\\"> <input autocomplete=\\\"false\\\" name=\\\"hidden\\\" type=\\\"text\\\" style=\\\"display:none\\\"> <div class=\\\"input-group search-bar\\\"> <div class=\\\"input-group-prepend\\\"> <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></div> </div> <label class=\\\"form-control\\\"> <input id=\\\"onms-search-query\\\" ng-change=\\\"onQueryChange()\\\" ng-focus=\\\"input.focus=true\\\" ng-blur=\\\"input.focus=false\\\" ng-model=\\\"query\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" aria-label=\\\"Search\\\"> <small class=\\\"text-muted mr-4 quick-search-chevron\\\" ng-show=\\\"!input.focus\\\"> <span></span> <span></span> </small> </label> <div ng-if=\\\"showLoadingIndicator\\\" class=\\\"btn btn-secondary rounded-0\\\"> <div class=\\\"spinner-border spinner-border-sm text-white\\\" role=\\\"status\\\"></div> <span class=\\\"sr-only\\\">Loading...</span> </div> <div ng-if=\\\"performSearchExecuted === true && !showLoadingIndicator\\\" class=\\\"input-group-append\\\"> <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" title=\\\"Reset Search\\\" ng-click=\\\"resetQuery()\\\"><i class=\\\"fa fa-times\\\"></i></button> </div> <div ng-if=\\\"showLoadingIndicator\\\" class=\\\"input-group-append\\\"> <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" title=\\\"Cancel Request\\\" ng-click=\\\"cancelRequest()\\\"><i class=\\\"fa fa-times\\\"></i></button> </div> </div> <div ng-if=\\\"performSearchExecuted === true\\\" class=\\\"bg-dark search-result rounded-bottom\\\" id=\\\"onms-search-result\\\"> <div class=\\\"list-group\\\" ng-if=\\\"results.length > 0\\\"> <div id=\\\"onms-search-result-item-{{$index}}\\\" ng-repeat-start=\\\"item in results track by $index\\\" ng-if=\\\"item.type === 'Group'\\\" class=\\\"list-group-item bg-dark text-grey border-0 pl-2\\\"> <span ng-if=\\\"!item.t\\\">{{item.label}}</span> </div> <a id=\\\"onms-search-result-item-{{$index}}\\\" ng-class=\\\"{'selected': item.selected}\\\" ng-if=\\\"item.type === 'More'\\\" ng-click=\\\"item.loadMore()\\\" class=\\\"list-group-item list-group-item-action\\\" href ng-mouseover=\\\"select($index)\\\">more...</a> <a id=\\\"onms-search-result-item-{{$index}}\\\" ng-class=\\\"{'selected': item.selected}\\\" ng-repeat-end ng-if=\\\"item.type === 'Item'\\\" href=\\\"{{item.url}}\\\" class=\\\"list-group-item list-group-item-action\\\" ng-mouseover=\\\"select($index)\\\" ng-click=\\\"resetQuery()\\\"> <h6 class=\\\"mb-0\\\"><i class=\\\"{{item.icon}}\\\" ng-if=\\\"item.icon\\\">&nbsp;</i>{{item.label}} <i style=\\\"-webkit-transform:scaleY(-1);transform:scaleY(-1)\\\" class=\\\"fa fa-reply pull-right\\\" ng-if=\\\"item.selected\\\"></i></h6> <small class=\\\"mr-4\\\" ng-class=\\\"{'text-muted': !item.selected}\\\" ng-repeat=\\\"match in item.matches\\\">{{match.label}}: {{match.value}}</small> <br ng-if=\\\"item.info !== ''\\\"> <small class=\\\"mr-4\\\" ng-class=\\\"{'text-muted': !item.selected}\\\" ng-if=\\\"item.info !== ''\\\">{{item.info}}</small> </a> </div> <div ng-if=\\\"!error && results.length === 0\\\" class=\\\"text-grey\\\"> <span>No Results found</span> </div> <div ng-if=\\\"error\\\" class=\\\"alert alert-danger mx-2 my-2\\\"> <span>{{error}}</span> </div> </div> </form> </span> \";\n// Exports\nvar _module_exports = code;;\nvar path = '/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-central-search/quicksearch.html';\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, _module_exports) }]);\nmodule.exports = path;","console.log('init: jquery-js'); // eslint-disable-line no-console\n\nconst jQuery = require('jquery');\nrequire('jquery-migrate');\n\nmodule.exports = jQuery;\n","const angular = require('vendor/angular-js');\nconst search = require('apps/search');\nconst centralSearch = require('apps/onms-central-search');\n\nconst MODULE_NAME = 'onms.default.apps';\n\nangular.module(MODULE_NAME, [ 'onms.central.search', 'onms-search' ]);\n","console.log('init: moment-js'); // eslint-disable-line no-console\n\nconst moment = require('moment');\nrequire('moment-timezone');\nrequire('@rangerrick/moment-javaformat');\n\nmodule.exports = moment;","const angular = require('vendor/angular-js');\nconst elementList = require('../onms-elementList/lib/elementList');\nrequire('../../lib/onms-pagination');\nrequire('../../lib/onms-http');\nrequire('../onms-default-apps');\nrequire('angular-bootstrap-confirm');\nrequire('angular-bootstrap-toggle/dist/angular-bootstrap-toggle');\nrequire('angular-bootstrap-toggle/dist/angular-bootstrap-toggle.css');\nrequire('angular-ui-router');\nrequire('angular-ui-sortable');\n\nconst indexTemplate  = require('./views/index.html');\nconst configTemplate = require('./views/config.html');\nconst groupTemplate  = require('./views/group.html');\n\nconst newRuleModalTemplate = require('./views/modals/new-rule-modal.html');\nconst newGroupModalTemplate = require('./views/modals/new-group-modal.html');\nconst importModalTemplate  = require('./views/modals/import-modal.html');\nconst exportModalTemplate  = require('./views/modals/export-modal.html');\n\nconst confirmTopoverTemplate = require('./views/modals/popover.html');\n\nconst handleErrorResponse = function(response, $scope) {\n    if (response && response.data) {\n        var error = response.data;\n        $scope.error = {};\n        $scope.error[error.context] = error.message;\n    }\n};\n\n(function() {\n    'use strict';\n\n    var MODULE_NAME = 'onms.classifications';\n\n    angular.module(MODULE_NAME, [\n            'angular-loading-bar',\n            'ngResource',\n            'ui.router',\n            'ui.bootstrap',\n            'ui.checkbox',\n            'ui.toggle',\n            'ui.sortable',\n            'onms.http',\n            'onms.elementList',\n            'mwl.confirm',\n            'onms.pagination',\n            'onms.default.apps',\n        ])\n        .run(function(confirmationPopoverDefaults) {\n            confirmationPopoverDefaults.templateUrl = confirmTopoverTemplate;\n        })\n\n        .config( ['$locationProvider', function ($locationProvider) {\n            $locationProvider.hashPrefix('!');\n            $locationProvider.html5Mode(false);\n        }])\n        .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n            $stateProvider\n                .state('classifications', {\n                    url: '/classifications',\n                    controller: 'ClassificationController',\n                    templateUrl: indexTemplate\n                })\n                .state('classifications.config', {\n                    templateUrl: configTemplate,\n                    url: '/config',\n                    controller: 'ClassificationConfigController'\n                })\n                .state('classifications.group', {\n                    templateUrl: groupTemplate,\n                    url: '/:id',\n                    controller: 'ClassificationGroupController'\n                });\n            $urlRouterProvider.otherwise('classifications/config');\n        }])\n\n        .filter('capitalize', function() {\n            return function(input) {\n                return input ? input.charAt(0).toUpperCase() + input.substr(1).toLowerCase() : '';\n            }\n        })\n\n        .factory('ClassificationService', /* @ngInject */ function($resource) {\n            return $resource('rest/classifications/', {},\n                {\n                    'classify': { method: 'POST', url:'rest/classifications/classify'}\n                }\n            );\n        })\n        .factory('ClassificationGroupService', /* @ngInject */ function($resource) {\n            return $resource('rest/classifications/groups/:id', {id: '@id'},\n                {\n                    'get': {method: 'GET'},\n                    'update': {method: 'PUT'},\n                    'query': {method: 'GET', isArray: true},\n                    'delete': {method: 'DELETE'},\n                }\n            );\n        })\n        .factory('ClassificationRuleService', /* @ngInject */ function($resource) {\n            return $resource('rest/classifications/:id', {id: '@id'},\n                {\n                    'get': {method: 'GET'},\n                    'save': {method: 'POST'},\n                    'update': {method: 'PUT'},\n                    'query': {method: 'GET', isArray: true},\n                    'delete': {method: 'DELETE'}\n                }\n            );\n        })\n\n        .factory('ProtocolService', /* @ngInject */ function($resource) {\n            return $resource('rest/classifications/protocols');\n        })\n        .controller('ClassificationController', ['$scope', '$state', 'ClassificationService', 'ClassificationGroupService', 'ProtocolService', function($scope, $state, ClassificationService, ClassificationGroupService, ProtocolService) {\n            $scope.groups = [];\n            $scope.classificationRequest = {};\n            $scope.classificationResponse = undefined;\n            $scope.isClassificationCollapsed = true;\n            $scope.error = undefined;\n\n            $scope.classify = function (classificationRequest) {\n                ClassificationService.classify(classificationRequest, function (result) {\n                    $scope.classifyError = undefined;\n                    $scope.classificationResponse = result.classification === undefined ? 'No mapping found' : result.classification;\n                }, function (response) {\n                    $scope.classificationResponse = undefined;\n                    if (response.status === 400 && response.data && response.data.context && response.data.message) {\n                        $scope.classifyError = {};\n                        $scope.classifyError[response.data.context] = response.data.message;\n                    } else {\n                        $scope.classifyError['entity'] = 'Cannot perform the request.';\n                    }\n                });\n            };\n\n            $scope.refreshTabs = function(navigateToFirstGroup) {\n                return ClassificationGroupService.query({\n                    limit: 1000, // override default limit (we want to show as many groups as possible)\n                    orderBy: 'position',\n                }, function(response) {\n                    // Remove disabled groups\n                    $scope.groups = response.filter(function(group) {\n                        return group.enabled === true\n                    });\n                    // Sort by position (lowest first)\n                    $scope.groups = $scope.groups.sort(function(l, r) {\n                        return r.position - l.position;\n                    });\n                    $scope.groups = $scope.groups.reverse();\n\n                    // Select first group if available\n                    if (navigateToFirstGroup && $scope.groups.length !== 0) {\n                        $state.go('classifications.group', {id: $scope.groups[0].id});\n                    }\n                });\n            };\n\n            $scope.loadProtocols = function() {\n                ProtocolService.query(function(response, headers) {\n                    $scope.protocols = response;\n                });\n            };\n\n            $scope.fullyDefined = function() {\n                var fullyDefined = $scope.classificationRequest\n                    && $scope.classificationRequest.protocol\n                    && $scope.classificationRequest.dstPort && $scope.classificationRequest.dstAddress\n                    && $scope.classificationRequest.srcPort && $scope.classificationRequest.srcAddress\n                    && $scope.classificationRequest.exporterAddress;\n                return fullyDefined;\n            };\n\n            $scope.toggleClassificationMode = function() {\n                $scope.classificationMode = ($scope.classificationMode === 'simple' ? 'complex' : 'simple');\n            };\n\n            $scope.loadProtocols();\n            $scope.refreshTabs(true);\n\n        }])\n        .controller('ClassificationConfigController', ['$scope', '$rootScope', '$uibModal', '$location', '$log', 'ClassificationGroupService', function($scope, $rootScope, $uibModal, $location, $log, ClassificationGroupService) {\n            $scope.groups = [];\n            $scope.query = {\n                page: 1,\n                limit: 20,\n                totalItems: 0,\n            };\n            $scope.updateGroup = function(group) {\n                group.$update({}, function() {\n                    $scope.refreshTabs();\n                    $scope.refresh();\n                });\n            };\n            $scope.deleteGroup = function(group) {\n                group.$delete().then(function() {\n                    $scope.refreshTabs();\n                    $scope.refresh();\n                });\n            };\n            var openModal = function(group) {\n                return $uibModal.open({\n                    backdrop: false,\n                    controller: 'GroupModalController',\n                    templateUrl: newGroupModalTemplate,\n                    size: 'lg',\n                    resolve: {\n                        group: function() {\n                            return group;\n                        },\n                        groups: function () {\n                            return $scope.groups;\n                        },\n                        groupsTotalAmount: function () {\n                            return $scope.query.totalItems;\n                        }\n                    }\n                });\n            };\n            $scope.editGroup = function(group) {\n                var modalInstance = openModal(group);\n                modalInstance.closed.then(function () {\n                    $scope.refreshTabs();\n                    $scope.refresh();\n                }, function() {\n                    // modal was dismissed\n                    $scope.refresh();\n                });\n            };\n            $scope.addGroup = function(group) {\n                var modalInstance = openModal(group);\n                modalInstance.closed.then(function () {\n                    $scope.refreshTabs();\n                    $scope.refresh();\n                });\n            };\n            $scope.refresh = function() {\n                var parameters = $scope.query || {};\n                ClassificationGroupService.query({\n                    limit: 20,\n                    offset: (parameters.page -1) * parameters.limit || 0,\n                    orderBy: 'position',\n                    order: 'asc'\n                }, function(result, headers) {\n                    $scope.groups = result;\n                    var contentRange = elementList.parseContentRange(headers('Content-Range'));\n                    $scope.query.totalItems = contentRange.total;\n                });\n            };\n            // for drag and drop of groups (redefining position)\n            $scope.sortableGroups = {\n                start: function(e, ui) {\n                    // remember old index before moving\n                    angular.element(ui.item).data('oldIndex', ui.item.index());\n                },\n                stop: function(e, ui) {\n\n                    // Check Precondition:  item was actually moved\n                    var oldIndex =  angular.element(ui.item).data().oldIndex;\n                    var newIndex =  ui.item.index();\n                    if(oldIndex !== newIndex) {\n                        // Calculate and set new position (index + offset)\n                        var parameters = $scope.query || {};\n                        var offset = (parameters.page - 1) * parameters.limit || 0;\n                        var group = $scope.groups[newIndex];\n                        var position;\n                        if (newIndex - 1 < 0) {\n                            // we are already at the beginning of the visible paged list\n                            position = offset;\n                        } else {\n                            var previousGroup = $scope.groups[newIndex - 1];\n                            position = (newIndex > oldIndex) ? previousGroup.position : previousGroup.position + 1;\n                        }\n                        group.position = position;\n\n                        // Update backend\n                        var refreshCallback = function () {\n                            $scope.refreshTabs();\n                            $scope.refresh();\n                        };\n                        var errorCallback = function(response) {\n                            handleErrorResponse(response, $scope);\n                        };\n\n                        ClassificationGroupService.update(group, refreshCallback, errorCallback);\n                    }\n                },\n                items: \"tr:not(.unsortable)\"\n            };\n            $scope.refresh();\n        }])\n        .controller('ClassificationGroupController', ['$scope', '$stateParams', '$uibModal', '$log', '$http', '$window','ClassificationRuleService', 'ClassificationGroupService', function($scope, $stateParams, $uibModal, $log, $http, $window,ClassificationRuleService, ClassificationGroupService) {\n            // Defaults\n            $scope.rules = [];\n            $scope.query = {\n                page: 1,\n                limit: 20,\n                totalItems: 0,\n                orderBy: 'position',\n                order: 'asc',\n                groups: [$stateParams.id],\n                search: undefined\n            };\n\n            $scope.splitRule = (entry) => {\n                return entry ? entry.replaceAll(',', '\\n') : entry;\n            };\n\n            $scope.findGroup = function(groupId) {\n                return ClassificationGroupService.get({id: groupId}, function(response) {\n                    $scope.group = response;\n                    $scope.refresh();\n                });\n            };\n\n            $scope.showExportRulesDialog = function() {\n                var modalInstance = $uibModal.open({\n                    backdrop: false,\n                    controller: 'ClassificationExportController',\n                    templateUrl: exportModalTemplate,\n                    resolve: {\n                        group: function () {\n                            return $scope.group;\n                        }\n                    }\n                });\n                modalInstance.result.then(function () {\n                    $scope.refreshTabs();\n                    $scope.refresh();\n                });\n            };\n\n            $scope.refresh = function() {\n                var parameters = $scope.query || {};\n                var editPositionOfRuleEnabled = !($scope.group.readOnly) && ($scope.query.orderBy === 'position' && $scope.query.order === 'asc');\n                var sortable =  angular.element( '.ui-sortable' );\n                if(editPositionOfRuleEnabled === true) {\n                    sortable.sortable('enable');\n                } else {\n                    sortable.sortable('disable');\n                }\n                return ClassificationRuleService.query( {\n                    limit: parameters.limit || 20,\n                    offset: (parameters.page -1) * parameters.limit || 0,\n                    orderBy: parameters.orderBy,\n                    order: parameters.order,\n                    groupFilter: parameters.groups || [],\n                    query: parameters.search\n                }, function (result, headers) {\n                    $scope.rules = result;\n                    var contentRange = elementList.parseContentRange(headers('Content-Range'));\n                    $scope.query.totalItems = contentRange.total;\n                });\n            };\n\n            // In some cases the currently selected group needs to be refreshed, this method finds the group from\n            // $scope.groups and updates $scope.group accordingly, in order to reflect updates in $scope.groups\n            $scope.refreshGroup = function() {\n                for (var i = 0; i<$scope.groups.length; i++) {\n                    var group = $scope.groups[i];\n                    if (group.id === $scope.group.id) {\n                        $scope.group = group;\n                        return;\n                    }\n                }\n            };\n\n            $scope.refreshAll = function() {\n                var result = $scope.refreshTabs();\n                result.$promise.then(function() {\n                    $scope.refreshGroup()\n                    $scope.refresh();\n                });\n            };\n\n            $scope.changeOrderBy = function(column) {\n                if ($scope.query.orderBy === column) {\n                    $scope.query.order = $scope.query.order === 'asc' ? 'desc' : 'asc';\n                } else {\n                    $scope.query.orderBy = column;\n                    $scope.query.order = 'asc';\n                }\n                $scope.refresh();\n            };\n\n            $scope.deleteRule = function(rule) {\n                rule.$delete().then(function() {\n                    $scope.refreshAll();\n                });\n            };\n\n            $scope.deleteAllRules = function() {\n                ClassificationRuleService.delete({groupId: $scope.group.id}, function() {\n                    $scope.refreshAll();\n                });\n            };\n\n            var openModal = function(classification, group) {\n                return $uibModal.open({\n                    backdrop: false,\n                    controller: 'ClassificationModalController',\n                    templateUrl: newRuleModalTemplate,\n                    size: 'lg',\n                    resolve: {\n                        classification: function() {\n                            return classification;\n                        },\n                        group: function() {\n                            return group;\n                        },\n                        groups: function () {\n                            return $scope.groups;\n                        }\n                    }\n                });\n            };\n\n            $scope.editRule = function(rule) {\n                var modalInstance = openModal(rule, rule.group);\n                modalInstance.closed.then(function () {\n                    $scope.refreshAll();\n                }, function() {\n                    // modal was dismissed\n                    $scope.refresh();\n                });\n            };\n\n            $scope.addRule = function(group) {\n                var modalInstance = openModal(null, group);\n                modalInstance.closed.then(function () {\n                    $scope.refreshAll();\n                });\n            };\n\n            // for drag and drop of rules (redefining position)\n            $scope.sortableRules = {\n                start: function(e, ui) {\n                    // remember old index before moving\n                    angular.element(ui.item).data('oldIndex', ui.item.index());\n                },\n                stop: function(e, ui) {\n                    // Check Precondition: item was actually moved\n                    var oldIndex =  angular.element(ui.item).data().oldIndex;\n                    var newIndex =  ui.item.index();\n                    if(oldIndex !== newIndex) {\n                        // Calculate and set new position (index + offset)\n                        var parameters = $scope.query || {};\n                        var offset = (parameters.page - 1) * parameters.limit || 0;\n                        var rule = $scope.rules[newIndex];\n                        var position;\n                        if (newIndex - 1 < 0) {\n                            // we are already at the beginning of the visible paged list\n                            position = offset;\n                        } else {\n                            var previousRule = $scope.rules[newIndex - 1];\n                            position = (newIndex > oldIndex) ? previousRule.position : previousRule.position + 1;\n                        }\n                        rule.position = position;\n\n                        // Update backend\n                        var refreshCallback = function () {\n                            $scope.refreshAll();\n                        };\n                        var errorCallback = function(response) {\n                            handleErrorResponse(response, $scope);\n                        };\n\n                        ClassificationRuleService.update(rule, refreshCallback, errorCallback);\n                    }\n                }\n            };\n\n            $scope.importRules = function() {\n                var modalInstance = $uibModal.open({\n                    size: 'lg',\n                    backdrop: false,\n                    controller: 'ClassificationImportController',\n                    templateUrl: importModalTemplate,\n                    resolve: {\n                        group: function () {\n                            return $scope.group;\n                        }\n                    }\n                });\n                modalInstance.closed.then(function () {\n                    $scope.refreshAll();\n                });\n            };\n\n            $scope.clearSearch = function() {\n                $scope.query.search = undefined;\n                $scope.refresh();\n            };\n\n            $scope.findGroup($stateParams.id);\n        }])\n        .controller('ClassificationImportController', ['$scope', '$http', '$uibModalInstance', 'group', function($scope, $http, $uibModalInstance, group) {\n            $scope.group = group;\n            $scope.setFile = function(element) {\n                $scope.$apply(function(scope) {\n                    scope.fileToUpload = element.files[0];\n                });\n            };\n            $scope.openFileDialogue = function() {\n                setTimeout(function() {\n                    document.getElementById('fileToImport').click();\n                }, 0);\n            };\n            $scope.resetInput = function() {\n                $scope.fileToUpload = undefined;\n                $scope.error = undefined;\n                $scope.failedRows = [];\n                $scope.containsHeader = true;\n                $scope.deleteExistingRules = false;\n                $scope.pagination = {\n                    page: 1,\n                    totalItems: 0,\n                    limit: 5\n                };\n            };\n\n            $scope.navigateWithinErrors = function() {\n                var limit = $scope.pagination.limit;\n                var offset = ($scope.pagination.page - 1) * limit;\n                var endIndex = Math.min(offset + limit, $scope.errors.length);\n                $scope.failedRows = $scope.errors.slice(offset, endIndex);\n            };\n\n            $scope.uploadFile = function() {\n                var reader = new FileReader();\n                reader.onload = function(e) {\n                    $scope.error = undefined;\n                    $scope.errors = [];\n                    $scope.failedRows = [];\n                    $http({\n                        url: 'rest/classifications/groups/'+group.id,\n                        method: 'POST',\n                        data: reader.result,\n                        params: {'hasHeader': $scope.containsHeader, 'deleteExistingRules' : $scope.deleteExistingRules},\n                        headers: {'Content-Type': 'text/comma-separated-values'}\n                    }).then(function () {\n                        $uibModalInstance.close();\n                    }, function (r) {\n                        const response = r.data;\n                        const status = r.status;\n                        if (status === 500) {\n                            $scope.error = 'An unexpected error occurred.';\n                        }\n                        if (status === 400) {\n                            // General error\n                            if (response.error) {\n                                $scope.error = response.error.message;\n                                return;\n                            }\n                            // Report failed rows\n                            if (response.errors) {\n                                $scope.error = 'The rules could not be imported. Please fix the errors shown below and retry.';\n                                // Persist locally\n                                var errorKeys = Object.getOwnPropertyNames(response.errors);\n                                for (var i = 0; i<errorKeys.length; i++) {\n                                    var index = errorKeys[i];\n                                    var rowIndex = $scope.containsHeader ? parseInt(index, 10) + 1 : index; // increase row index if csv contains header\n                                    $scope.errors.push({index: rowIndex, message: response.errors[index].message});\n                                }\n                                // Update pagination settings\n                                $scope.pagination.totalItems = $scope.errors.length;\n                                $scope.navigateWithinErrors();\n                            }\n                        }\n                    });\n                };\n                reader.readAsText($scope.fileToUpload);\n            };\n            $scope.resetInput();\n        }])\n        .controller('ClassificationExportController', ['$scope', '$http', '$uibModalInstance', 'group', '$window',\n            function($scope, $http, $uibModalInstance, group, $window) {\n                $scope.group = group;\n                $scope.export = {};\n                $scope.export.requestedFileName = group.name + '_rules.csv';\n                $scope.exportGroup = function() {\n                    var requestedFileName = $scope.export.requestedFileName.trim();\n                    $window.location = 'rest/classifications/groups/' + $scope.group.id +'?filename='\n                        +requestedFileName+'&format=csv';\n                    $uibModalInstance.close();\n            };\n\n        }])\n        .controller('ClassificationModalController', ['$scope', '$uibModalInstance', 'ProtocolService', 'ClassificationRuleService', 'classification', 'group', 'groups', function($scope, $uibModalInstance, ProtocolService, ClassificationRuleService, classification, group, groups) {\n            $scope.classification = classification || {group:group};\n            $scope.protocols = [];\n            $scope.currentSelection = undefined;\n            $scope.selectedProtocols = [];\n            $scope.buttonName = $scope.classification.id ? 'Update' : 'Create';\n            $scope.group = group;\n            $scope.maxPosition = (classification === null) ? group.ruleCount : group.ruleCount-1;\n            $scope.selectableGroups = groups.filter((group) => group.readOnly === false);\n\n            var convertStringArrayToProtocolsArray = function(string) {\n                return string.map(function(protocol) {\n                    return {keyword: protocol};\n                })\n            };\n\n            var convertProtocolsArrayToStringArray = function(protocols) {\n                return protocols.map(function(protocol) {\n                    return protocol.keyword;\n                });\n            };\n\n            $scope.save = function() {\n                // Close modal afterwards\n                var closeCallback = function() {\n                    $uibModalInstance.close();\n                };\n                var errorCallback = function(response) {\n                    handleErrorResponse(response, $scope);\n                };\n                $scope.classification.protocols = convertProtocolsArrayToStringArray($scope.selectedProtocols);\n                if ($scope.classification.id) {\n                    ClassificationRuleService.update($scope.classification, closeCallback, errorCallback);\n                } else {\n                    ClassificationRuleService.save($scope.classification, closeCallback, errorCallback);\n                }\n            };\n\n            $scope.cancel = function() {\n                $uibModalInstance.dismiss('Cancelled by User');\n            };\n\n            $scope.insertProtocol = function(item) {\n                if (item && $scope.selectedProtocols.indexOf(item) === -1) {\n                    $scope.currentSelection = '';\n                    $scope.selectedProtocols.push(item);\n                }\n            };\n\n            $scope.removeProtocol = function(protocol) {\n                var index = $scope.selectedProtocols.indexOf(protocol);\n                if (index !== -1) {\n                    $scope.selectedProtocols.splice(index, 1);\n                }\n            };\n\n            $scope.loadProtocols = function() {\n                ProtocolService.query(function(response, headers) {\n                    $scope.protocols = response;\n                });\n            };\n\n            if ($scope.classification.id) {\n                $scope.selectedProtocols = convertStringArrayToProtocolsArray($scope.classification.protocols);\n            }\n\n            $scope.loadProtocols();\n\n        }])\n        .controller('GroupModalController', ['$scope', '$uibModalInstance', 'ClassificationGroupService', 'group', 'groups', 'groupsTotalAmount', function($scope, $uibModalInstance, ClassificationGroupService, group, groups, groupsTotalAmount) {\n            $scope.group = group || {enabled:true};\n            $scope.currentSelection = undefined;\n            $scope.buttonName = $scope.group.id ? 'Update' : 'Create';\n            $scope.groups = groups;\n            $scope.groupsTotalAmount = groupsTotalAmount;\n            $scope.maxPosition = (group === undefined) ? groupsTotalAmount-1 : groupsTotalAmount-2; // pre-defined group has always the last position\n\n            $scope.save = function() {\n                // Close modal afterwards\n                var closeCallback = function() {\n                    $uibModalInstance.close();\n                };\n                var errorCallback = function(response) {\n                    handleErrorResponse(response, $scope);\n                };\n                if ($scope.group.id) {\n                    ClassificationGroupService.update($scope.group, closeCallback, errorCallback);\n                } else {\n                    ClassificationGroupService.save($scope.group, closeCallback, errorCallback);\n                }\n            };\n\n            $scope.cancel = function() {\n                $uibModalInstance.dismiss('Cancelled by User');\n            };\n        }])\n    ;\n}());\n"],"sourceRoot":""}