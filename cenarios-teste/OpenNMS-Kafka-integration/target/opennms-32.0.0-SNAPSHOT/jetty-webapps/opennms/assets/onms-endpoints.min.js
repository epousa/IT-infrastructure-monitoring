!function(e,n){if("object"==typeof exports&&"object"==typeof module)module.exports=n();else if("function"==typeof define&&define.amd)define([],n);else{var t=n();for(var o in t)("object"==typeof exports?exports:e)[o]=t[o]}}(window,(function(){return(window.webpackJsonp=window.webpackJsonp||[]).push([[44,2,8,25,35,49],{10:function(e,exports,n){"use strict";var t,o=(t=n(70))&&t.__esModule?t:{default:t};var angular=n(3),i=n(22);angular.module("onms.http",["ui.bootstrap"]).factory("InterceptorService",["$q","$rootScope",function(e,n){return{responseError:function(t){var i,a;401===t.status&&(t.config&&t.config.url&&((0,o.default)(i=t.config.url).call(i,"rest/")||(0,o.default)(a=t.config.url).call(a,"api/v2/"))&&(console.error("Login Required",t,t.headers),n.$emit("loginRequired")));return 403===t.status&&n.$emit("permissionDenied"),e.reject(t)}}}]).config(["$locationProvider",function(e){e.hashPrefix("")}]).config(["$httpProvider",function(e){e.defaults.headers.common["X-Requested-With"]="XMLHttpRequest",e.interceptors.push("InterceptorService")}]).run(["$rootScope","$uibModal",function(e,n){e.$on("loginRequired",(function(){var e=document.getElementsByTagName("base");e&&e.length>0&&e[0].href?document.headerLogoutForm.submit():console.warn("Login is required, but cannot forward to login page due to missing base tag.")})),e.$on("permissionDenied",(function(){n.open({templateUrl:i,controller:["$scope","$uibModalInstance",function($scope,e){$scope.reload=function(){e.dismiss(),window.location.reload()}}],size:"",backdrop:"static",keyboard:!1})}))}]),e.exports=angular},1021:function(e,exports,n){"use strict";n(116),n(117);var t=a(n(209)),o=a(n(294)),i=a(n(9));function a(e){return e&&e.__esModule?e:{default:e}}var angular=n(3);n(10),n(80),n(450);var r=n(292),s=n(1025),d=n(1026),l=n(1027);angular.module("onms.endpoints",["angular-loading-bar","ngResource","ui.bootstrap","ui.router","onms.http","onms.default.apps","mwl.confirm"]).run(["confirmationPopoverDefaults",function(e){e.templateUrl=r}]).config(["$locationProvider",function(e){e.hashPrefix("!"),e.html5Mode(!1)}]).config(["$stateProvider","$urlRouterProvider",function(e,n){e.state("endpoints",{url:"/endpoints",controller:"EndpointsController",templateUrl:s}).state("endpoints.grafana",{url:"/grafana",controller:"GrafanaEndpointsController",templateUrl:d}),n.otherwise("endpoints/grafana")}]).factory("GrafanaEndpointsService",["$resource",function(e){return e("rest/endpoints/grafana/:id",{id:"@id"},{get:{method:"GET"},create:{method:"POST"},update:{method:"PUT"},list:{method:"GET",isArray:!0},delete:{method:"DELETE",params:{id:-1}},verify:{method:"POST",params:{},url:"rest/endpoints/grafana/verify"}})}]).controller("EndpointsController",["$scope",function($scope){$scope.globalError=void 0,$scope.types=[{id:"grafana",label:"Grafana"}],$scope.handleGlobalError=function(e){console.log("An unexpected error occurred",e),$scope.globalError="An unexpected error occurred: "+e.statusText+"("+e.status+")",$scope.globalErrorDetails=(0,t.default)(e,null,2)}}]).controller("GrafanaEndpointsController",["$scope","$http","$uibModal","GrafanaEndpointsService",function($scope,e,n,t){$scope.refresh=function(){$scope.endpoints=[],t.list((function(e){var n;e&&(0,o.default)(e)&&($scope.endpoints=e,(0,i.default)(n=$scope.endpoints).call(n,(function(e){e.revealApiKey=!1})))}),(function(e){$scope.handleGlobalError(e)}))},$scope.openModal=function(e){return n.open({backdrop:!1,controller:"GrafanaEndpointModalController",templateUrl:l,size:"lg",resolve:{endpoint:function(){return e}}})},$scope.deleteEndpoint=function(e){t.delete({id:e.id},(function(e){$scope.refresh()}),(function(e){$scope.handleGlobalError(e)}))},$scope.editEndpoint=function(e){var n=angular.copy(e);$scope.openModal(n).result.then((function(){$scope.refresh()}),(function(){$scope.refresh()}))},$scope.addNewEndpoint=function(){$scope.openModal().closed.then((function(){$scope.refresh()}),(function(){$scope.refresh()}))},$scope.refresh()}]).controller("GrafanaEndpointModalController",["$scope","$uibModalInstance","$sce","GrafanaEndpointsService","endpoint",function($scope,e,n,t,o){$scope.uidRegex="[a-zA-Z0-9]+[a-zA-Z0-9_-]*",$scope.endpoint=o||{revealApiKey:!1},$scope.buttonName=$scope.endpoint.id?"Update":"Create",$scope.verification={state:void 0,result:void 0},$scope.error={},$scope.defaultReadTimeout=30,$scope.defaultConnectTimeout=30;var i=function(e){if(400===e.status&&e.data){var n=e.data;n.context&&n.message?$scope.error[n.context]=n.message:n.context?$scope.error[n.context]="Invalid value":$scope.error.entity="The endpoint is not valid. Details were not provided"}else $scope.handleGlobalError(e)};$scope.verify=function(){$scope.verification={state:"running",result:void 0};var e={apiKey:$scope.endpoint.apiKey,url:$scope.endpoint.url,readTimeout:$scope.endpoint.readTimeout,connectTimeout:$scope.endpoint.connectTimeout};t.verify(e,(function(e){$scope.verification.state="success"}),(function(e){$scope.verification.state="failure",400===e.status&&e.data&&e.data.message?$scope.verification.result=n.trustAsHtml(e.data.message):$scope.verification.result="Something went wrong"}))},$scope.save=function(){$scope.error={},$scope.verification.state=void 0,$scope.verification.result=void 0;var n=function(){e.close()},o={id:$scope.endpoint.id,uid:$scope.endpoint.uid,url:$scope.endpoint.url,apiKey:$scope.endpoint.apiKey,description:$scope.endpoint.description,connectTimeout:$scope.endpoint.connectTimeout,readTimeout:$scope.endpoint.readTimeout};$scope.endpoint.id?t.update(o,n,i):t.create(o,n,i)},$scope.cancel=function(){e.dismiss("Cancelled by User")}}])},1025:function(e,exports){var n="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-endpoints/index.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<span> <div class="alert alert-danger" ng-if="globalError"> <span>{{globalError}}</span> <pre ng-show="globalErrorDetails">{{globalErrorDetails}}</pre> </div> <div class="w-100" ng-if="!globalError"> <ul id="tabs" class="nav nav-tabs"> <li role="presentation" ng-repeat="endpointType in types" class="nav-item"> <a ui-sref-active="active" ui-sref="endpoints.{{endpointType.id}}" title="{{endpointType.label}}" data-name="{{endpointType.label}}" class="nav-link"> {{endpointType.label}} Endpoints </a> </li> </ul> <div class="card border-top-0" ui-view> </div> </div> </span>')}]),e.exports=n},1026:function(e,exports){var n="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-endpoints/grafana/grafana.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="card-body"> <div class="pull-right mb-2"> <button id="action.addGrafanaEndpoint" class="btn btn-sm btn-primary" title="Add new endpoint" ng-click="addNewEndpoint()"><i class="fa fa-plus"></i></button> <button id="action.refreshGrafanaEndpoints" class="btn btn-sm btn-primary" title="Reload Page" ng-click="refresh()"><i class="fa fa-refresh"></i></button> </div> <div> <span ng-if="endpoints.length == 0" class="ml-2 text-muted">No data available</span> <table ng-if="endpoints.length > 0" class="table table-sm table-striped"> <thead> <tr> <th>Grafana ID</th> <th>URL</th> <th>API Key</th> <th>Description</th> <th>Connect Timeout</th> <th>Read Timeout</th> <th>Actions</th> </tr> </thead> <tbody> <tr ng-repeat="endpoint in endpoints" data-id="{{endpoint.id}}"> <td>{{endpoint.uid}}</td> <td>{{endpoint.url}}</td> <td> <span ng-show="endpoint.revealApiKey === true">{{endpoint.apiKey}}</span> <span ng-show="endpoint.revealApiKey === false">**********</span> <button id="action.revealApiKey.{{endpoint.id}}" class="btn btn-link" ng-click="endpoint.revealApiKey = !endpoint.revealApiKey"> <i ng-class="{\'fa-eye\': endpoint.revealApiKey === false, \'fa-eye-slash\': endpoint.revealApiKey === true}" class="fa"></i> </button> </td> <td>{{endpoint.description}}</td> <td>{{endpoint.connectTimeout}}</td> <td>{{endpoint.readTimeout}}</td> <td> <button id="action.delete.{{endpoint.id}}" class="btn btn-danger btn-sm" mwl-confirm title="Delete Endpoint" message="Do you want to delete the Grafana Endpoint with url \'{{endpoint.url}}\' and UID \'{{endpoint.uid}}\'?" on-confirm="deleteEndpoint(endpoint)" placement="left" confirm-button-type="danger" cancel-button-type="secondary" confirm-text="Yes" cancel-text="No"><i class="fa fa-trash-o"></i></button> <button id="action.edit.{{endpoint.id}}" class="btn btn-secondary btn-sm" ng-click="editEndpoint(endpoint)" title="Edit Endpoint"><i class="fa fa-pencil"></i></button> </td> </tr> </tbody> </table> <div class="mt-2"> <span ng-if="endpoints.length > 0" class="text-muted">{{endpoints.length}} Grafana Endpoint(s)</span> </div> </div> </div>')}]),e.exports=n},1027:function(e,exports){var n="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-endpoints/grafana/grafana-modal.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div id="endpointModal"> <div class="modal-header"> <h5 class="modal-title">{{endpoint.id === undefined ? "Add" : "Edit"}} Grafana Endpoint</h5> </div> <div class="modal-body"> <form name="endpointForm" novalidate> <div class="form-group"> <div ng-show="error.entity" class="form-text text-danger">{{error.entity}}</div> </div> <div class="form-group form-row"> <label class="col-form-label" for="endpoint.uid">Grafana ID</label> <button class="btn btn-link text-secondary px-0" popover-trigger="\'mouseenter\'" uib-popover="A unique identifier of this endpoint. The identifier can only contain alpha numeric values as well as  - and _ but may not start with those. The full regular expression to match is: {{uidRegex}}"><i class="fa fa-info-circle"></i> </button> <input class="form-control" type="text" id="endpoint.uid" name="uid" placeholder="Unique Grafana ID" ng-model="endpoint.uid" ng-class="{ \'is-invalid\' : endpointForm.uid.$invalid || error.uid }" ng-pattern="uidRegex" required> <div ng-show="endpointForm.uid.$invalid" class="invalid-feedback">Please provide a valid Grafana ID.</div> <div ng-show="error.uid" class="invalid-feedback">{{error.uid}}</div> </div> <div class="form-group form-row"> <label class="col-form-label" for="endpoint.description">Endpoint Description</label> <input class="form-control" type="text" id="endpoint.description" name="description" placeholder="Optional Label" ng-model="endpoint.description" ng-class="{ \'is-invalid\' : endpointForm.description.$invalid || error.description}"> <div ng-show="error.description" class="invalid-feedback">{{error.description}}</div> </div> <div class="form-group form-row"> <label class="col-form-label" for="endpoint.apiKey">Grafana API Key</label> <input class="form-control" type="text" id="endpoint.apiKey" name="apiKey" placeholder="API-KEY" ng-model="endpoint.apiKey" ng-class="{ \'is-invalid\' : endpointForm.apiKey.$invalid || error.apiKey}" required> <div ng-show="endpointForm.apiKey.$invalid" class="invalid-feedback">The API Key is required.</div> <div ng-show="error.apiKey" class="invalid-feedback">{{error.apiKey}}</div> </div> <div class="form-group form-row"> <label class="col-form-label" for="endpoint.url">Grafana URL</label> <input class="form-control" type="text" id="endpoint.url" name="url" placeholder="http://grafana:3000" ng-model="endpoint.url" ng-class="{ \'is-invalid\' : endpointForm.url.$invalid || error.url}" required> <div ng-show="endpointForm.url.$invalid" class="invalid-feedback">The url is required.</div> <div ng-show="error.url" class="invalid-feedback">{{error.url}}</div> </div> <div class="form-group form-row"> <label class="col-form-label" for="endpoint.connectTimeout">Grafana Connect Timeout</label> <button class="btn btn-link text-secondary px-0" popover-trigger="\'mouseenter\'" uib-popover="The connect timeout in seconds for this endpoint. If omitted a default timeout of {{defaultConnectTimeout}} seconds is applied."><i class="fa fa-info-circle"></i> </button> <input class="form-control" type="number" id="endpoint.connectTimeout" name="connectTimeout" min="0" max="9999" ng-model="endpoint.connectTimeout" ng-class="{ \'is-invalid\' : endpointForm.connectTimeout.$invalid || error.connectTimeout}"> <div ng-show="endpointForm.connectTimeout.$invalid" class="invalid-feedback">Please provide a valid number &gt; 0.</div> <div ng-show="error.connectTimeout" class="invalid-feedback">{{error.connectTimeout}}</div> </div> <div class="form-group form-row"> <label class="col-form-label" for="endpoint.readTimeout">Grafana Read Timeout</label> <button class="btn btn-link text-secondary px-0" popover-trigger="\'mouseenter\'" uib-popover="The read timeout in seconds for this endpoint. If omitted a default timeout of {{defaultReadTimeout}} seconds is applied."><i class="fa fa-info-circle"></i> </button> <input class="form-control" type="number" id="endpoint.readTimeout" name="readTimeout" min="0" max="9999" ng-model="endpoint.readTimeout" ng-class="{ \'is-invalid\' : endpointForm.readTimeout.$invalid || error.readTimeout}"> <div ng-show="endpointForm.readTimeout.$invalid" class="invalid-feedback">Please provide a valid number &gt; 0.</div> <div ng-show="error.readTimeout" class="invalid-feedback">{{error.readTimeout}}</div> </div> </form> <button type="button" class="btn btn-warning btn-sm" id="verify-endpoint" ng-click="verify()" ng-disabled="endpointForm.$invalid" title="Verify Connectivity"><i class="fa fa-plug"></i> Test Connection</button> <span class="" ng-if="verification.state === \'running\'"><i class="spinner-border spinner-border-sm"></i> Connecting ...</span> <span class="text-success" ng-if="verification.state ===\'success\'"><i class="fa fa-check"></i> Connected</span> <span class="text-danger" ng-if="verification.state === \'failure\'"><i class="fa fa-exclamation-triangle"></i> Could not connect</span> <div ng-if="verification.result && verification.state === \'failure\'" class="alert mt-2" ng-class="{\'alert-danger\': verification.state === \'failure\'}"> {{verification.result}} </div> </div> <div class="modal-footer"> <div> <button type="button" class="btn btn-primary" id="save-endpoint" ng-click="save()" ng-disabled="endpointForm.$invalid">{{buttonName}}</button> <button type="button" class="btn btn-secondary" id="cancel-endpoint" ng-click="cancel()">Cancel</button> </div> </div> </div>')}]),e.exports=n},12:function(e,exports,n){"use strict";console.log("init: bootstrap-js");var jQuery=n(5);n(8),n(41),e.exports=jQuery},22:function(e,exports){var n="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/lib/onms-http/403-permission-denied.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<span> <div class="modal-header"> <h3><i class="fa fa-exclamation-triangle text-warning"></i> Permission Denied</h3> </div> <div class="modal-body"> <h5> You are not allowed to perform the requested action. </h5> <p class="text-muted"> This is not supposed to happen. Please reload the page and contact your administrator if this occurs more often. </p> </div> <div class="modal-footer"> <button class="btn btn-primary" ng-click="reload()">Reload</button> </div> </span>')}]),e.exports=n},292:function(e,exports){var n="/home/epousa/dev/opennms/core/web-assets/src/main/assets/js/apps/onms-classifications/views/modals/popover.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(n,'<div class="popover px-2 py-2" ng-class="[vm.$attrs.placement || vm.defaults.placement, \'bs-popover-\' + (vm.$attrs.placement || vm.defaults.placement), vm.$attrs.popoverClass || vm.defaults.popoverClass, {fade: vm.animation}]"> <div class="popover-arrow arrow" style="top:50px"></div> <h3 class="popover-title" ng-bind-html="vm.$attrs.title"></h3> <div class="popover-content"> <p ng-bind-html="vm.$attrs.message"></p> <div class="row"> <div class="col-sm-6" ng-if="!vm.$attrs.hideConfirmButton && !vm.defaults.hideConfirmButton" ng-class="{\'col-sm-offset-3\': vm.$attrs.hideCancelButton || vm.defaults.hideCancelButton}"> <button class="btn btn-block confirm-button" ng-class="\'btn-\' + (vm.$attrs.confirmButtonType || vm.defaults.confirmButtonType)" ng-click="vm.onConfirm(); vm.hidePopover()" ng-bind-html="vm.$attrs.confirmText || vm.defaults.confirmText"> </button> </div> <div class="col-sm-6" ng-if="!vm.$attrs.hideCancelButton && !vm.defaults.hideCancelButton" ng-class="{\'col-sm-offset-3\': vm.$attrs.hideConfirmButton || vm.defaults.hideConfirmButton}"> <button class="btn btn-block cancel-button" ng-class="\'btn-\' + (vm.$attrs.cancelButtonType || vm.defaults.cancelButtonType)" ng-click="vm.onCancel(); vm.hidePopover()" ng-bind-html="vm.$attrs.cancelText || vm.defaults.cancelText"> </button> </div> </div> </div> </div> ')}]),e.exports=n},3:function(e,exports,n){"use strict";n(5);var angular=n(40);n(53),n(54),n(55),n(56),n(51),n(57),n(58),n(59),n(60),n(12),n(61),n(62),console.log("init: angular-js "+angular.version.full),e.exports=window.angular=angular},5:function(e,exports,n){"use strict";console.log("init: jquery-js");var jQuery=n(7);n(28),e.exports=jQuery},8:function(e,exports,n){"use strict";console.log("init: moment-js");var t=n(1);n(35),n(36),e.exports=t}},[[1021,0]]])}));
//# sourceMappingURL=onms-endpoints.min.js.map