{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///./src/main/assets/js/vendor/ipaddress-js.js"],"names":["_require","require","Address4","Address6","verifyIPv4Address","ip","err","verifyIPv6Address","isValidIPAddress","checkIpRange","ip1","ip2","a","bigInteger","b","compareTo","console","log","module","exports","_assign","default","window"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;;;ACVA,IAAAA,QAAA,GAA+BC,mBAAO,CAAC,qHAAa;EAA5CC,QAAQ,GAAAF,QAAA,CAARE,QAAQ;EAAEC,QAAQ,GAAAH,QAAA,CAARG,QAAQ;AAE1B,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAYC,EAAE,EAAE;EACnC,IAAI;IACA,IAAIH,QAAQ,CAACG,EAAE,CAAC;EACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACV,OAAO,KAAK;EAChB;EACA,OAAO,IAAI;AACf,CAAC;AAED,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAYF,EAAE,EAAE;EACnC,IAAI;IACA,IAAIF,QAAQ,CAACE,EAAE,CAAC;EACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACV,OAAO,KAAK;EAChB;EACA,OAAO,IAAI;AACf,CAAC;AAED,IAAME,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAYH,EAAE,EAAE;EAClC,OAAOD,iBAAiB,CAACC,EAAE,CAAC,IAAIE,iBAAiB,CAACF,EAAE,CAAC;AACzD,CAAC;AAED,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAYC,GAAG,EAAEC,GAAG,EAAC;EACnC,IAAIP,iBAAiB,CAACM,GAAG,CAAC,IAAIN,iBAAiB,CAACO,GAAG,CAAC,EAAE;IAClD,IAAMC,CAAC,GAAG,IAAIV,QAAQ,CAACQ,GAAG,CAAC,CAACG,UAAU,EAAE;IACxC,IAAMC,CAAC,GAAG,IAAIZ,QAAQ,CAACS,GAAG,CAAC,CAACE,UAAU,EAAE;IACxC,OAAOC,CAAC,IAAIF,CAAC;EACjB;EACA,IAAIL,iBAAiB,CAACG,GAAG,CAAC,IAAIH,iBAAiB,CAACI,GAAG,CAAC,EAAE;IAClD,IAAMC,EAAC,GAAG,IAAIT,QAAQ,CAACO,GAAG,CAAC,CAACG,UAAU,EAAE;IACxC,IAAMC,EAAC,GAAG,IAAIX,QAAQ,CAACQ,GAAG,CAAC,CAACE,UAAU,EAAE;IACxC,OAAOC,EAAC,CAACC,SAAS,CAACH,EAAC,CAAC,IAAI,CAAC;EAC9B;EACA,OAAO,KAAK;AAChB,CAAC;AAEDI,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC,CAAC,CAAC;;AAEnCC,MAAM,CAACC,OAAO,GAAG;EACbjB,QAAQ,EAAEA,QAAQ;EAClBC,QAAQ,EAAEA,QAAQ;EAClBC,iBAAiB,EAAEA,iBAAiB;EACpCG,iBAAiB,EAAEA,iBAAiB;EACpCC,gBAAgB,EAAEA,gBAAgB;EAClCC,YAAY,EAAEA;AAClB,CAAC;AAED,IAAAW,OAAA,CAAAC,OAAA,EAAcC,MAAM,EAAEJ,MAAM,CAACC,OAAO,CAAC,C","file":"ipaddress-js.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn ","const { Address4, Address6 } = require('ip-address');\n\nconst verifyIPv4Address = function(ip) {\n    try {\n        new Address4(ip);\n    } catch (err) {\n        return false;\n    }\n    return true;\n};\n\nconst verifyIPv6Address = function(ip) {\n    try {\n        new Address6(ip);\n    } catch (err) {\n        return false;\n    }\n    return true;\n};\n\nconst isValidIPAddress = function(ip) {\n    return verifyIPv4Address(ip) || verifyIPv6Address(ip);\n};\n\nconst checkIpRange = function(ip1, ip2){\n    if (verifyIPv4Address(ip1) && verifyIPv4Address(ip2)) {\n        const a = new Address4(ip1).bigInteger();\n        const b = new Address4(ip2).bigInteger();\n        return b >= a;\n    }\n    if (verifyIPv6Address(ip1) && verifyIPv6Address(ip2)) {\n        const a = new Address6(ip1).bigInteger();\n        const b = new Address6(ip2).bigInteger();\n        return b.compareTo(a) >= 0;\n    }\n    return false;\n};\n\nconsole.log('init: ipaddress-js'); // eslint-disable-line no-console\n\nmodule.exports = {\n    Address4: Address4,\n    Address6: Address6,\n    verifyIPv4Address: verifyIPv4Address,\n    verifyIPv6Address: verifyIPv6Address,\n    isValidIPAddress: isValidIPAddress,\n    checkIpRange: checkIpRange\n};\n\nObject.assign(window, module.exports);\n"],"sourceRoot":""}