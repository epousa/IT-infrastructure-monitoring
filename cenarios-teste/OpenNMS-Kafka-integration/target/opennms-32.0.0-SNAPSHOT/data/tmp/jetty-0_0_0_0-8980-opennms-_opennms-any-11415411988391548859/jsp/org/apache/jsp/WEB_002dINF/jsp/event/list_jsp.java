/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.48.v20220622
 * Generated at: 2023-03-30 11:12:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.event;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.opennms.netmgt.model.OnmsFilterFavorite;
import org.opennms.web.admin.notification.noticeWizard.NotificationWizardServlet;
import org.opennms.web.api.Authentication;
import org.opennms.web.event.AcknowledgeType;
import org.opennms.web.event.Event;
import org.opennms.web.event.SortStyle;
import org.opennms.web.event.filter.*;
import org.opennms.web.filter.Filter;
import org.opennms.web.filter.NormalizedQueryParameters;
import org.opennms.web.servlet.XssRequestWrapper;
import org.opennms.web.tags.filters.EventFilterCallback;
import org.opennms.web.tags.filters.FilterCallback;
import org.opennms.web.tags.select.FilterFavoriteSelectTagHandler;
import java.util.ArrayList;
import java.util.List;
import org.opennms.web.api.Util;
import org.opennms.web.tags.FavoriteTag;
import org.opennms.core.utils.WebSecurityUtils;
import com.google.common.base.Strings;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


    final String urlBase = "event/list";

    protected String makeSortLink(FilterCallback callback, NormalizedQueryParameters parms, SortStyle style, SortStyle revStyle, String sortString, String title, OnmsFilterFavorite favorite) {
        StringBuffer buffer = new StringBuffer();
        final String styleShortName = style != null ? style.getShortName() : null;
        final String revStyleShortName = revStyle != null ? revStyle.getShortName() : null;

      buffer.append( "<nobr>" );
      
      if( parms.getSortStyleShortName().equals(styleShortName) ) {
          buffer.append( "<img src=\"images/arrowdown.gif\" hspace=\"0\" vspace=\"0\" border=\"0\" alt=\"" );
          buffer.append( title );
          buffer.append( " Ascending Sort\"/>" );
          buffer.append( "&nbsp;<a href=\"" );
          buffer.append( this.makeLink(callback, parms, revStyle, favorite));
          buffer.append( "\" title=\"Reverse the sort\">" );
      } else if( parms.getSortStyleShortName().equals(revStyleShortName)) {
          buffer.append( "<img src=\"images/arrowup.gif\" hspace=\"0\" vspace=\"0\" border=\"0\" alt=\"" );
          buffer.append( title );
          buffer.append( " Descending Sort\"/>" );
          buffer.append( "&nbsp;<a href=\"" );
          buffer.append( this.makeLink(callback, parms, style, favorite ));
          buffer.append( "\" title=\"Reverse the sort\">" );
      } else {
          buffer.append( "<a href=\"" );
          buffer.append( this.makeLink(callback, parms, style, favorite ));
          buffer.append( "\" title=\"Sort by " );
          buffer.append( sortString );
          buffer.append( "\">" );   
      }

      buffer.append( title );
      buffer.append( "</a>" );

      buffer.append( "</nobr>" );

      return( buffer.toString() );
    }

    public String makeLink(FilterCallback callback,  NormalizedQueryParameters parms, OnmsFilterFavorite favorite ) {
      return callback.createLink(urlBase, parms, favorite);
    }


    public String makeLink(FilterCallback callback, final NormalizedQueryParameters parms, SortStyle sortStyle, OnmsFilterFavorite favorite ) {
        NormalizedQueryParameters newParms = new NormalizedQueryParameters(parms);
        newParms.setSortStyleShortName(sortStyle.getShortName());
        return this.makeLink(callback, newParms, favorite);
    }


    public String makeLink(FilterCallback callback, NormalizedQueryParameters parms, AcknowledgeType ackType, OnmsFilterFavorite favorite) {
        NormalizedQueryParameters newParms = new NormalizedQueryParameters(parms); // clone
        newParms.setAckType(ackType.toNormalizedAcknowledgeType());
        return this.makeLink(callback, newParms, favorite);
    }


    public String makeLink(FilterCallback callback, NormalizedQueryParameters parms, List<Filter> filters, OnmsFilterFavorite favorite) {
        NormalizedQueryParameters newParms = new NormalizedQueryParameters(parms); // clone;
        newParms.setFilters(filters);
        return this.makeLink(callback, newParms, favorite);
    }

    public String makeLink(FilterCallback callback, NormalizedQueryParameters parms, Filter filter, boolean add, OnmsFilterFavorite favorite ) {
        NormalizedQueryParameters newParms = new NormalizedQueryParameters(parms);
        List<Filter> newList = new ArrayList<Filter>( parms.getFilters());
        if( add ) {
            newList.add( filter );
        } else {
            newList.remove( filter );
        }
        newParms.setFilters(newList);
        return this.makeLink(callback, newParms, favorite);
    }

    public String[] getNodeLabels( String nodeLabel ) {
        nodeLabel = WebSecurityUtils.sanitizeString(nodeLabel);
        String[] labels = null;

        if( nodeLabel.length() > 32 ) {
            String shortLabel = nodeLabel.substring( 0, 31 ) + "...";                        
            labels = new String[] { shortLabel, nodeLabel };
        }
        else {
            labels = new String[] { nodeLabel, nodeLabel };
        }

        return( labels );
    }


  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/home/epousa/dev/opennms/target/opennms-32.0.0-SNAPSHOT/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425978670000L));
    _jspx_dependants.put("jar:file:/home/epousa/dev/opennms/target/opennms-32.0.0-SNAPSHOT/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425978670000L));
    _jspx_dependants.put("/WEB-INF/taglib.tld", Long.valueOf(1680078248000L));
    _jspx_dependants.put("file:/home/epousa/dev/opennms/target/opennms-32.0.0-SNAPSHOT/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1680080132000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("org.opennms.web.event.filter");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.opennms.web.admin.notification.noticeWizard.NotificationWizardServlet");
    _jspx_imports_classes.add("org.opennms.web.tags.filters.EventFilterCallback");
    _jspx_imports_classes.add("org.opennms.netmgt.model.OnmsFilterFavorite");
    _jspx_imports_classes.add("org.opennms.web.event.SortStyle");
    _jspx_imports_classes.add("org.opennms.web.filter.Filter");
    _jspx_imports_classes.add("org.opennms.web.filter.NormalizedQueryParameters");
    _jspx_imports_classes.add("org.opennms.web.api.Util");
    _jspx_imports_classes.add("org.opennms.web.api.Authentication");
    _jspx_imports_classes.add("org.opennms.web.tags.FavoriteTag");
    _jspx_imports_classes.add("org.opennms.web.tags.filters.FilterCallback");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("com.google.common.base.Strings");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("org.opennms.web.event.AcknowledgeType");
    _jspx_imports_classes.add("org.opennms.core.utils.WebSecurityUtils");
    _jspx_imports_classes.add("org.opennms.web.tags.select.FilterFavoriteSelectTagHandler");
    _jspx_imports_classes.add("org.opennms.web.servlet.XssRequestWrapper");
    _jspx_imports_classes.add("org.opennms.web.event.Event");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fonms_005ffavorite_0026_005fparameters_005ffavorite_005fdeleteFavoriteController_005fcreateFavoriteController_005fcontext_005fcallback_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fonms_005ffilters_0026_005fshowRemoveLink_005fshowAcknowledgeFilter_005fparameters_005ffavorite_005fcontext_005fcallback_005facknowledgeFilterSuffix_005facknowledgeFilterPrefix_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fonms_005ffavorite_0026_005fparameters_005ffavorite_005fdeleteFavoriteController_005fcreateFavoriteController_005fcontext_005fcallback_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fonms_005ffilters_0026_005fshowRemoveLink_005fshowAcknowledgeFilter_005fparameters_005ffavorite_005fcontext_005fcallback_005facknowledgeFilterSuffix_005facknowledgeFilterPrefix_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fonms_005ffavorite_0026_005fparameters_005ffavorite_005fdeleteFavoriteController_005fcreateFavoriteController_005fcontext_005fcallback_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fonms_005ffilters_0026_005fshowRemoveLink_005fshowAcknowledgeFilter_005fparameters_005ffavorite_005fcontext_005fcallback_005facknowledgeFilterSuffix_005facknowledgeFilterPrefix_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue.release();
    _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write('\n');
      out.write('\n');

	XssRequestWrapper req = new XssRequestWrapper(request);

    //required attributes
    Event[] events = (Event[])req.getAttribute( "events" );
    int eventCount = req.getAttribute( "eventCount" ) == null ? -1 : (Integer)req.getAttribute( "eventCount" );
    NormalizedQueryParameters parms = (NormalizedQueryParameters)req.getAttribute( "parms" );
    FilterCallback callback = (EventFilterCallback) req.getAttribute("callback");

    if( events == null || parms == null ) {
        throw new ServletException( "Missing either the events or parms request attribute." );
    }

    // optional bookmark
    final OnmsFilterFavorite favorite = (OnmsFilterFavorite) req.getAttribute("favorite");


    // Make 'action' the opposite of the current acknowledgement state
    String action = AcknowledgeType.ACKNOWLEDGED.getShortName();
    if (parms.getAckType() != null && parms.getAckType().equals(AcknowledgeType.ACKNOWLEDGED.toNormalizedAcknowledgeType())) {
    	action = AcknowledgeType.UNACKNOWLEDGED.getShortName();
    }

    pageContext.setAttribute("addPositiveFilter", "<i class=\"fa fa-plus-square-o\"></i>");
    pageContext.setAttribute("addNegativeFilter", "<i class=\"fa fa-minus-square-o\"></i>");
    pageContext.setAttribute("addBeforeFilter", "<i class=\"fa fa-toggle-right\"></i>");
    pageContext.setAttribute("addAfterFilter", "<i class=\"fa fa-toggle-left\"></i>");
    pageContext.setAttribute("filterFavoriteSelectTagHandler", new FilterFavoriteSelectTagHandler("All Events"));

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/includes/bootstrap.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("Event List", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("headTitle", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("List", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("headTitle", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("Events", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("breadcrumb", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("<a href= 'event/index' title='Events System Page'>Events</a>", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("breadcrumb", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("List", request.getCharacterEncoding()), out, false);
      out.write("\n");
      out.write("\n");
      out.write("  <script type=\"text/javascript\">\n");
      out.write("    function checkAllCheckboxes() {\n");
      out.write("       if( document.acknowledge_form.event.length ) {\n");
      out.write("         for( i = 0; i < document.acknowledge_form.event.length; i++ ) {\n");
      out.write("           document.acknowledge_form.event[i].checked = true\n");
      out.write("         }\n");
      out.write("       }\n");
      out.write("       else {\n");
      out.write("         document.acknowledge_form.event.checked = true\n");
      out.write("       }\n");
      out.write("\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function submitForm(anAction)\n");
      out.write("    {\n");
      out.write("        var isChecked = false\n");
      out.write("        var numChecked = 0;\n");
      out.write("\n");
      out.write("        if (document.acknowledge_form.event.length)\n");
      out.write("        {\n");
      out.write("            for( i = 0; i < document.acknowledge_form.event.length; i++ )\n");
      out.write("            {\n");
      out.write("              //make sure something is checked before proceeding\n");
      out.write("              if (document.acknowledge_form.event[i].checked)\n");
      out.write("              {\n");
      out.write("                isChecked=true;\n");
      out.write("                numChecked+=1;\n");
      out.write("              }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            if (isChecked && document.acknowledge_form.multiple)\n");
      out.write("            {\n");
      out.write("              if (numChecked == parseInt(document.acknowledge_form.event.length))\n");
      out.write("              {\n");
      out.write("                var newPageNum = parseInt(document.acknowledge_form.multiple.value) - 1;\n");
      out.write("                var findVal = \"multiple=\" + document.acknowledge_form.multiple.value;\n");
      out.write("                var replaceWith = \"multiple=\" + newPageNum;\n");
      out.write("                var tmpRedirect = document.acknowledge_form.redirectParms.value;\n");
      out.write("                document.acknowledge_form.redirectParms.value = tmpRedirect.replace(findVal, replaceWith);\n");
      out.write("                document.acknowledge_form.submit();\n");
      out.write("              }\n");
      out.write("              else\n");
      out.write("              {\n");
      out.write("                document.acknowledge_form.submit();\n");
      out.write("              }\n");
      out.write("            }\n");
      out.write("            else if (isChecked)\n");
      out.write("            {\n");
      out.write("              document.acknowledge_form.submit();\n");
      out.write("            }\n");
      out.write("            else\n");
      out.write("            {\n");
      out.write("                alert(\"Please check the events that you would like to \" + anAction + \".\");\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        else\n");
      out.write("        {\n");
      out.write("            if (document.acknowledge_form.event.checked)\n");
      out.write("            {\n");
      out.write("                document.acknowledge_form.submit();\n");
      out.write("            }\n");
      out.write("            else\n");
      out.write("            {\n");
      out.write("                alert(\"Please check the events that you would like to \" + anAction + \".\");\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function submitNewNotificationForm(uei) {\n");
      out.write("    	document.getElementById(\"uei\").value=uei;\n");
      out.write("    	document.add_notification_form.submit();\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function changeFavorite(selectElement) {\n");
      out.write("        var selectedOption = selectElement.options[selectElement.selectedIndex];\n");
      out.write("        var favoriteId = selectedOption.value.split(';')[0];\n");
      out.write("        var filter = selectedOption.value.split(';')[1];\n");
      out.write("        changeFavorite(favoriteId, filter);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function changeFavorite(favoriteId, filter) {\n");
      out.write("        window.location.href = \"");
      out.print(req.getContextPath());
      out.write("/event/list?favoriteId=\" + favoriteId + '&' + filter;\n");
      out.write("    }\n");
      out.write("  </script>\n");
      out.write("\n");
      out.write("	  <!-- hidden form for adding a new Notification -->\n");
      out.write("	  <form action=\"admin/notification/noticeWizard/notificationWizard\" method=\"post\" name=\"add_notification_form\">\n");
      out.write("        <input type=\"hidden\" name=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.parameterName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>\n");
      out.write("	  	<input type=\"hidden\" name=\"sourcePage\" value=\"");
      out.print(NotificationWizardServlet.SOURCE_PAGE_OTHER_WEBUI);
      out.write("\" />\n");
      out.write("	  	<input type=\"hidden\" name=\"uei\" id=\"uei\" value=\"\" /> <!-- Set by java script -->\n");
      out.write("	  </form>\n");
      out.write("\n");
      out.write("<div id=\"advancedSearchModal\" class=\"modal fade\" tabindex=\"-1\">\n");
      out.write("  <div class=\"modal-dialog modal-lg\">\n");
      out.write("    <div class=\"modal-content\">\n");
      out.write("      <div class=\"modal-body\">\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/includes/event-advquerypanel.jsp", out, false);
      out.write("\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div id=\"severityLegendModal\" class=\"modal fade\" tabindex=\"-1\">\n");
      out.write("  <div class=\"modal-dialog\">\n");
      out.write("    <div class=\"modal-content\">\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/event/severity.jsp", out, false);
      out.write("\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"row\">\n");
      out.write("<div class=\"col-md-12\">\n");
      out.write("<div class=\"form-group\">\n");
      out.write("  <!-- start menu -->\n");
      out.write("  <a class=\"btn btn-secondary\" href=\"");
      out.print(this.makeLink(callback, parms, new ArrayList<Filter>(), favorite));
      out.write("\">View all events</a>\n");
      out.write("  <button type=\"button\" class=\"btn btn-secondary\" onClick=\"$('#advancedSearchModal').modal()\">Search</button>\n");
      out.write("  <button type=\"button\" class=\"btn btn-secondary\" onClick=\"$('#severityLegendModal').modal()\">Severity Legend</button>\n");
      out.write("        ");
 if( req.isUserInRole( Authentication.ROLE_ADMIN ) || !req.isUserInRole( Authentication.ROLE_READONLY ) ) { 
      out.write("\n");
      out.write("          ");
 if ( eventCount > 0 ) { 
      out.write("\n");
      out.write("              <!-- hidden form for acknowledging the result set -->\n");
      out.write("              <form style=\"display:inline\" action=\"event/acknowledgeByFilter\" method=\"post\" name=\"acknowledge_by_filter_form\">\n");
      out.write("                <input type=\"hidden\" name=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.parameterName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>\n");
      out.write("                <input type=\"hidden\" name=\"redirectParms\" value=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      boolean _jspx_th_c_005fout_005f0_reused = false;
      try {
        _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fout_005f0.setParent(null);
        // /WEB-INF/jsp/event/list.jsp(231,65) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fout_005f0.setValue(req.getQueryString());
        int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
        if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
        _jspx_th_c_005fout_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f0_reused);
      }
      out.write("\" />\n");
      out.write("                <input type=\"hidden\" name=\"actionCode\" value=\"");
      out.print(action);
      out.write("\" />\n");
      out.write("                ");
      out.print(org.opennms.web.api.Util.makeHiddenTags(req));
      out.write("\n");
      out.write("              </form>\n");
      out.write("\n");
      out.write("              ");
 if( AcknowledgeType.UNACKNOWLEDGED.toNormalizedAcknowledgeType().equals(parms.getAckType()) ) { 
      out.write("\n");
      out.write("                <button type=\"button\" class=\"btn btn-secondary\" onclick=\"if (confirm('Are you sure you want to acknowledge all events in the current search including those not shown on your screen?  (");
      out.print(eventCount);
      out.write(" total events)')) {  document.acknowledge_by_filter_form.submit(); }\" title=\"Acknowledge all events that match the current search constraints, even those not shown on the screen\">Acknowledge entire search</button>\n");
      out.write("              ");
 } else { 
      out.write("\n");
      out.write("                <button type=\"button\" class=\"btn btn-secondary\" onclick=\"if (confirm('Are you sure you want to unacknowledge all events in the current search including those not shown on your screen)?  (");
      out.print(eventCount);
      out.write(" total events)')) { document.acknowledge_by_filter_form.submit(); }\" title=\"Unacknowledge all events that match the current search constraints, even those not shown on the screen\">Unacknowledge entire search</button>\n");
      out.write("              ");
 } 
      out.write("\n");
      out.write("          ");
 } 
      out.write("\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("      <!-- end menu -->\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("<div class=\"row\">\n");
      out.write("    <div class=\"col form-group\">\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/includes/event-querypanel.jsp", out, false);
      out.write("\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write('\n');
      if (_jspx_meth_onms_005ffavorite_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"row\">\n");
      out.write("<br/>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"row\">\n");
      out.write("  <div class=\"col-sm-6 col-md-3\">\n");
      out.write("  <div class=\"input-group\">\n");
      out.write("    <span class=\"input-group-prepend\">\n");
      out.write("      ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("    </span>\n");
      out.write("    <!-- Use background-color:white to make it look less disabled -->\n");
      out.write("    <input type=\"text\" class=\"form-control\" style=\"background-color:white;\" readonly placeholder=\"Unsaved filter\" value=\"");
      if (_jspx_meth_c_005fout_005f1(_jspx_page_context))
        return;
      out.write("\"/>\n");
      out.write("    <div class=\"input-group-append\">\n");
      out.write("      <button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-expanded=\"false\"></button>\n");
      out.write("        <!-- I put margin: 0px here because the margin gap was causing the menu to disappear before you could get the mouse on it -->\n");
      out.write("        <ul class=\"dropdown-menu dropdown-menu-right\" style=\"margin: 0px;\" role=\"menu\">\n");
      out.write("          ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("          ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("          <li class=\"dropdown-item\"><a onclick=\"clearFilters()\">Clear filters</a></li>\n");
      out.write("        </ul>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("  </div>\n");
      out.write("\n");
      out.write("            ");
 if( parms.getFilters().size() > 0 || AcknowledgeType.UNACKNOWLEDGED.toNormalizedAcknowledgeType().equals(parms.getAckType()) || AcknowledgeType.ACKNOWLEDGED.toNormalizedAcknowledgeType().equals(parms.getAckType()) ) { 
      out.write("\n");
      out.write("              <div class=\"col-sm-6 col-md-9\">\n");
      out.write("                    ");
      if (_jspx_meth_onms_005ffilters_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("              </div>\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"row\">\n");
      out.write("<br/>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("            ");
      if (_jspx_meth_onms_005falert_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\n");
      out.write("            ");
 if( events.length > 0 ) { 
      out.write("\n");
      out.write("              ");
 String baseUrl = this.makeLink(callback, parms, favorite); 
      out.write("\n");
      out.write("              ");
 if ( eventCount == -1 ) { 
      out.write("\n");
      out.write("                ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/includes/resultsIndexNoCount.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("itemCount", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(events.length), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("baseurl", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(baseUrl), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("limit", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(parms.getLimit()), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("multiple", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(parms.getMultiple()), request.getCharacterEncoding()), out, false);
      out.write("\n");
      out.write("              ");
 } else { 
      out.write("\n");
      out.write("                ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/includes/resultsIndex.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("count", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(eventCount), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("baseurl", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(baseUrl), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("limit", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(parms.getLimit()), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("multiple", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(parms.getMultiple()), request.getCharacterEncoding()), out, false);
      out.write("\n");
      out.write("              ");
 } 
      out.write("\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("    ");
 if( req.isUserInRole( Authentication.ROLE_ADMIN ) || !req.isUserInRole( Authentication.ROLE_READONLY ) ) { 
      out.write("\n");
      out.write("      <form action=\"event/acknowledge\" method=\"post\" name=\"acknowledge_form\">\n");
      out.write("        <input type=\"hidden\" name=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.parameterName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>\n");
      out.write("        <input type=\"hidden\" name=\"redirectParms\" value=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f3 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      boolean _jspx_th_c_005fout_005f3_reused = false;
      try {
        _jspx_th_c_005fout_005f3.setPageContext(_jspx_page_context);
        _jspx_th_c_005fout_005f3.setParent(null);
        // /WEB-INF/jsp/event/list.jsp(351,57) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fout_005f3.setValue(req.getQueryString());
        int _jspx_eval_c_005fout_005f3 = _jspx_th_c_005fout_005f3.doStartTag();
        if (_jspx_th_c_005fout_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f3);
        _jspx_th_c_005fout_005f3_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f3_reused);
      }
      out.write("\" />\n");
      out.write("        <input type=\"hidden\" name=\"actionCode\" value=\"");
      out.print(action);
      out.write("\" />\n");
      out.write("        ");
      out.print(org.opennms.web.api.Util.makeHiddenTags(req));
      out.write("\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("    ");
 String acknowledgeEvent = System.getProperty("opennms.eventlist.acknowledge"); 
      out.write("\n");
      out.write("\n");
      out.write("      <table class=\"table table-sm severity\">\n");
      out.write("        <thead>\n");
      out.write("        <tr>\n");
      out.write("          ");
 if( "true".equals(acknowledgeEvent) ) { 
      out.write("\n");
      out.write("						");
 if( req.isUserInRole( Authentication.ROLE_ADMIN ) || !req.isUserInRole( Authentication.ROLE_READONLY ) ) { 
      out.write("\n");
      out.write("							");
 if ( AcknowledgeType.UNACKNOWLEDGED.toNormalizedAcknowledgeType().equals(parms.getAckType()) ) { 
      out.write("\n");
      out.write("							<th width=\"1%\">Ack</th>\n");
      out.write("							");
 } else { 
      out.write("\n");
      out.write("							<th width=\"1%\">UnAck</th>\n");
      out.write("							");
 } 
      out.write("\n");
      out.write("						");
 } else { 
      out.write("\n");
      out.write("							<th width=\"1%\">&nbsp;</th>\n");
      out.write("						");
 } 
      out.write("\n");
      out.write("          ");
 } 
      out.write("\n");
      out.write("          <th width=\"01%\">");
      out.print(this.makeSortLink(callback, parms, SortStyle.ID,            SortStyle.REVERSE_ID,            "id",           "ID"                  , favorite));
      out.write("</th>\n");
      out.write("          <th width=\"06%\">");
      out.print(this.makeSortLink(callback, parms, SortStyle.SEVERITY,      SortStyle.REVERSE_SEVERITY,      "severity",     "Severity"            , favorite));
      out.write("</th>\n");
      out.write("          <th width=\"10%\">");
      out.print(this.makeSortLink(callback, parms, SortStyle.TIME,          SortStyle.REVERSE_TIME,          "time",         "Time"                , favorite));
      out.write("</th>\n");
      out.write("          <th width=\"05%\">");
      out.print(this.makeSortLink(callback, parms, SortStyle.LOCATION,      SortStyle.REVERSE_LOCATION,      "location",     "Source&nbsp;Location", favorite));
      out.write("</th>\n");
      out.write("          <th width=\"19%\">");
      out.print(this.makeSortLink(callback, parms, SortStyle.SYSTEMID,      SortStyle.REVERSE_SYSTEMID,      "systemid",     "System-ID"           , favorite));
      out.write("</th>\n");
      out.write("          <th width=\"18%\">");
      out.print(this.makeSortLink(callback, parms, SortStyle.NODE,          SortStyle.REVERSE_NODE,          "node",         "Node"                , favorite));
      out.write("</th>\n");
      out.write("          <th width=\"05%\">");
      out.print(this.makeSortLink(callback, parms, SortStyle.NODE_LOCATION, SortStyle.REVERSE_NODE_LOCATION, "nodelocation", "Node&nbsp;Location"  , favorite));
      out.write("</th>\n");
      out.write("          <th width=\"14%\">");
      out.print(this.makeSortLink(callback, parms, SortStyle.INTERFACE,     SortStyle.REVERSE_INTERFACE,     "interface",    "Interface"           , favorite));
      out.write("</th>\n");
      out.write("          <th width=\"8%\">");
      out.print(this.makeSortLink(callback, parms, SortStyle.SERVICE,       SortStyle.REVERSE_SERVICE,       "service",      "Service"              , favorite));
      out.write("</th>\n");
      out.write("          <th width=\"5%\">");
      out.print(this.makeSortLink(callback, parms, SortStyle.ALARMID,       SortStyle.REVERSE_ALARMID,       "alarm",      "Alarm ID"                  , favorite));
      out.write("</th>\n");
      out.write("        </tr>\n");
      out.write("        </thead>     \n");
      out.write("      ");
 for( int i=0; i < events.length; i++ ) {
        Event event = events[i];
      	pageContext.setAttribute("event", event);
      
      out.write("\n");
      out.write("      \n");
      out.write("        <tr valign=\"top\" class=\"severity-");
      out.print(events[i].getSeverity().getLabel());
      out.write("\">\n");
      out.write("          ");
 if( "true".equals(acknowledgeEvent) ) { 
      out.write("\n");
      out.write("						");
 if( request.isUserInRole( Authentication.ROLE_ADMIN ) || !req.isUserInRole( Authentication.ROLE_READONLY ) ) { 
      out.write("\n");
      out.write("						<td valign=\"top\" rowspan=\"3\" class=\"divider\">\n");
      out.write("									<input type=\"checkbox\" name=\"event\" value=\"");
      out.print(events[i].getId());
      out.write("\" /> \n");
      out.write("							</td>\n");
      out.write("							");
 } else { 
      out.write("\n");
      out.write("								<td valign=\"top\" rowspan=\"3\" class=\"divider\">&nbsp;</td>\n");
      out.write("							");
 } 
      out.write("\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("          <td valign=\"top\" rowspan=\"3\" class=\"divider\"><a href=\"event/detail.jsp?id=");
      out.print(events[i].getId());
      out.write('"');
      out.write('>');
      out.print(events[i].getId());
      out.write("</a></td>\n");
      out.write("          \n");
      out.write("          <td valign=\"top\" rowspan=\"3\" class=\"divider bright\"> \n");
      out.write("            <nobr>\n");
      out.write("            <strong>");
      out.print( events[i].getSeverity().getLabel() );
      out.write("</strong>\n");
      out.write("            ");
 Filter severityFilter = new SeverityFilter(events[i].getSeverity()); 
      out.write("      \n");
      out.write("            ");
 if( !parms.getFilters().contains(severityFilter)) { 
      out.write("\n");
      out.write("                <a href=\"");
      out.print(this.makeLink(callback, parms, severityFilter, true, favorite));
      out.write("\" class=\"filterLink\" title=\"Show only events with this severity\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addPositiveFilter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\n");
      out.write("                <a href=\"");
      out.print(this.makeLink(callback, parms, new NegativeSeverityFilter(events[i].getSeverity()), true, favorite));
      out.write("\" class=\"filterLink\" title=\"Do not show events with this severity\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addNegativeFilter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("            </nobr>\n");
      out.write("          </td>\n");
      out.write("          <td class=\"divider\">\n");
      out.write("            <nobr>\n");
      out.write("                ");
      if (_jspx_meth_onms_005fdatetime_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("              <a href=\"");
      out.print(this.makeLink(callback, parms, new AfterDateFilter(events[i].getTime()), true, favorite));
      out.write("\"  class=\"filterLink\" title=\"Only show events occurring after this one\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addAfterFilter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\n");
      out.write("              <a href=\"");
      out.print(this.makeLink(callback, parms, new BeforeDateFilter(events[i].getTime()), true, favorite));
      out.write("\" class=\"filterLink\" title=\"Only show events occurring before this one\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addBeforeFilter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\n");
      out.write("            </nobr>\n");
      out.write("          </td>\n");
      out.write("          <td class=\"divider\">\n");
      out.write("              ");
 if(!Strings.isNullOrEmpty(events[i].getLocation())) { 
      out.write("\n");
      out.write("              ");
 Filter locationFilter = new LocationFilter(events[i].getLocation()); 
      out.write("\n");
      out.write("              ");
      out.print(events[i].getLocation());
      out.write("</a>\n");
      out.write("\n");
      out.write("              ");
 if( !parms.getFilters().contains(locationFilter) ) { 
      out.write("\n");
      out.write("              <nobr>\n");
      out.write("                  <a href=\"");
      out.print(this.makeLink(callback, parms, locationFilter, true, favorite));
      out.write("\" class=\"filterLink\" title=\"Show only events for this location\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addPositiveFilter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\n");
      out.write("                  <a href=\"");
      out.print(this.makeLink(callback, parms, new NegativeLocationFilter(events[i].getLocation()), true, favorite));
      out.write("\" class=\"filterLink\" title=\"Do not show events for this location\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addNegativeFilter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\n");
      out.write("              </nobr>\n");
      out.write("              ");
 } 
      out.write("\n");
      out.write("              ");
 } else { 
      out.write("\n");
      out.write("              &nbsp;\n");
      out.write("              ");
 } 
      out.write("\n");
      out.write("          </td>\n");
      out.write("          <td class=\"divider\">\n");
      out.write("              ");
 if(!Strings.isNullOrEmpty(events[i].getSystemId())) { 
      out.write("\n");
      out.write("              ");
 Filter systemIdFilter = new SystemIdFilter(events[i].getSystemId()); 
      out.write("\n");
      out.write("              ");
      out.print(events[i].getSystemId());
      out.write("</a>\n");
      out.write("\n");
      out.write("              ");
 if( !parms.getFilters().contains(systemIdFilter) ) { 
      out.write("\n");
      out.write("              <nobr>\n");
      out.write("                  <a href=\"");
      out.print(this.makeLink(callback, parms, systemIdFilter, true, favorite));
      out.write("\" class=\"filterLink\" title=\"Show only events for this system Id\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addPositiveFilter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\n");
      out.write("                  <a href=\"");
      out.print(this.makeLink(callback, parms, new NegativeSystemIdFilter(events[i].getSystemId()), true, favorite));
      out.write("\" class=\"filterLink\" title=\"Do not show events for this system Id\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addNegativeFilter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\n");
      out.write("              </nobr>\n");
      out.write("              ");
 } 
      out.write("\n");
      out.write("              ");
 } else { 
      out.write("\n");
      out.write("              &nbsp;\n");
      out.write("              ");
 } 
      out.write("\n");
      out.write("          </td>\n");
      out.write("          <td class=\"divider\">\n");
      out.write("	        ");
 if(events[i].getNodeId() != 0 && events[i].getNodeLabel()!= null ) { 
      out.write("\n");
      out.write("              ");
 Filter nodeFilter = new NodeFilter(events[i].getNodeId(), pageContext.getServletContext()); 
      out.write("\n");
      out.write("              ");
 String[] labels = this.getNodeLabels( events[i].getNodeLabel() ); 
      out.write("\n");
      out.write("              <a href=\"element/node.jsp?node=");
      out.print(events[i].getNodeId());
      out.write("\" title=\"");
      out.print(labels[1]);
      out.write('"');
      out.write('>');
      out.print(labels[0]);
      out.write("</a>\n");
      out.write("                    \n");
      out.write("              ");
 if( !parms.getFilters().contains(nodeFilter) ) { 
      out.write("\n");
      out.write("                <nobr>\n");
      out.write("                  <a href=\"");
      out.print(this.makeLink(callback, parms, nodeFilter, true, favorite));
      out.write("\" class=\"filterLink\" title=\"Show only events on this node\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addPositiveFilter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\n");
      out.write("                  <a href=\"");
      out.print(this.makeLink(callback, parms, new NegativeNodeFilter(events[i].getNodeId(), pageContext.getServletContext()), true, favorite));
      out.write("\" class=\"filterLink\" title=\"Do not show events for this node\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addNegativeFilter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\n");
      out.write("                </nobr>\n");
      out.write("              ");
 } 
      out.write("\n");
      out.write("            ");
 } else { 
      out.write("\n");
      out.write("              &nbsp;\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("          </td>\n");
      out.write("          <td class=\"divider\">\n");
      out.write("              ");
 if(!Strings.isNullOrEmpty(events[i].getNodeLocation())) { 
      out.write("\n");
      out.write("              ");
 Filter nodeLocationFilter = new NodeLocationFilter(events[i].getNodeLocation()); 
      out.write("\n");
      out.write("              ");
      out.print(events[i].getNodeLocation());
      out.write("</a>\n");
      out.write("\n");
      out.write("              ");
 if( !parms.getFilters().contains(nodeLocationFilter) ) { 
      out.write("\n");
      out.write("              <nobr>\n");
      out.write("                  <a href=\"");
      out.print(this.makeLink(callback, parms, nodeLocationFilter, true, favorite));
      out.write("\" class=\"filterLink\" title=\"Show only events for this node location\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addPositiveFilter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\n");
      out.write("                  <a href=\"");
      out.print(this.makeLink(callback, parms, new NegativeNodeLocationFilter(events[i].getNodeLocation()), true, favorite));
      out.write("\" class=\"filterLink\" title=\"Do not show events for this node location\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addNegativeFilter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\n");
      out.write("              </nobr>\n");
      out.write("              ");
 } 
      out.write("\n");
      out.write("              ");
 } else { 
      out.write("\n");
      out.write("              &nbsp;\n");
      out.write("              ");
 } 
      out.write("\n");
      out.write("          </td>\n");
      out.write("          <td class=\"divider\">\n");
      out.write("            ");
 if(events[i].getIpAddress() != null ) { 
      out.write("\n");
      out.write("              ");
 Filter intfFilter = new InterfaceFilter(events[i].getIpAddress()); 
      out.write("\n");
      out.write("              ");
 if( events[i].getNodeId() != 0 ) { 
      out.write("\n");
      out.write("                ");
      //  c:url
      org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
      boolean _jspx_th_c_005furl_005f0_reused = false;
      try {
        _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005furl_005f0.setParent(null);
        // /WEB-INF/jsp/event/list.jsp(484,16) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005furl_005f0.setVar("interfaceLink");
        // /WEB-INF/jsp/event/list.jsp(484,16) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005furl_005f0.setValue("element/interface.jsp");
        int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
        if (_jspx_eval_c_005furl_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_c_005furl_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_c_005furl_005f0);
          }
          do {
            out.write("\n");
            out.write("                  ");
            //  c:param
            org.apache.taglibs.standard.tag.rt.core.ParamTag _jspx_th_c_005fparam_005f0 = (org.apache.taglibs.standard.tag.rt.core.ParamTag) _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ParamTag.class);
            boolean _jspx_th_c_005fparam_005f0_reused = false;
            try {
              _jspx_th_c_005fparam_005f0.setPageContext(_jspx_page_context);
              _jspx_th_c_005fparam_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005furl_005f0);
              // /WEB-INF/jsp/event/list.jsp(485,18) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fparam_005f0.setName("node");
              // /WEB-INF/jsp/event/list.jsp(485,18) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fparam_005f0.setValue(String.valueOf(events[i].getNodeId()));
              int _jspx_eval_c_005fparam_005f0 = _jspx_th_c_005fparam_005f0.doStartTag();
              if (_jspx_th_c_005fparam_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.reuse(_jspx_th_c_005fparam_005f0);
              _jspx_th_c_005fparam_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fparam_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fparam_005f0_reused);
            }
            out.write("\n");
            out.write("                  ");
            //  c:param
            org.apache.taglibs.standard.tag.rt.core.ParamTag _jspx_th_c_005fparam_005f1 = (org.apache.taglibs.standard.tag.rt.core.ParamTag) _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ParamTag.class);
            boolean _jspx_th_c_005fparam_005f1_reused = false;
            try {
              _jspx_th_c_005fparam_005f1.setPageContext(_jspx_page_context);
              _jspx_th_c_005fparam_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005furl_005f0);
              // /WEB-INF/jsp/event/list.jsp(486,18) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fparam_005f1.setName("intf");
              // /WEB-INF/jsp/event/list.jsp(486,18) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fparam_005f1.setValue(events[i].getIpAddress());
              int _jspx_eval_c_005fparam_005f1 = _jspx_th_c_005fparam_005f1.doStartTag();
              if (_jspx_th_c_005fparam_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.reuse(_jspx_th_c_005fparam_005f1);
              _jspx_th_c_005fparam_005f1_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fparam_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fparam_005f1_reused);
            }
            out.write("\n");
            out.write("                ");
            int evalDoAfterBody = _jspx_th_c_005furl_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_c_005furl_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue.reuse(_jspx_th_c_005furl_005f0);
        _jspx_th_c_005furl_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
      }
      out.write("\n");
      out.write("                <a href=\"");
      if (_jspx_meth_c_005fout_005f4(_jspx_page_context))
        return;
      out.write("\" title=\"More info on this interface\">");
      out.print(events[i].getIpAddress());
      out.write("</a>\n");
      out.write("              ");
 } else { 
      out.write("\n");
      out.write("                 ");
      out.print(events[i].getIpAddress());
      out.write("\n");
      out.write("              ");
 } 
      out.write("\n");
      out.write("              ");
 if( !parms.getFilters().contains(intfFilter) ) { 
      out.write("\n");
      out.write("                <nobr>\n");
      out.write("                  <a href=\"");
      out.print(this.makeLink(callback, parms, intfFilter, true, favorite));
      out.write("\" class=\"filterLink\" title=\"Show only events on this IP address\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addPositiveFilter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\n");
      out.write("                  <a href=\"");
      out.print(this.makeLink(callback, parms, new NegativeInterfaceFilter(events[i].getIpAddress()), true, favorite));
      out.write("\" class=\"filterLink\" title=\"Do not show events for this interface\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addNegativeFilter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\n");
      out.write("                </nobr>\n");
      out.write("              ");
 } 
      out.write("\n");
      out.write("            ");
 } else { 
      out.write("\n");
      out.write("              &nbsp;\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("          </td>\n");
      out.write("          <td class=\"divider\">\n");
      out.write("            ");
 if(events[i].getServiceName() != null && events[i].getServiceName() != "") { 
      out.write("\n");
      out.write("              ");
 Filter serviceFilter = new ServiceFilter(events[i].getServiceId(), pageContext.getServletContext()); 
      out.write("\n");
      out.write("              ");
 if( events[i].getNodeId() != 0 && events[i].getIpAddress() != null ) { 
      out.write("\n");
      out.write("                ");
      //  c:url
      org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
      boolean _jspx_th_c_005furl_005f1_reused = false;
      try {
        _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
        _jspx_th_c_005furl_005f1.setParent(null);
        // /WEB-INF/jsp/event/list.jsp(506,16) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005furl_005f1.setVar("serviceLink");
        // /WEB-INF/jsp/event/list.jsp(506,16) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005furl_005f1.setValue("element/service.jsp");
        int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
        if (_jspx_eval_c_005furl_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_c_005furl_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_c_005furl_005f1);
          }
          do {
            out.write("\n");
            out.write("                  ");
            //  c:param
            org.apache.taglibs.standard.tag.rt.core.ParamTag _jspx_th_c_005fparam_005f2 = (org.apache.taglibs.standard.tag.rt.core.ParamTag) _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ParamTag.class);
            boolean _jspx_th_c_005fparam_005f2_reused = false;
            try {
              _jspx_th_c_005fparam_005f2.setPageContext(_jspx_page_context);
              _jspx_th_c_005fparam_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005furl_005f1);
              // /WEB-INF/jsp/event/list.jsp(507,18) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fparam_005f2.setName("node");
              // /WEB-INF/jsp/event/list.jsp(507,18) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fparam_005f2.setValue(String.valueOf(events[i].getNodeId()));
              int _jspx_eval_c_005fparam_005f2 = _jspx_th_c_005fparam_005f2.doStartTag();
              if (_jspx_th_c_005fparam_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.reuse(_jspx_th_c_005fparam_005f2);
              _jspx_th_c_005fparam_005f2_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fparam_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fparam_005f2_reused);
            }
            out.write("\n");
            out.write("                  ");
            //  c:param
            org.apache.taglibs.standard.tag.rt.core.ParamTag _jspx_th_c_005fparam_005f3 = (org.apache.taglibs.standard.tag.rt.core.ParamTag) _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ParamTag.class);
            boolean _jspx_th_c_005fparam_005f3_reused = false;
            try {
              _jspx_th_c_005fparam_005f3.setPageContext(_jspx_page_context);
              _jspx_th_c_005fparam_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005furl_005f1);
              // /WEB-INF/jsp/event/list.jsp(508,18) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fparam_005f3.setName("intf");
              // /WEB-INF/jsp/event/list.jsp(508,18) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fparam_005f3.setValue(events[i].getIpAddress());
              int _jspx_eval_c_005fparam_005f3 = _jspx_th_c_005fparam_005f3.doStartTag();
              if (_jspx_th_c_005fparam_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.reuse(_jspx_th_c_005fparam_005f3);
              _jspx_th_c_005fparam_005f3_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fparam_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fparam_005f3_reused);
            }
            out.write("\n");
            out.write("                  ");
            //  c:param
            org.apache.taglibs.standard.tag.rt.core.ParamTag _jspx_th_c_005fparam_005f4 = (org.apache.taglibs.standard.tag.rt.core.ParamTag) _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ParamTag.class);
            boolean _jspx_th_c_005fparam_005f4_reused = false;
            try {
              _jspx_th_c_005fparam_005f4.setPageContext(_jspx_page_context);
              _jspx_th_c_005fparam_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005furl_005f1);
              // /WEB-INF/jsp/event/list.jsp(509,18) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fparam_005f4.setName("service");
              // /WEB-INF/jsp/event/list.jsp(509,18) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fparam_005f4.setValue(String.valueOf(events[i].getServiceId()));
              int _jspx_eval_c_005fparam_005f4 = _jspx_th_c_005fparam_005f4.doStartTag();
              if (_jspx_th_c_005fparam_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.reuse(_jspx_th_c_005fparam_005f4);
              _jspx_th_c_005fparam_005f4_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fparam_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fparam_005f4_reused);
            }
            out.write("\n");
            out.write("                ");
            int evalDoAfterBody = _jspx_th_c_005furl_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_c_005furl_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue.reuse(_jspx_th_c_005furl_005f1);
        _jspx_th_c_005furl_005f1_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f1, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f1_reused);
      }
      out.write("\n");
      out.write("                <a href=\"");
      if (_jspx_meth_c_005fout_005f5(_jspx_page_context))
        return;
      out.write("\" title=\"More info on this service\">");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f6 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      boolean _jspx_th_c_005fout_005f6_reused = false;
      try {
        _jspx_th_c_005fout_005f6.setPageContext(_jspx_page_context);
        _jspx_th_c_005fout_005f6.setParent(null);
        // /WEB-INF/jsp/event/list.jsp(511,92) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fout_005f6.setValue(events[i].getServiceName());
        int _jspx_eval_c_005fout_005f6 = _jspx_th_c_005fout_005f6.doStartTag();
        if (_jspx_th_c_005fout_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f6);
        _jspx_th_c_005fout_005f6_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f6, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f6_reused);
      }
      out.write("</a>\n");
      out.write("              ");
 } else { 
      out.write("\n");
      out.write("                ");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f7 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      boolean _jspx_th_c_005fout_005f7_reused = false;
      try {
        _jspx_th_c_005fout_005f7.setPageContext(_jspx_page_context);
        _jspx_th_c_005fout_005f7.setParent(null);
        // /WEB-INF/jsp/event/list.jsp(513,16) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fout_005f7.setValue(events[i].getServiceName());
        int _jspx_eval_c_005fout_005f7 = _jspx_th_c_005fout_005f7.doStartTag();
        if (_jspx_th_c_005fout_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f7);
        _jspx_th_c_005fout_005f7_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f7, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f7_reused);
      }
      out.write("\n");
      out.write("              ");
 } 
      out.write("\n");
      out.write("              ");
 if( !parms.getFilters().contains(serviceFilter)) { 
      out.write("\n");
      out.write("                <nobr>\n");
      out.write("                  <a href=\"");
      out.print(this.makeLink(callback, parms, serviceFilter, true, favorite));
      out.write("\" class=\"filterLink\" title=\"Show only events with this service type\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addPositiveFilter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\n");
      out.write("                  <a href=\"");
      out.print(this.makeLink(callback, parms, new NegativeServiceFilter(events[i].getServiceId(), pageContext.getServletContext()), true, favorite));
      out.write("\" class=\"filterLink\" title=\"Do not show events for this service\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addNegativeFilter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\n");
      out.write("                </nobr>\n");
      out.write("              ");
 } 
      out.write("                            \n");
      out.write("            ");
 } else { 
      out.write("\n");
      out.write("              &nbsp;\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("          </td>\n");
      out.write("          <td>\n");
      out.write("            ");
 if (events[i].getAlarmId() != null && events[i].getAlarmId().intValue() != 0) { 
      out.write("\n");
      out.write("              <a href=\"alarm/detail.htm?id=");
      out.print(events[i].getAlarmId());
      out.write('"');
      out.write('>');
      out.print(events[i].getAlarmId());
      out.write("</a>\n");
      out.write("            ");
 } else { 
      out.write("\n");
      out.write("              &nbsp;\n");
      out.write("            ");
 }  
      out.write("\n");
      out.write("          </td>\n");
      out.write("        </tr>\n");
      out.write("        \n");
      out.write("        <tr valign=\"top\" class=\"severity-");
      out.print( events[i].getSeverity().getLabel() );
      out.write("\">\n");
      out.write("          <td colspan=\"8\">\n");
      out.write("            ");
 if(events[i].getUei() != null) { 
      out.write("\n");
      out.write("              ");
 Filter exactUEIFilter = new ExactUEIFilter(events[i].getUei()); 
      out.write("\n");
      out.write("                ");
      out.print(events[i].getUei());
      out.write("\n");
      out.write("              ");
 if( !parms.getFilters().contains(exactUEIFilter)) { 
      out.write("\n");
      out.write("                <nobr>\n");
      out.write("                  <a href=\"");
      out.print(this.makeLink(callback, parms, exactUEIFilter, true, favorite));
      out.write("\" class=\"filterLink\" title=\"Show only events with this UEI\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addPositiveFilter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\n");
      out.write("                  <a href=\"");
      out.print(this.makeLink(callback, parms, new NegativeExactUEIFilter(events[i].getUei()), true, favorite));
      out.write("\" class=\"filterLink\" title=\"Do not show events for this UEI\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addNegativeFilter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\n");
      out.write("                </nobr>\n");
      out.write("              ");
 } 
      out.write("\n");
      out.write("              ");
 if (req.isUserInRole(Authentication.ROLE_ADMIN)) { 
      out.write("\n");
      out.write("               	  <a href=\"javascript:void()\" onclick=\"submitNewNotificationForm('");
      out.print(events[i].getUei());
      out.write("');\" title=\"Edit notifications for this Event UEI\">Edit notifications for event</a>\n");
      out.write("              ");
 } 
      out.write("\n");
      out.write("            ");
 } else { 
      out.write("\n");
      out.write("              &nbsp;\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("          </td>\n");
      out.write("        </tr>\n");
      out.write("       \n");
      out.write("        <tr valign=\"top\" class=\"severity-");
      out.print( events[i].getSeverity().getLabel() );
      out.write("\">\n");
      out.write("          <td colspan=\"8\">");
      out.print(WebSecurityUtils.sanitizeString(events[i].getLogMessage(), true));
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("       \n");
      out.write("      ");
 } /*end for*/
      out.write("\n");
      out.write("      </table>\n");
      out.write("        \n");
      out.write("        <p>");
      out.print(events.length);
      out.write(" events\n");
      out.write("          ");
 
          if( (req.isUserInRole( Authentication.ROLE_ADMIN ) || !req.isUserInRole( Authentication.ROLE_READONLY )) && "true".equals(acknowledgeEvent)) { 
      out.write("\n");
      out.write("            ");
 if( AcknowledgeType.UNACKNOWLEDGED.toNormalizedAcknowledgeType().equals(parms.getAckType()) ) { 
      out.write("\n");
      out.write("              <input class=\"btn btn-sm btn-primary\" type=\"button\" value=\"Acknowledge Events\" onClick=\"submitForm('");
      out.print( AcknowledgeType.UNACKNOWLEDGED.getShortName() );
      out.write("')\"/>\n");
      out.write("              <input class=\"btn btn-sm btn-secondary\" TYPE=\"button\" VALUE=\"Select All\" onClick=\"checkAllCheckboxes()\"/>\n");
      out.write("              <input class=\"btn btn-sm btn-secondary\" TYPE=\"reset\" />\n");
      out.write("            ");
 } else if( AcknowledgeType.ACKNOWLEDGED.toNormalizedAcknowledgeType().equals(parms.getAckType()) ) { 
      out.write("\n");
      out.write("              <input class=\"btn btn-sm btn-primary\" type=\"button\" value=\"Unacknowledge Events\" onClick=\"submitForm('");
      out.print( AcknowledgeType.ACKNOWLEDGED.getShortName() );
      out.write("')\"/>\n");
      out.write("              <input class=\"btn btn-sm btn-secondary\" TYPE=\"button\" VALUE=\"Select All\" onClick=\"checkAllCheckboxes()\"/>\n");
      out.write("              <input class=\"btn btn-sm btn-secondary\" TYPE=\"reset\" />\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("          ");
 } 
      out.write("\n");
      out.write("        </p>\n");
      out.write("      </form>\n");
      out.write("\n");
      out.write("            ");
 if( events.length > 0 ) { 
      out.write("\n");
      out.write("              ");
 String baseUrl = this.makeLink(callback, parms, favorite); 
      out.write("\n");
      out.write("              ");
 if ( eventCount == -1 ) { 
      out.write("\n");
      out.write("                ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/includes/resultsIndexNoCount.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("itemCount", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(events.length), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("baseurl", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(baseUrl), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("limit", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(parms.getLimit()), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("multiple", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(parms.getMultiple()), request.getCharacterEncoding()), out, false);
      out.write("\n");
      out.write("              ");
 } else { 
      out.write("\n");
      out.write("                ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/includes/resultsIndex.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("count", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(eventCount), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("baseurl", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(baseUrl), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("limit", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(parms.getLimit()), request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("multiple", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(parms.getMultiple()), request.getCharacterEncoding()), out, false);
      out.write("\n");
      out.write("              ");
 } 
      out.write("\n");
      out.write("            ");
 } 
      out.write("          \n");
      out.write("\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/includes/bootstrap-footer.jsp", out, false);
      out.write('\n');
      out.write('\n');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_onms_005ffavorite_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  onms:favorite
    org.opennms.web.tags.FavoriteTag _jspx_th_onms_005ffavorite_005f0 = (org.opennms.web.tags.FavoriteTag) _005fjspx_005ftagPool_005fonms_005ffavorite_0026_005fparameters_005ffavorite_005fdeleteFavoriteController_005fcreateFavoriteController_005fcontext_005fcallback_005fnobody.get(org.opennms.web.tags.FavoriteTag.class);
    boolean _jspx_th_onms_005ffavorite_005f0_reused = false;
    try {
      _jspx_th_onms_005ffavorite_005f0.setPageContext(_jspx_page_context);
      _jspx_th_onms_005ffavorite_005f0.setParent(null);
      // /WEB-INF/jsp/event/list.jsp(254,0) name = favorite type = org.opennms.netmgt.model.OnmsFilterFavorite reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_onms_005ffavorite_005f0.setFavorite((org.opennms.netmgt.model.OnmsFilterFavorite) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${favorite}", org.opennms.netmgt.model.OnmsFilterFavorite.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/jsp/event/list.jsp(254,0) name = parameters type = org.opennms.web.filter.QueryParameters reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_onms_005ffavorite_005f0.setParameters((org.opennms.web.filter.QueryParameters) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${parms}", org.opennms.web.filter.QueryParameters.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/jsp/event/list.jsp(254,0) name = callback type = org.opennms.web.tags.filters.FilterCallback reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_onms_005ffavorite_005f0.setCallback((org.opennms.web.tags.filters.FilterCallback) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${callback}", org.opennms.web.tags.filters.FilterCallback.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/jsp/event/list.jsp(254,0) name = context type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_onms_005ffavorite_005f0.setContext("/event/list");
      // /WEB-INF/jsp/event/list.jsp(254,0) name = createFavoriteController type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_onms_005ffavorite_005f0.setCreateFavoriteController("/event/createFavorite");
      // /WEB-INF/jsp/event/list.jsp(254,0) name = deleteFavoriteController type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_onms_005ffavorite_005f0.setDeleteFavoriteController("/event/deleteFavorite");
      int _jspx_eval_onms_005ffavorite_005f0 = _jspx_th_onms_005ffavorite_005f0.doStartTag();
      if (_jspx_th_onms_005ffavorite_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fonms_005ffavorite_0026_005fparameters_005ffavorite_005fdeleteFavoriteController_005fcreateFavoriteController_005fcontext_005fcallback_005fnobody.reuse(_jspx_th_onms_005ffavorite_005f0);
      _jspx_th_onms_005ffavorite_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_onms_005ffavorite_005f0, _jsp_getInstanceManager(), _jspx_th_onms_005ffavorite_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("      ");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("      ");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("      ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/jsp/event/list.jsp(272,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${favorite == null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("      <button class=\"btn btn-secondary\" onclick=\"createFavorite()\">\n");
          out.write("        <!-- Star outline -->\n");
          out.write("        <i class=\"fa fa-lg fa-star-o\"></i>\n");
          out.write("      </button>\n");
          out.write("      ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("      <button class=\"btn btn-secondary\" onclick=\"deleteFavorite(");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${favorite.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(")\">\n");
          out.write("        <i class=\"fa fa-lg fa-star\"></i>\n");
          out.write("      </button>\n");
          out.write("      ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f1 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f1_reused = false;
    try {
      _jspx_th_c_005fout_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f1.setParent(null);
      // /WEB-INF/jsp/event/list.jsp(286,121) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${favorite.name}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f1 = _jspx_th_c_005fout_005f1.doStartTag();
      if (_jspx_th_c_005fout_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
      _jspx_th_c_005fout_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/jsp/event/list.jsp(291,10) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("fave");
      // /WEB-INF/jsp/event/list.jsp(291,10) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/event/list.jsp(291,10) '${favorites}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${favorites}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("            ");
            if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\n");
            out.write("          ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/jsp/event/list.jsp(292,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${favorite.id != fave.id}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("              <li class=\"dropdown-item\">\n");
          out.write("                <a onclick=\"changeFavorite(");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fave.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(',');
          out.write(' ');
          out.write('\'');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fave.filter}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("')\">\n");
          out.write("                  ");
          if (_jspx_meth_c_005fout_005f2(_jspx_th_c_005fif_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\n");
          out.write("                </a>\n");
          out.write("              </li>\n");
          out.write("              ");
          if (_jspx_meth_c_005fset_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\n");
          out.write("            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f2 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f2_reused = false;
    try {
      _jspx_th_c_005fout_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /WEB-INF/jsp/event/list.jsp(295,18) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f2.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fave.name}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f2 = _jspx_th_c_005fout_005f2.doStartTag();
      if (_jspx_th_c_005fout_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
      _jspx_th_c_005fout_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /WEB-INF/jsp/event/list.jsp(298,14) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("showDivider");
      // /WEB-INF/jsp/event/list.jsp(298,14) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/event/list.jsp(298,14) '${true}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${true}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/jsp/event/list.jsp(301,10) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${showDivider}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("<li class=\"dropdown-divider\"/>");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_onms_005ffilters_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  onms:filters
    org.opennms.web.tags.FiltersTag _jspx_th_onms_005ffilters_005f0 = (org.opennms.web.tags.FiltersTag) _005fjspx_005ftagPool_005fonms_005ffilters_0026_005fshowRemoveLink_005fshowAcknowledgeFilter_005fparameters_005ffavorite_005fcontext_005fcallback_005facknowledgeFilterSuffix_005facknowledgeFilterPrefix_005fnobody.get(org.opennms.web.tags.FiltersTag.class);
    boolean _jspx_th_onms_005ffilters_005f0_reused = false;
    try {
      _jspx_th_onms_005ffilters_005f0.setPageContext(_jspx_page_context);
      _jspx_th_onms_005ffilters_005f0.setParent(null);
      // /WEB-INF/jsp/event/list.jsp(310,20) name = context type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_onms_005ffilters_005f0.setContext("/event/list");
      // /WEB-INF/jsp/event/list.jsp(310,20) name = favorite type = org.opennms.netmgt.model.OnmsFilterFavorite reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_onms_005ffilters_005f0.setFavorite((org.opennms.netmgt.model.OnmsFilterFavorite) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${favorite}", org.opennms.netmgt.model.OnmsFilterFavorite.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/jsp/event/list.jsp(310,20) name = parameters type = org.opennms.web.filter.QueryParameters reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_onms_005ffilters_005f0.setParameters((org.opennms.web.filter.QueryParameters) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${parms}", org.opennms.web.filter.QueryParameters.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/jsp/event/list.jsp(310,20) name = showRemoveLink type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_onms_005ffilters_005f0.setShowRemoveLink("true");
      // /WEB-INF/jsp/event/list.jsp(310,20) name = showAcknowledgeFilter type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_onms_005ffilters_005f0.setShowAcknowledgeFilter("true");
      // /WEB-INF/jsp/event/list.jsp(310,20) name = acknowledgeFilterPrefix type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_onms_005ffilters_005f0.setAcknowledgeFilterPrefix("Event(s)");
      // /WEB-INF/jsp/event/list.jsp(310,20) name = acknowledgeFilterSuffix type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_onms_005ffilters_005f0.setAcknowledgeFilterSuffix("event(s)");
      // /WEB-INF/jsp/event/list.jsp(310,20) name = callback type = org.opennms.web.tags.filters.FilterCallback reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_onms_005ffilters_005f0.setCallback((org.opennms.web.tags.filters.FilterCallback) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${callback}", org.opennms.web.tags.filters.FilterCallback.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_onms_005ffilters_005f0 = _jspx_th_onms_005ffilters_005f0.doStartTag();
      if (_jspx_th_onms_005ffilters_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fonms_005ffilters_0026_005fshowRemoveLink_005fshowAcknowledgeFilter_005fparameters_005ffavorite_005fcontext_005fcallback_005facknowledgeFilterSuffix_005facknowledgeFilterPrefix_005fnobody.reuse(_jspx_th_onms_005ffilters_005f0);
      _jspx_th_onms_005ffilters_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_onms_005ffilters_005f0, _jsp_getInstanceManager(), _jspx_th_onms_005ffilters_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_onms_005falert_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  onms:alert
    org.opennms.web.tags.AlertTag _jspx_th_onms_005falert_005f0 = new org.opennms.web.tags.AlertTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_onms_005falert_005f0);
    try {
      _jspx_th_onms_005falert_005f0.setJspContext(_jspx_page_context);
      _jspx_th_onms_005falert_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_onms_005falert_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_onms_005fdatetime_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  onms:datetime
    org.opennms.web.tags.DateTimeTag _jspx_th_onms_005fdatetime_005f0 = new org.opennms.web.tags.DateTimeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_onms_005fdatetime_005f0);
    try {
      _jspx_th_onms_005fdatetime_005f0.setJspContext(_jspx_page_context);
      // /WEB-INF/jsp/event/list.jsp(414,16) name = date type = java.util.Date reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_onms_005fdatetime_005f0.setDate((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${event.time}", java.util.Date.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      _jspx_th_onms_005fdatetime_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_onms_005fdatetime_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f4 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f4_reused = false;
    try {
      _jspx_th_c_005fout_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f4.setParent(null);
      // /WEB-INF/jsp/event/list.jsp(488,25) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f4.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${interfaceLink}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f4 = _jspx_th_c_005fout_005f4.doStartTag();
      if (_jspx_th_c_005fout_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f4);
      _jspx_th_c_005fout_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f5 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f5_reused = false;
    try {
      _jspx_th_c_005fout_005f5.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f5.setParent(null);
      // /WEB-INF/jsp/event/list.jsp(511,25) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f5.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceLink}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f5 = _jspx_th_c_005fout_005f5.doStartTag();
      if (_jspx_th_c_005fout_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f5);
      _jspx_th_c_005fout_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f5, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f5_reused);
    }
    return false;
  }
}
