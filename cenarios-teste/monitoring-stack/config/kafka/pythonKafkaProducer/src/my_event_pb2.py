# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/my-event.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x12src/my-event.proto\"-\n\x0e\x45ventParameter\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"\x91\x02\n\x05\x45vent\x12\x0b\n\x03uei\x18\x01 \x01(\t\x12\x0e\n\x06source\x18\x02 \x01(\t\x12\x1b\n\x08severity\x18\x03 \x01(\x0e\x32\t.Severity\x12\x0c\n\x04host\x18\x04 \x01(\t\x12\x0f\n\x07node_id\x18\x05 \x01(\r\x12\x12\n\nip_address\x18\x06 \x01(\t\x12\x14\n\x0cservice_name\x18\x07 \x01(\t\x12\x10\n\x08if_index\x18\x08 \x01(\r\x12\x13\n\x0b\x64\x65scription\x18\t \x01(\t\x12\x13\n\x0b\x64ist_poller\x18\n \x01(\t\x12\x10\n\x08log_dest\x18\x0b \x01(\t\x12\x13\n\x0blog_content\x18\x0c \x01(\t\x12\"\n\tparameter\x18\r \x03(\x0b\x32\x0f.EventParameter*g\n\x08Severity\x12\x11\n\rINDETERMINATE\x10\x00\x12\x0b\n\x07\x43LEARED\x10\x01\x12\n\n\x06NORMAL\x10\x02\x12\x0b\n\x07WARNING\x10\x03\x12\t\n\x05MINOR\x10\x04\x12\t\n\x05MAJOR\x10\x05\x12\x0c\n\x08\x43RITICAL\x10\x06\x42\x39\n*org.opennms.features.kafka.consumer.eventsB\x0b\x45ventsProtob\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'src.my_event_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n*org.opennms.features.kafka.consumer.eventsB\013EventsProto'
  _SEVERITY._serialized_start=345
  _SEVERITY._serialized_end=448
  _EVENTPARAMETER._serialized_start=22
  _EVENTPARAMETER._serialized_end=67
  _EVENT._serialized_start=70
  _EVENT._serialized_end=343
# @@protoc_insertion_point(module_scope)
