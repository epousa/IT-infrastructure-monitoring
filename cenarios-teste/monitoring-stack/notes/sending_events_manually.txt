É possível mandar eventos MANUALMENTE por sockets TCP através do port 5817 diretamente para o daemon eventd.
A alternativa a isto é enviar eventos através de HTTP POST requests utilizando a interface REST.

################################## Sockets tcp #################################################
- Definir o port 5817 no container do openNMS no docker-compose
- Configurar o ficheiro evend-configuration.xml para fazer com que o daemon eventd fique a ouvir em qualquer IP (TCPAddress="0.0.0.0") e não fique limitado ao IP de loopback.
Se este passo não for realizado a conexão é recusada

- script em perl

################################## HTTP Post ###################################################
Por exemplo:

curl -u admin \
-X POST \
-d "<event><uei>uei.foohello</uei><interface>192.168.1.30</interface><source></source><nodeid>1</nodeid><descr>something</descr><logmsg>logndisplay</logmsg><severity>Normal</severity></event>" \
-H "Content-Type: application/xml" http://192.168.1.30:8980/opennms/rest/events


Formato que se está à espera com quando se faz POST de evento:

Failed to marshal/unmarshal XML file while unmarshalling an object (Event): javax.xml.bind.UnmarshalException: unexpected element (uri:"http://xmlns.opennms.org/xsd/event", local:"node_id"). Expected elements are <{http://xmlns.opennms.org/xsd/event}forward>,<{http://xmlns.opennms.org/xsd/event}pathoutage>,<{http://xmlns.opennms.org/xsd/event}logmsg>,<{http://xmlns.opennms.org/xsd/event}severity>,<{http://xmlns.opennms.org/xsd/event}script>,<{http://xmlns.opennms.org/xsd/event}operinstruct>,<{http://xmlns.opennms.org/xsd/event}dbid>,<{http://xmlns.opennms.org/xsd/event}service>,<{http://xmlns.opennms.org/xsd/event}correlation>,<{http://xmlns.opennms.org/xsd/event}descr>,<{http://xmlns.opennms.org/xsd/event}ifAlias>,<{http://xmlns.opennms.org/xsd/event}master-station>,<{http://xmlns.opennms.org/xsd/event}time>,<{http://xmlns.opennms.org/xsd/event}tticket>,<{http://xmlns.opennms.org/xsd/event}autoaction>,<{http://xmlns.opennms.org/xsd/event}ifIndex>,<{http://xmlns.opennms.org/xsd/event}loggroup>,<{http://xmlns.opennms.org/xsd/event}mouseovertext>,<{http://xmlns.opennms.org/xsd/event}interface>,<{http://xmlns.opennms.org/xsd/event}snmp>,<{http://xmlns.opennms.org/xsd/event}source>,<{http://xmlns.opennms.org/xsd/event}creation-time>,<{http://xmlns.opennms.org/xsd/event}snmphost>,<{http://xmlns.opennms.org/xsd/event}dist-poller>,<{http://xmlns.opennms.org/xsd/event}alarm-data>,<{http://xmlns.opennms.org/xsd/event}operaction>,<{http://xmlns.opennms.org/xsd/event}parms>,<{http://xmlns.opennms.org/xsd/event}mask>,<{http://xmlns.opennms.org/xsd/event}nodeid>,<{http://xmlns.opennms.org/xsd/event}uei>,<{http://xmlns.opennms.org/xsd/event}host>,<{http://xmlns.opennms.org/xsd/event}autoacknowledge>; nested exception is javax.xml.bind.UnmarshalException: unexpected element (uri:"http://xmlns.opennms.org/xsd/event", local:"node_id").

Parametros que definem o evento:

forward
pathoutage
logmsg
severity
script
operinstruct
dbid
service
correlation
descr
ifAlias
master-station
time
tticket
autoaction
ifIndex
loggroup
mouseovertext
interface
snmp
source
creation-time
snmphost
dist-poller
alarm-data
operaction
parms
mask
nodeid
uei
host
autoacknowledge
