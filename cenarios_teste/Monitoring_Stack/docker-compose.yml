version: '3'

networks:
  monitoring:
    driver: bridge

volumes:
  data-postgres: {}
  data-opennms: {}
  data-grafana: {}

services:
  database:
    image: postgres:latest
    container_name: database
    environment:
      - TZ=Europe/Lisbon
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - data-postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 30s
      retries: 3
    networks:
      - monitoring

  horizon:
    image: opennms/horizon:latest
    container_name: horizon
    environment:
      - TZ=Europe/Lisbon
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - OPENNMS_DBNAME=opennms
      - OPENNMS_DBUSER=opennms
      - OPENNMS_DBPASS=opennms
    volumes:
      - data-opennms:/opt/opennms/share/rrd
      - ./overlay:/opt/opennms-overlay
    command: ["-s"]
    ports:
      - "8980:8980/tcp"
      - "8101:8101/tcp"
      - "61616:61616/tcp"
    healthcheck:
      test: [ "CMD", "curl", "-f", "-I", "http://localhost:8980/opennms/login.jsp" ]
      interval: 1m
      timeout: 5s
      retries: 3
    networks:
      - monitoring

  grafana:
      image: opennms/helm:latest
      container_name: grafana
      environment:
          - TZ=Europe/Lisbon
      env_file:
          - /home/epousa/Desktop/testing_zone/grafana/grafana.env
      volumes:
          - data-grafana:/var/lib/grafana
      healthcheck:
          test: ["CMD", "curl", "-f", "-I", "http://localhost:3000/login"]
          interval: 1m
          timeout: 5s
          retries: 3
      restart: unless-stopped
      ports:
          - "3000:3000"
      networks:
          - monitoring